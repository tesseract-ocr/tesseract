{"version":3,"sources":["../../src/export/worker.ts"],"sourcesContent":["import type {\n  ExportPagesInput,\n  ExportPageInput,\n  ExportPageResult,\n  ExportRouteResult,\n  ExportedPageFile,\n  FileWriter,\n  WorkerRenderOpts,\n  ExportPagesResult,\n} from './types'\n\nimport '../server/node-environment'\n\nprocess.env.NEXT_IS_EXPORT_WORKER = 'true'\n\nimport { extname, join, dirname, sep } from 'path'\nimport fs from 'fs/promises'\nimport { loadComponents } from '../server/load-components'\nimport { isDynamicRoute } from '../shared/lib/router/utils/is-dynamic'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { trace } from '../trace'\nimport { setHttpClientAndAgentOptions } from '../server/setup-http-agent-env'\nimport isError from '../lib/is-error'\nimport { addRequestMeta } from '../server/request-meta'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { createRequestResponseMocks } from '../server/lib/mock-request'\nimport { isAppRouteRoute } from '../lib/is-app-route-route'\nimport { hasNextSupport } from '../server/ci-info'\nimport { exportAppRoute } from './routes/app-route'\nimport { exportAppPage, prospectiveRenderAppPage } from './routes/app-page'\nimport { exportPagesPage } from './routes/pages'\nimport { getParams } from './helpers/get-params'\nimport { createIncrementalCache } from './helpers/create-incremental-cache'\nimport { isPostpone } from '../server/lib/router-utils/is-postpone'\nimport { isDynamicUsageError } from './helpers/is-dynamic-usage-error'\nimport { isBailoutToCSRError } from '../shared/lib/lazy-dynamic/bailout-to-csr'\nimport {\n  turborepoTraceAccess,\n  TurborepoAccessTraceResult,\n} from '../build/turborepo-access-trace'\nimport type { Params } from '../server/request/params'\nimport {\n  getFallbackRouteParams,\n  type FallbackRouteParams,\n} from '../server/request/fallback-params'\nimport { needsExperimentalReact } from '../lib/needs-experimental-react'\nimport type { AppRouteRouteModule } from '../server/route-modules/app-route/module.compiled'\nimport { isStaticGenBailoutError } from '../client/components/static-generation-bailout'\n\nconst envConfig = require('../shared/lib/runtime-config.external')\n\n;(globalThis as any).__NEXT_DATA__ = {\n  nextExport: true,\n}\n\nclass TimeoutError extends Error {\n  code = 'NEXT_EXPORT_TIMEOUT_ERROR'\n}\n\nclass ExportPageError extends Error {\n  code = 'NEXT_EXPORT_PAGE_ERROR'\n}\n\nasync function exportPageImpl(\n  input: ExportPageInput,\n  fileWriter: FileWriter\n): Promise<ExportRouteResult | undefined> {\n  const {\n    path,\n    pathMap,\n    distDir,\n    pagesDataDir,\n    buildExport = false,\n    serverRuntimeConfig,\n    subFolders = false,\n    optimizeCss,\n    disableOptimizedLoading,\n    debugOutput = false,\n    enableExperimentalReact,\n    ampValidatorPath,\n    trailingSlash,\n  } = input\n\n  if (enableExperimentalReact) {\n    process.env.__NEXT_EXPERIMENTAL_REACT = 'true'\n  }\n\n  const {\n    page,\n\n    // The parameters that are currently unknown.\n    _fallbackRouteParams = [],\n\n    // Check if this is an `app/` page.\n    _isAppDir: isAppDir = false,\n\n    // Check if this should error when dynamic usage is detected.\n    _isDynamicError: isDynamicError = false,\n\n    // If this page supports partial prerendering, then we need to pass that to\n    // the renderOpts.\n    _isRoutePPREnabled: isRoutePPREnabled,\n\n    // If this is a prospective render, we don't actually want to persist the\n    // result, we just want to use it to error the build if there's a problem.\n    _isProspectiveRender: isProspectiveRender = false,\n\n    // Pull the original query out.\n    query: originalQuery = {},\n  } = pathMap\n\n  const fallbackRouteParams: FallbackRouteParams | null =\n    getFallbackRouteParams(_fallbackRouteParams)\n\n  let query = { ...originalQuery }\n  const pathname = normalizeAppPath(page)\n  const isDynamic = isDynamicRoute(page)\n  const outDir = isAppDir ? join(distDir, 'server/app') : input.outDir\n\n  const filePath = normalizePagePath(path)\n  const ampPath = `${filePath}.amp`\n  let renderAmpPath = ampPath\n\n  let updatedPath = query.__nextSsgPath || path\n  delete query.__nextSsgPath\n\n  let locale = query.__nextLocale || input.renderOpts.locale\n  delete query.__nextLocale\n\n  if (input.renderOpts.locale) {\n    const localePathResult = normalizeLocalePath(path, input.renderOpts.locales)\n\n    if (localePathResult.detectedLocale) {\n      updatedPath = localePathResult.pathname\n      locale = localePathResult.detectedLocale\n\n      if (locale === input.renderOpts.defaultLocale) {\n        renderAmpPath = `${normalizePagePath(updatedPath)}.amp`\n      }\n    }\n  }\n\n  // We need to show a warning if they try to provide query values\n  // for an auto-exported page since they won't be available\n  const hasOrigQueryValues = Object.keys(originalQuery).length > 0\n\n  // Check if the page is a specified dynamic route\n  const { pathname: nonLocalizedPath } = normalizeLocalePath(\n    path,\n    input.renderOpts.locales\n  )\n\n  let params: Params | undefined\n\n  if (isDynamic && page !== nonLocalizedPath) {\n    const normalizedPage = isAppDir ? normalizeAppPath(page) : page\n\n    params = getParams(normalizedPage, updatedPath)\n  }\n\n  const { req, res } = createRequestResponseMocks({ url: updatedPath })\n\n  // If this is a status code page, then set the response code.\n  for (const statusCode of [404, 500]) {\n    if (\n      [\n        `/${statusCode}`,\n        `/${statusCode}.html`,\n        `/${statusCode}/index.html`,\n      ].some((p) => p === updatedPath || `/${locale}${p}` === updatedPath)\n    ) {\n      res.statusCode = statusCode\n    }\n  }\n\n  // Ensure that the URL has a trailing slash if it's configured.\n  if (trailingSlash && !req.url?.endsWith('/')) {\n    req.url += '/'\n  }\n\n  if (\n    locale &&\n    buildExport &&\n    input.renderOpts.domainLocales &&\n    input.renderOpts.domainLocales.some(\n      (dl) => dl.defaultLocale === locale || dl.locales?.includes(locale || '')\n    )\n  ) {\n    addRequestMeta(req, 'isLocaleDomain', true)\n  }\n\n  envConfig.setConfig({\n    serverRuntimeConfig,\n    publicRuntimeConfig: input.renderOpts.runtimeConfig,\n  })\n\n  const getHtmlFilename = (p: string) =>\n    subFolders ? `${p}${sep}index.html` : `${p}.html`\n\n  let htmlFilename = getHtmlFilename(filePath)\n\n  // dynamic routes can provide invalid extensions e.g. /blog/[...slug] returns an\n  // extension of `.slug]`\n  const pageExt = isDynamic || isAppDir ? '' : extname(page)\n  const pathExt = isDynamic || isAppDir ? '' : extname(path)\n\n  // force output 404.html for backwards compat\n  if (path === '/404.html') {\n    htmlFilename = path\n  }\n  // Make sure page isn't a folder with a dot in the name e.g. `v1.2`\n  else if (pageExt !== pathExt && pathExt !== '') {\n    const isBuiltinPaths = ['/500', '/404'].some(\n      (p) => p === path || p === path + '.html'\n    )\n    // If the ssg path has .html extension, and it's not builtin paths, use it directly\n    // Otherwise, use that as the filename instead\n    const isHtmlExtPath = !isBuiltinPaths && path.endsWith('.html')\n    htmlFilename = isHtmlExtPath ? getHtmlFilename(path) : path\n  } else if (path === '/') {\n    // If the path is the root, just use index.html\n    htmlFilename = 'index.html'\n  }\n\n  const baseDir = join(outDir, dirname(htmlFilename))\n  let htmlFilepath = join(outDir, htmlFilename)\n\n  await fs.mkdir(baseDir, { recursive: true })\n\n  const components = await loadComponents({\n    distDir,\n    page,\n    isAppPath: isAppDir,\n  })\n\n  // Handle App Routes.\n  if (isAppDir && isAppRouteRoute(page)) {\n    return exportAppRoute(\n      req,\n      res,\n      params,\n      page,\n      components.routeModule as AppRouteRouteModule,\n      input.renderOpts.incrementalCache,\n      input.renderOpts.cacheLifeProfiles,\n      htmlFilepath,\n      fileWriter,\n      input.renderOpts.experimental,\n      input.renderOpts.buildId\n    )\n  }\n\n  const renderOpts: WorkerRenderOpts = {\n    ...components,\n    ...input.renderOpts,\n    ampPath: renderAmpPath,\n    params,\n    optimizeCss,\n    disableOptimizedLoading,\n    locale,\n    supportsDynamicResponse: false,\n    experimental: {\n      ...input.renderOpts.experimental,\n      isRoutePPREnabled,\n    },\n  }\n\n  if (hasNextSupport) {\n    renderOpts.isRevalidate = true\n  }\n\n  // Handle App Pages\n  if (isAppDir) {\n    // If this is a prospective render, don't return any metrics or revalidate\n    // timings as we aren't persisting this render (it was only to error).\n    if (isProspectiveRender) {\n      return prospectiveRenderAppPage(\n        req,\n        res,\n        page,\n        pathname,\n        query,\n        fallbackRouteParams,\n        renderOpts\n      )\n    }\n\n    return exportAppPage(\n      req,\n      res,\n      page,\n      path,\n      pathname,\n      query,\n      fallbackRouteParams,\n      renderOpts,\n      htmlFilepath,\n      debugOutput,\n      isDynamicError,\n      fileWriter\n    )\n  }\n\n  return exportPagesPage(\n    req,\n    res,\n    path,\n    page,\n    query,\n    params,\n    htmlFilepath,\n    htmlFilename,\n    ampPath,\n    subFolders,\n    outDir,\n    ampValidatorPath,\n    pagesDataDir,\n    buildExport,\n    isDynamic,\n    hasOrigQueryValues,\n    renderOpts,\n    components,\n    fileWriter\n  )\n}\n\nexport async function exportPages(\n  input: ExportPagesInput\n): Promise<ExportPagesResult> {\n  const {\n    exportPathMap,\n    paths,\n    dir,\n    distDir,\n    outDir,\n    cacheHandler,\n    cacheMaxMemorySize,\n    fetchCacheKeyPrefix,\n    pagesDataDir,\n    renderOpts,\n    nextConfig,\n    options,\n  } = input\n\n  // If the fetch cache was enabled, we need to create an incremental\n  // cache instance for this page.\n  const incrementalCache = await createIncrementalCache({\n    cacheHandler,\n    cacheMaxMemorySize,\n    fetchCacheKeyPrefix,\n    distDir,\n    dir,\n    dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n    // skip writing to disk in minimal mode for now, pending some\n    // changes to better support it\n    flushToDisk: !hasNextSupport,\n    cacheHandlers: nextConfig.experimental.cacheHandlers,\n  })\n\n  renderOpts.incrementalCache = incrementalCache\n\n  const maxConcurrency =\n    nextConfig.experimental.staticGenerationMaxConcurrency ?? 8\n  const results: ExportPagesResult = []\n\n  const exportPageWithRetry = async (path: string, maxAttempts: number) => {\n    const pathMap = exportPathMap[path]\n    const { page } = exportPathMap[path]\n    const pageKey = page !== path ? `${page}: ${path}` : path\n    let attempt = 0\n    let result\n\n    while (attempt < maxAttempts) {\n      try {\n        result = await Promise.race<ExportPageResult | undefined>([\n          exportPage({\n            path,\n            pathMap,\n            distDir,\n            outDir,\n            pagesDataDir,\n            renderOpts,\n            ampValidatorPath:\n              nextConfig.experimental.amp?.validator || undefined,\n            trailingSlash: nextConfig.trailingSlash,\n            serverRuntimeConfig: nextConfig.serverRuntimeConfig,\n            subFolders: nextConfig.trailingSlash && !options.buildExport,\n            buildExport: options.buildExport,\n            optimizeCss: nextConfig.experimental.optimizeCss,\n            disableOptimizedLoading:\n              nextConfig.experimental.disableOptimizedLoading,\n            parentSpanId: input.parentSpanId,\n            httpAgentOptions: nextConfig.httpAgentOptions,\n            debugOutput: options.debugOutput,\n            enableExperimentalReact: needsExperimentalReact(nextConfig),\n          }),\n          // If exporting the page takes longer than the timeout, reject the promise.\n          new Promise((_, reject) => {\n            setTimeout(() => {\n              reject(new TimeoutError())\n            }, nextConfig.staticPageGenerationTimeout * 1000)\n          }),\n        ])\n\n        // If there was an error in the export, throw it immediately. In the catch block, we might retry the export,\n        // or immediately fail the build, depending on user configuration. We might also continue on and attempt other pages.\n        if (result && 'error' in result) {\n          throw new ExportPageError()\n        }\n\n        // If the export succeeds, break out of the retry loop\n        break\n      } catch (err) {\n        // The only error that should be caught here is an ExportError, as `exportPage` doesn't throw and instead returns an object with an `error` property.\n        // This is an overly cautious check to ensure that we don't accidentally catch an unexpected error.\n        if (!(err instanceof ExportPageError || err instanceof TimeoutError)) {\n          throw err\n        }\n\n        if (err instanceof TimeoutError) {\n          // If the export times out, we will restart the worker up to 3 times.\n          maxAttempts = 3\n        }\n\n        // We've reached the maximum number of attempts\n        if (attempt >= maxAttempts - 1) {\n          // Log a message if we've reached the maximum number of attempts.\n          // We only care to do this if maxAttempts was configured.\n          if (maxAttempts > 1) {\n            console.info(\n              `Failed to build ${pageKey} after ${maxAttempts} attempts.`\n            )\n          }\n          // If prerenderEarlyExit is enabled, we'll exit the build immediately.\n          if (nextConfig.experimental.prerenderEarlyExit) {\n            console.error(\n              `Export encountered an error on ${pageKey}, exiting the build.`\n            )\n            process.exit(1)\n          } else {\n            // Otherwise, this is a no-op. The build will continue, and a summary of failed pages will be displayed at the end.\n          }\n        } else {\n          // Otherwise, we have more attempts to make. Wait before retrying\n          if (err instanceof TimeoutError) {\n            console.info(\n              `Failed to build ${pageKey} (attempt ${attempt + 1} of ${maxAttempts}) because it took more than ${nextConfig.staticPageGenerationTimeout} seconds. Retrying again shortly.`\n            )\n          } else {\n            console.info(\n              `Failed to build ${pageKey} (attempt ${attempt + 1} of ${maxAttempts}). Retrying again shortly.`\n            )\n          }\n          await new Promise((r) => setTimeout(r, Math.random() * 500))\n        }\n      }\n\n      attempt++\n    }\n\n    return { result, path, pageKey }\n  }\n\n  for (let i = 0; i < paths.length; i += maxConcurrency) {\n    const subset = paths.slice(i, i + maxConcurrency)\n\n    const subsetResults = await Promise.all(\n      subset.map((path) =>\n        exportPageWithRetry(\n          path,\n          nextConfig.experimental.staticGenerationRetryCount ?? 1\n        )\n      )\n    )\n\n    results.push(...subsetResults)\n  }\n\n  return results\n}\n\nasync function exportPage(\n  input: ExportPageInput\n): Promise<ExportPageResult | undefined> {\n  trace('export-page', input.parentSpanId).setAttribute('path', input.path)\n\n  // Configure the http agent.\n  setHttpClientAndAgentOptions({\n    httpAgentOptions: input.httpAgentOptions,\n  })\n\n  const files: ExportedPageFile[] = []\n  const baseFileWriter: FileWriter = async (\n    type,\n    path,\n    content,\n    encodingOptions = 'utf-8'\n  ) => {\n    await fs.mkdir(dirname(path), { recursive: true })\n    await fs.writeFile(path, content, encodingOptions)\n    files.push({ type, path })\n  }\n\n  const exportPageSpan = trace('export-page-worker', input.parentSpanId)\n\n  const start = Date.now()\n\n  const turborepoAccessTraceResult = new TurborepoAccessTraceResult()\n\n  // Export the page.\n  let result: ExportRouteResult | undefined\n  try {\n    result = await exportPageSpan.traceAsyncFn(() =>\n      turborepoTraceAccess(\n        () => exportPageImpl(input, baseFileWriter),\n        turborepoAccessTraceResult\n      )\n    )\n\n    // If there was no result, then we can exit early.\n    if (!result) return\n\n    // If there was an error, then we can exit early.\n    if ('error' in result) {\n      return { error: result.error, duration: Date.now() - start, files: [] }\n    }\n  } catch (err) {\n    console.error(\n      `Error occurred prerendering page \"${input.path}\". Read more: https://nextjs.org/docs/messages/prerender-error`\n    )\n\n    // bailoutToCSRError errors should not leak to the user as they are not actionable; they're\n    // a framework signal\n    if (!isBailoutToCSRError(err)) {\n      // A static generation bailout error is a framework signal to fail static generation but\n      // and will encode a reason in the error message. If there is a message, we'll print it.\n      // Otherwise there's nothing to show as we don't want to leak an error internal error stack to the user.\n      if (isStaticGenBailoutError(err)) {\n        if (err.message) {\n          console.error(`Error: ${err.message}`)\n        }\n      } else if (isError(err) && err.stack) {\n        console.error(err.stack)\n      } else {\n        console.error(err)\n      }\n    }\n\n    return { error: true, duration: Date.now() - start, files: [] }\n  }\n\n  // Notify the parent process that we processed a page (used by the progress activity indicator)\n  process.send?.([3, { type: 'activity' }])\n\n  // Otherwise we can return the result.\n  return {\n    duration: Date.now() - start,\n    files,\n    ampValidations: result.ampValidations,\n    revalidate: result.revalidate,\n    metadata: result.metadata,\n    ssgNotFound: result.ssgNotFound,\n    hasEmptyPrelude: result.hasEmptyPrelude,\n    hasPostponed: result.hasPostponed,\n    turborepoAccessTraceResult: turborepoAccessTraceResult.serialize(),\n    fetchMetrics: result.fetchMetrics,\n  }\n}\n\nprocess.on('unhandledRejection', (err: unknown) => {\n  // if it's a postpone error, it'll be handled later\n  // when the postponed promise is actually awaited.\n  if (isPostpone(err)) {\n    return\n  }\n\n  // we don't want to log these errors\n  if (isDynamicUsageError(err)) {\n    return\n  }\n\n  console.error(err)\n})\n\nprocess.on('rejectionHandled', () => {\n  // It is ok to await a Promise late in Next.js as it allows for better\n  // prefetching patterns to avoid waterfalls. We ignore logging these.\n  // We should've already errored in anyway unhandledRejection.\n})\n\nconst FATAL_UNHANDLED_NEXT_API_EXIT_CODE = 78\n\nprocess.on('uncaughtException', (err) => {\n  if (isDynamicUsageError(err)) {\n    console.error(\n      'A Next.js API that uses exceptions to signal framework behavior was uncaught. This suggests improper usage of a Next.js API. The original error is printed below and the build will now exit.'\n    )\n    console.error(err)\n    process.exit(FATAL_UNHANDLED_NEXT_API_EXIT_CODE)\n  } else {\n    console.error(err)\n  }\n})\n"],"names":["process","env","NEXT_IS_EXPORT_WORKER","extname","join","dirname","sep","fs","loadComponents","isDynamicRoute","normalizePagePath","normalizeLocalePath","trace","setHttpClientAndAgentOptions","isError","addRequestMeta","normalizeAppPath","createRequestResponseMocks","isAppRouteRoute","hasNextSupport","exportAppRoute","exportAppPage","prospectiveRenderAppPage","exportPagesPage","getParams","createIncrementalCache","isPostpone","isDynamicUsageError","isBailoutToCSRError","turborepoTraceAccess","TurborepoAccessTraceResult","getFallbackRouteParams","needsExperimentalReact","isStaticGenBailoutError","envConfig","require","globalThis","__NEXT_DATA__","nextExport","TimeoutError","Error","code","ExportPageError","exportPageImpl","input","fileWriter","req","path","pathMap","distDir","pagesDataDir","buildExport","serverRuntimeConfig","subFolders","optimizeCss","disableOptimizedLoading","debugOutput","enableExperimentalReact","ampValidatorPath","trailingSlash","__NEXT_EXPERIMENTAL_REACT","page","_fallbackRouteParams","_isAppDir","isAppDir","_isDynamicError","isDynamicError","_isRoutePPREnabled","isRoutePPREnabled","_isProspectiveRender","isProspectiveRender","query","originalQuery","fallbackRouteParams","pathname","isDynamic","outDir","filePath","ampPath","renderAmpPath","updatedPath","__nextSsgPath","locale","__nextLocale","renderOpts","localePathResult","locales","detectedLocale","defaultLocale","hasOrigQueryValues","Object","keys","length","nonLocalizedPath","params","normalizedPage","res","url","statusCode","some","p","endsWith","domainLocales","dl","includes","setConfig","publicRuntimeConfig","runtimeConfig","getHtmlFilename","htmlFilename","pageExt","pathExt","isBuiltinPaths","isHtmlExtPath","baseDir","htmlFilepath","mkdir","recursive","components","isAppPath","routeModule","incrementalCache","cacheLifeProfiles","experimental","buildId","supportsDynamicResponse","isRevalidate","exportPages","exportPathMap","paths","dir","cacheHandler","cacheMaxMemorySize","fetchCacheKeyPrefix","nextConfig","options","dynamicIO","Boolean","flushToDisk","cacheHandlers","maxConcurrency","staticGenerationMaxConcurrency","results","exportPageWithRetry","maxAttempts","pageKey","attempt","result","Promise","race","exportPage","amp","validator","undefined","parentSpanId","httpAgentOptions","_","reject","setTimeout","staticPageGenerationTimeout","err","console","info","prerenderEarlyExit","error","exit","r","Math","random","i","subset","slice","subsetResults","all","map","staticGenerationRetryCount","push","setAttribute","files","baseFileWriter","type","content","encodingOptions","writeFile","exportPageSpan","start","Date","now","turborepoAccessTraceResult","traceAsyncFn","duration","message","stack","send","ampValidations","revalidate","metadata","ssgNotFound","hasEmptyPrelude","hasPostponed","serialize","fetchMetrics","on","FATAL_UNHANDLED_NEXT_API_EXIT_CODE"],"mappings":"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"}