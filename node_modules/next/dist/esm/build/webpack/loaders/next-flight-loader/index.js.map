{"version":3,"sources":["../../../../../src/build/webpack/loaders/next-flight-loader/index.ts"],"sourcesContent":["import type { webpack } from 'next/dist/compiled/webpack/webpack'\nimport { RSC_MOD_REF_PROXY_ALIAS } from '../../../../lib/constants'\nimport {\n  BARREL_OPTIMIZATION_PREFIX,\n  RSC_MODULE_TYPES,\n} from '../../../../shared/lib/constants'\nimport { warnOnce } from '../../../../shared/lib/utils/warn-once'\nimport { getRSCModuleInformation } from '../../../analysis/get-page-static-info'\nimport { formatBarrelOptimizedResource } from '../../utils'\nimport { getModuleBuildInfo } from '../get-module-build-info'\nimport type {\n  javascript,\n  LoaderContext,\n} from 'next/dist/compiled/webpack/webpack'\n\ntype SourceType = javascript.JavascriptParser['sourceType'] | 'commonjs'\n\nconst noopHeadPath = require.resolve('next/dist/client/components/noop-head')\n// For edge runtime it will be aliased to esm version by webpack\nconst MODULE_PROXY_PATH =\n  'next/dist/build/webpack/loaders/next-flight-loader/module-proxy'\n\nexport function getAssumedSourceType(\n  mod: webpack.Module,\n  sourceType: SourceType\n): SourceType {\n  const buildInfo = getModuleBuildInfo(mod)\n  const detectedClientEntryType = buildInfo?.rsc?.clientEntryType\n  const clientRefs = buildInfo?.rsc?.clientRefs || []\n\n  // It's tricky to detect the type of a client boundary, but we should always\n  // use the `module` type when we can, to support `export *` and `export from`\n  // syntax in other modules that import this client boundary.\n\n  if (sourceType === 'auto') {\n    if (detectedClientEntryType === 'auto') {\n      if (clientRefs.length === 0) {\n        // If there's zero export detected in the client boundary, and it's the\n        // `auto` type, we can safely assume it's a CJS module because it doesn't\n        // have ESM exports.\n        return 'commonjs'\n      } else if (!clientRefs.includes('*')) {\n        // Otherwise, we assume it's an ESM module.\n        return 'module'\n      }\n    } else if (detectedClientEntryType === 'cjs') {\n      return 'commonjs'\n    }\n  }\n\n  return sourceType\n}\n\nexport default function transformSource(\n  this: LoaderContext<undefined>,\n  source: string,\n  sourceMap: any\n) {\n  // Avoid buffer to be consumed\n  if (typeof source !== 'string') {\n    throw new Error('Expected source to have been transformed to a string.')\n  }\n\n  const module = this._module!\n\n  // Assign the RSC meta information to buildInfo.\n  // Exclude next internal files which are not marked as client files\n  const buildInfo = getModuleBuildInfo(module)\n  buildInfo.rsc = getRSCModuleInformation(source, true)\n\n  // Resource key is the unique identifier for the resource. When RSC renders\n  // a client module, that key is used to identify that module across all compiler\n  // layers.\n  //\n  // Usually it's the module's file path + the export name (e.g. `foo.js#bar`).\n  // But with Barrel Optimizations, one file can be splitted into multiple modules,\n  // so when you import `foo.js#bar` and `foo.js#baz`, they are actually different\n  // \"foo.js\" being created by the Barrel Loader (one only exports `bar`, the other\n  // only exports `baz`).\n  //\n  // Because of that, we must add another query param to the resource key to\n  // differentiate them.\n  let resourceKey: string = this.resourcePath\n  if (module.matchResource?.startsWith(BARREL_OPTIMIZATION_PREFIX)) {\n    resourceKey = formatBarrelOptimizedResource(\n      resourceKey,\n      module.matchResource\n    )\n  }\n\n  // A client boundary.\n  if (buildInfo.rsc?.type === RSC_MODULE_TYPES.client) {\n    const assumedSourceType = getAssumedSourceType(\n      module,\n      (module.parser as javascript.JavascriptParser).sourceType\n    )\n\n    const clientRefs = buildInfo.rsc.clientRefs!\n    const stringifiedResourceKey = JSON.stringify(resourceKey)\n\n    if (assumedSourceType === 'module') {\n      if (clientRefs.length === 0) {\n        return this.callback(null, 'export {}')\n      }\n\n      if (clientRefs.includes('*')) {\n        this.callback(\n          new Error(\n            `It's currently unsupported to use \"export *\" in a client boundary. Please use named exports instead.`\n          )\n        )\n        return\n      }\n\n      let esmSource = `\\\nimport { registerClientReference } from \"react-server-dom-webpack/server.edge\";\n`\n      for (const ref of clientRefs) {\n        if (ref === 'default') {\n          esmSource += `export default registerClientReference(\nfunction() { throw new Error(${JSON.stringify(`Attempted to call the default \\\nexport of ${stringifiedResourceKey} from the server, but it's on the client. \\\nIt's not possible to invoke a client function from the server, it can only be \\\nrendered as a Component or passed to props of a Client Component.`)}); },\n${stringifiedResourceKey},\n\"default\",\n);\\n`\n        } else {\n          esmSource += `export const ${ref} = registerClientReference(\nfunction() { throw new Error(${JSON.stringify(`Attempted to call ${ref}() from \\\nthe server but ${ref} is on the client. It's not possible to invoke a client \\\nfunction from the server, it can only be rendered as a Component or passed to \\\nprops of a Client Component.`)}); },\n${stringifiedResourceKey},\n${JSON.stringify(ref)},\n);`\n        }\n      }\n\n      return this.callback(null, esmSource, sourceMap)\n    } else if (assumedSourceType === 'commonjs') {\n      let cjsSource = `\\\nconst { createProxy } = require(\"${MODULE_PROXY_PATH}\")\n\nmodule.exports = createProxy(${stringifiedResourceKey})\n`\n\n      return this.callback(null, cjsSource, sourceMap)\n    }\n  }\n\n  if (buildInfo.rsc?.type !== RSC_MODULE_TYPES.client) {\n    if (noopHeadPath === this.resourcePath) {\n      warnOnce(\n        `Warning: You're using \\`next/head\\` inside the \\`app\\` directory, please migrate to the Metadata API. See https://nextjs.org/docs/app/building-your-application/upgrading/app-router-migration#step-3-migrating-nexthead for more details.`\n      )\n    }\n  }\n\n  const replacedSource = source.replace(\n    RSC_MOD_REF_PROXY_ALIAS,\n    MODULE_PROXY_PATH\n  )\n  this.callback(null, replacedSource, sourceMap)\n}\n"],"names":["RSC_MOD_REF_PROXY_ALIAS","BARREL_OPTIMIZATION_PREFIX","RSC_MODULE_TYPES","warnOnce","getRSCModuleInformation","formatBarrelOptimizedResource","getModuleBuildInfo","noopHeadPath","require","resolve","MODULE_PROXY_PATH","getAssumedSourceType","mod","sourceType","buildInfo","detectedClientEntryType","rsc","clientEntryType","clientRefs","length","includes","transformSource","source","sourceMap","module","Error","_module","resourceKey","resourcePath","matchResource","startsWith","type","client","assumedSourceType","parser","stringifiedResourceKey","JSON","stringify","callback","esmSource","ref","cjsSource","replacedSource","replace"],"mappings":"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"}