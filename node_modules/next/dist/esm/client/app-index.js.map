{"version":3,"sources":["../../src/client/app-index.tsx"],"sourcesContent":["// imports polyfill from `@next/polyfill-module` after build.\nimport '../build/polyfills/polyfill-module'\n\nimport './components/globals/patch-console'\nimport './components/globals/handle-global-errors'\n\nimport ReactDOMClient from 'react-dom/client'\nimport React, { use } from 'react'\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { createFromReadableStream } from 'react-server-dom-webpack/client'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { onRecoverableError } from './react-client-callbacks/shared'\nimport {\n  onCaughtError,\n  onUncaughtError,\n} from './react-client-callbacks/app-router'\nimport { callServer } from './app-call-server'\nimport { findSourceMapURL } from './app-find-source-map-url'\nimport {\n  type AppRouterActionQueue,\n  createMutableActionQueue,\n} from '../shared/lib/router/action-queue'\nimport AppRouter from './components/app-router'\nimport type { InitialRSCPayload } from '../server/app-render/types'\nimport { createInitialRouterState } from './components/router-reducer/create-initial-router-state'\nimport { MissingSlotContext } from '../shared/lib/app-router-context.shared-runtime'\nimport { setAppBuildId } from './app-build-id'\n\n/// <reference types=\"react-dom/experimental\" />\n\nconst appElement: HTMLElement | Document | null = document\n\nconst encoder = new TextEncoder()\n\nlet initialServerDataBuffer: (string | Uint8Array)[] | undefined = undefined\nlet initialServerDataWriter: ReadableStreamDefaultController | undefined =\n  undefined\nlet initialServerDataLoaded = false\nlet initialServerDataFlushed = false\n\nlet initialFormStateData: null | any = null\n\nfunction nextServerDataCallback(\n  seg:\n    | [isBootStrap: 0]\n    | [isNotBootstrap: 1, responsePartial: string]\n    | [isFormState: 2, formState: any]\n    | [isBinary: 3, responseBase64Partial: string]\n): void {\n  if (seg[0] === 0) {\n    initialServerDataBuffer = []\n  } else if (seg[0] === 1) {\n    if (!initialServerDataBuffer)\n      throw new Error('Unexpected server data: missing bootstrap script.')\n\n    if (initialServerDataWriter) {\n      initialServerDataWriter.enqueue(encoder.encode(seg[1]))\n    } else {\n      initialServerDataBuffer.push(seg[1])\n    }\n  } else if (seg[0] === 2) {\n    initialFormStateData = seg[1]\n  } else if (seg[0] === 3) {\n    if (!initialServerDataBuffer)\n      throw new Error('Unexpected server data: missing bootstrap script.')\n\n    // Decode the base64 string back to binary data.\n    const binaryString = atob(seg[1])\n    const decodedChunk = new Uint8Array(binaryString.length)\n    for (var i = 0; i < binaryString.length; i++) {\n      decodedChunk[i] = binaryString.charCodeAt(i)\n    }\n\n    if (initialServerDataWriter) {\n      initialServerDataWriter.enqueue(decodedChunk)\n    } else {\n      initialServerDataBuffer.push(decodedChunk)\n    }\n  }\n}\n\nfunction isStreamErrorOrUnfinished(ctr: ReadableStreamDefaultController) {\n  // If `desiredSize` is null, it means the stream is closed or errored. If it is lower than 0, the stream is still unfinished.\n  return ctr.desiredSize === null || ctr.desiredSize < 0\n}\n\n// There might be race conditions between `nextServerDataRegisterWriter` and\n// `DOMContentLoaded`. The former will be called when React starts to hydrate\n// the root, the latter will be called when the DOM is fully loaded.\n// For streaming, the former is called first due to partial hydration.\n// For non-streaming, the latter can be called first.\n// Hence, we use two variables `initialServerDataLoaded` and\n// `initialServerDataFlushed` to make sure the writer will be closed and\n// `initialServerDataBuffer` will be cleared in the right time.\nfunction nextServerDataRegisterWriter(ctr: ReadableStreamDefaultController) {\n  if (initialServerDataBuffer) {\n    initialServerDataBuffer.forEach((val) => {\n      ctr.enqueue(typeof val === 'string' ? encoder.encode(val) : val)\n    })\n    if (initialServerDataLoaded && !initialServerDataFlushed) {\n      if (isStreamErrorOrUnfinished(ctr)) {\n        ctr.error(\n          new Error(\n            'The connection to the page was unexpectedly closed, possibly due to the stop button being clicked, loss of Wi-Fi, or an unstable internet connection.'\n          )\n        )\n      } else {\n        ctr.close()\n      }\n      initialServerDataFlushed = true\n      initialServerDataBuffer = undefined\n    }\n  }\n\n  initialServerDataWriter = ctr\n}\n\n// When `DOMContentLoaded`, we can close all pending writers to finish hydration.\nconst DOMContentLoaded = function () {\n  if (initialServerDataWriter && !initialServerDataFlushed) {\n    initialServerDataWriter.close()\n    initialServerDataFlushed = true\n    initialServerDataBuffer = undefined\n  }\n  initialServerDataLoaded = true\n}\n\n// It's possible that the DOM is already loaded.\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', DOMContentLoaded, false)\n} else {\n  // Delayed in marco task to ensure it's executed later than hydration\n  setTimeout(DOMContentLoaded)\n}\n\nconst nextServerDataLoadingGlobal = ((self as any).__next_f =\n  (self as any).__next_f || [])\nnextServerDataLoadingGlobal.forEach(nextServerDataCallback)\nnextServerDataLoadingGlobal.push = nextServerDataCallback\n\nconst readable = new ReadableStream({\n  start(controller) {\n    nextServerDataRegisterWriter(controller)\n  },\n})\n\nconst initialServerResponse = createFromReadableStream<InitialRSCPayload>(\n  readable,\n  { callServer, findSourceMapURL }\n)\n\n// React overrides `.then` and doesn't return a new promise chain,\n// so we wrap the action queue in a promise to ensure that its value\n// is defined when the promise resolves.\n// https://github.com/facebook/react/blob/163365a07872337e04826c4f501565d43dbd2fd4/packages/react-client/src/ReactFlightClient.js#L189-L190\nconst pendingActionQueue: Promise<AppRouterActionQueue> = new Promise(\n  (resolve, reject) => {\n    initialServerResponse.then(\n      (initialRSCPayload) => {\n        // setAppBuildId should be called only once, during JS initialization\n        // and before any components have hydrated.\n        setAppBuildId(initialRSCPayload.b)\n\n        resolve(\n          createMutableActionQueue(\n            createInitialRouterState({\n              initialFlightData: initialRSCPayload.f,\n              initialCanonicalUrlParts: initialRSCPayload.c,\n              initialParallelRoutes: new Map(),\n              location: window.location,\n              couldBeIntercepted: initialRSCPayload.i,\n              postponed: initialRSCPayload.s,\n              prerendered: initialRSCPayload.S,\n            })\n          )\n        )\n      },\n      (err: Error) => reject(err)\n    )\n  }\n)\n\nfunction ServerRoot(): React.ReactNode {\n  const initialRSCPayload = use(initialServerResponse)\n  const actionQueue = use<AppRouterActionQueue>(pendingActionQueue)\n\n  const router = (\n    <AppRouter\n      actionQueue={actionQueue}\n      globalErrorComponentAndStyles={initialRSCPayload.G}\n      assetPrefix={initialRSCPayload.p}\n    />\n  )\n\n  if (process.env.NODE_ENV === 'development' && initialRSCPayload.m) {\n    // We provide missing slot information in a context provider only during development\n    // as we log some additional information about the missing slots in the console.\n    return (\n      <MissingSlotContext value={initialRSCPayload.m}>\n        {router}\n      </MissingSlotContext>\n    )\n  }\n\n  return router\n}\n\nconst StrictModeIfEnabled = process.env.__NEXT_STRICT_MODE_APP\n  ? React.StrictMode\n  : React.Fragment\n\nfunction Root({ children }: React.PropsWithChildren<{}>) {\n  if (process.env.__NEXT_TEST_MODE) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      window.__NEXT_HYDRATED = true\n      window.__NEXT_HYDRATED_CB?.()\n    }, [])\n  }\n\n  return children\n}\n\nconst reactRootOptions = {\n  onRecoverableError,\n  onCaughtError,\n  onUncaughtError,\n} satisfies ReactDOMClient.RootOptions\n\nexport function hydrate() {\n  const reactEl = (\n    <StrictModeIfEnabled>\n      <HeadManagerContext.Provider value={{ appDir: true }}>\n        <Root>\n          <ServerRoot />\n        </Root>\n      </HeadManagerContext.Provider>\n    </StrictModeIfEnabled>\n  )\n\n  const rootLayoutMissingTags = window.__next_root_layout_missing_tags\n  const hasMissingTags = !!rootLayoutMissingTags?.length\n\n  const isError =\n    document.documentElement.id === '__next_error__' || hasMissingTags\n\n  if (isError) {\n    if (process.env.NODE_ENV !== 'production') {\n      const createDevOverlayElement =\n        require('./components/react-dev-overlay/client-entry').createDevOverlayElement\n      const errorTree = createDevOverlayElement(reactEl)\n      ReactDOMClient.createRoot(appElement as any, reactRootOptions).render(\n        errorTree\n      )\n    } else {\n      ReactDOMClient.createRoot(appElement as any, reactRootOptions).render(\n        reactEl\n      )\n    }\n  } else {\n    React.startTransition(() =>\n      (ReactDOMClient as any).hydrateRoot(appElement, reactEl, {\n        ...reactRootOptions,\n        formState: initialFormStateData,\n      })\n    )\n  }\n\n  // TODO-APP: Remove this logic when Float has GC built-in in development.\n  if (process.env.NODE_ENV !== 'production') {\n    const { linkGc } =\n      require('./app-link-gc') as typeof import('./app-link-gc')\n    linkGc()\n  }\n}\n"],"names":["ReactDOMClient","React","use","createFromReadableStream","HeadManagerContext","onRecoverableError","onCaughtError","onUncaughtError","callServer","findSourceMapURL","createMutableActionQueue","AppRouter","createInitialRouterState","MissingSlotContext","setAppBuildId","appElement","document","encoder","TextEncoder","initialServerDataBuffer","undefined","initialServerDataWriter","initialServerDataLoaded","initialServerDataFlushed","initialFormStateData","nextServerDataCallback","seg","Error","enqueue","encode","push","binaryString","atob","decodedChunk","Uint8Array","length","i","charCodeAt","isStreamErrorOrUnfinished","ctr","desiredSize","nextServerDataRegisterWriter","forEach","val","error","close","DOMContentLoaded","readyState","addEventListener","setTimeout","nextServerDataLoadingGlobal","self","__next_f","readable","ReadableStream","start","controller","initialServerResponse","pendingActionQueue","Promise","resolve","reject","then","initialRSCPayload","b","initialFlightData","f","initialCanonicalUrlParts","c","initialParallelRoutes","Map","location","window","couldBeIntercepted","postponed","s","prerendered","S","err","ServerRoot","actionQueue","router","globalErrorComponentAndStyles","G","assetPrefix","p","process","env","NODE_ENV","m","value","StrictModeIfEnabled","__NEXT_STRICT_MODE_APP","StrictMode","Fragment","Root","children","__NEXT_TEST_MODE","useEffect","__NEXT_HYDRATED","__NEXT_HYDRATED_CB","reactRootOptions","hydrate","reactEl","Provider","appDir","rootLayoutMissingTags","__next_root_layout_missing_tags","hasMissingTags","isError","documentElement","id","createDevOverlayElement","require","errorTree","createRoot","render","startTransition","hydrateRoot","formState","linkGc"],"mappings":"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"}