{"version":3,"sources":["../../../../src/lib/metadata/types/metadata-interface.ts"],"sourcesContent":["import type {\n  AlternateURLs,\n  Languages,\n  ResolvedAlternateURLs,\n} from './alternative-urls-types'\nimport type {\n  AppleWebApp,\n  AppLinks,\n  Facebook,\n  FormatDetection,\n  ItunesApp,\n  ResolvedAppleWebApp,\n  ResolvedAppLinks,\n  ResolvedFacebook,\n  ViewportLayout,\n} from './extra-types'\nimport type {\n  DeprecatedMetadataFields,\n  AbsoluteTemplateString,\n  Author,\n  ColorSchemeEnum,\n  Icon,\n  Icons,\n  IconURL,\n  ReferrerEnum,\n  ResolvedIcons,\n  ResolvedVerification,\n  Robots,\n  ResolvedRobots,\n  TemplateString,\n  Verification,\n  ThemeColorDescriptor,\n  Videos,\n} from './metadata-types'\nimport type { Manifest as ManifestFile } from './manifest-types'\nimport type { OpenGraph, ResolvedOpenGraph } from './opengraph-types'\nimport type { ResolvedTwitterMetadata, Twitter } from './twitter-types'\n\n/**\n * Metadata interface to describe all the metadata fields that can be set in a document.\n * @interface\n */\ninterface Metadata extends DeprecatedMetadataFields {\n  /**\n   * The base path and origin for absolute urls for various metadata links such as OpenGraph images.\n   */\n  metadataBase?: null | URL | undefined\n\n  /**\n   * The document title.\n   * @example\n   * ```tsx\n   * \"My Blog\"\n   * <title>My Blog</title>\n   *\n   * { default: \"Dashboard\", template: \"%s | My Website\" }\n   * <title>Dashboard | My Website</title>\n   *\n   * { absolute: \"My Blog\", template: \"%s | My Website\" }\n   * <title>My Blog</title>\n   * ```\n   */\n  title?: null | string | TemplateString | undefined\n\n  /**\n   * The document description, and optionally the OpenGraph and twitter descriptions.\n   * @example\n   * ```tsx\n   * \"My Blog Description\"\n   * <meta name=\"description\" content=\"My Blog Description\" />\n   * ```\n   */\n  description?: null | string | undefined\n\n  // Standard metadata names\n  // https://developer.mozilla.org/docs/Web/HTML/Element/meta/name\n\n  /**\n   * The application name.\n   * @example\n   * ```tsx\n   * \"My Blog\"\n   * <meta name=\"application-name\" content=\"My Blog\" />\n   * ```\n   */\n  applicationName?: null | string | undefined\n\n  /**\n   * The authors of the document.\n   * @example\n   * ```tsx\n   * [{ name: \"Next.js Team\", url: \"https://nextjs.org\" }]\n   *\n   * <meta name=\"author\" content=\"Next.js Team\" />\n   * <link rel=\"author\" href=\"https://nextjs.org\" />\n   * ```\n   */\n  authors?: null | Author | Array<Author> | undefined\n\n  /**\n   * The generator used for the document.\n   * @example\n   * ```tsx\n   * \"Next.js\"\n   *\n   * <meta name=\"generator\" content=\"Next.js\" />\n   * ```\n   */\n  generator?: null | string | undefined\n\n  /**\n   * The keywords for the document. If an array is provided, it will be flattened into a single tag with comma separation.\n   * @example\n   * ```tsx\n   * \"nextjs, react, blog\"\n   * <meta name=\"keywords\" content=\"nextjs, react, blog\" />\n   *\n   * [\"react\", \"server components\"]\n   * <meta name=\"keywords\" content=\"react, server components\" />\n   * ```\n   */\n  keywords?: null | string | Array<string> | undefined\n\n  /**\n   * The referrer setting for the document.\n   * @example\n   * ```tsx\n   * \"origin\"\n   * <meta name=\"referrer\" content=\"origin\" />\n   * ```\n   */\n  referrer?: null | ReferrerEnum | undefined\n\n  /**\n   * The theme color for the document.\n   * @deprecated Use `export const viewport: Viewport = { ... }` instead.\n   * @see https://nextjs.org/docs/app/api-reference/functions/generate-viewport#the-viewport-object\n   * @example\n   * ```tsx\n   * \"#000000\"\n   * <meta name=\"theme-color\" content=\"#000000\" />\n   *\n   * { media: \"(prefers-color-scheme: dark)\", color: \"#000000\" }\n   * <meta name=\"theme-color\" media=\"(prefers-color-scheme: dark)\" content=\"#000000\" />\n   *\n   * [\n   *  { media: \"(prefers-color-scheme: dark)\", color: \"#000000\" },\n   *  { media: \"(prefers-color-scheme: light)\", color: \"#ffffff\" }\n   * ]\n   * <meta name=\"theme-color\" media=\"(prefers-color-scheme: dark)\" content=\"#000000\" />\n   * <meta name=\"theme-color\" media=\"(prefers-color-scheme: light)\" content=\"#ffffff\" />\n   * ```\n   */\n  themeColor?:\n    | null\n    | string\n    | ThemeColorDescriptor\n    | ThemeColorDescriptor[]\n    | undefined\n\n  /**\n   * The color scheme for the document.\n   * @deprecated Use `export const viewport: Viewport = { ... }` instead.\n   * @see https://nextjs.org/docs/app/api-reference/functions/generate-viewport#the-viewport-object\n   * @example\n   * ```tsx\n   * \"dark\"\n   * <meta name=\"color-scheme\" content=\"dark\" />\n   * ```\n   */\n  colorScheme?: null | ColorSchemeEnum | undefined\n\n  /**\n   * The viewport setting for the document.\n   * @deprecated Use `export const viewport: Viewport = { ... }` instead.\n   * @see https://nextjs.org/docs/app/api-reference/functions/generate-viewport#the-viewport-object\n   * @example\n   * ```tsx\n   * { width: \"device-width\", initialScale: 1 }\n   * <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n   * ```\n   */\n  viewport?: null | string | ViewportLayout | undefined\n\n  /**\n   * The creator of the document.\n   * @example\n   * ```tsx\n   * \"Next.js Team\"\n   * <meta name=\"creator\" content=\"Next.js Team\" />\n   * ```\n   */\n  creator?: null | string | undefined\n\n  /**\n   * The publisher of the document.\n   * @example\n   *\n   * ```tsx\n   * \"Vercel\"\n   * <meta name=\"publisher\" content=\"Vercel\" />\n   * ```\n   */\n  publisher?: null | string | undefined\n\n  // https://developer.mozilla.org/docs/Web/HTML/Element/meta/name#other_metadata_names\n\n  /**\n   * The robots setting for the document.\n   *\n   * @see https://developer.mozilla.org/docs/Glossary/Robots.txt\n   * @example\n   * ```tsx\n   * \"index, follow\"\n   * <meta name=\"robots\" content=\"index, follow\" />\n   *\n   * { index: false, follow: false }\n   * <meta name=\"robots\" content=\"noindex, nofollow\" />\n   * ```\n   */\n  robots?: null | string | Robots | undefined\n\n  /**\n   * The canonical and alternate URLs for the document.\n   * @example\n   * ```tsx\n   * { canonical: \"https://example.com\" }\n   * <link rel=\"canonical\" href=\"https://example.com\" />\n   *\n   * { canonical: \"https://example.com\", hreflang: { \"en-US\": \"https://example.com/en-US\" } }\n   * <link rel=\"canonical\" href=\"https://example.com\" />\n   * <link rel=\"alternate\" href=\"https://example.com/en-US\" hreflang=\"en-US\" />\n   * ```\n   *\n   * Multiple titles example for alternate URLs except `canonical`:\n   * ```tsx\n   * {\n   *   canonical: \"https://example.com\",\n   *   types: {\n   *     'application/rss+xml': [\n   *       { url: 'blog.rss', title: 'rss' },\n   *       { url: 'blog/js.rss', title: 'js title' },\n   *     ],\n   *   },\n   * }\n   * <link rel=\"canonical\" href=\"https://example.com\" />\n   * <link rel=\"alternate\" href=\"https://example.com/blog.rss\" type=\"application/rss+xml\" title=\"rss\" />\n   * <link rel=\"alternate\" href=\"https://example.com/blog/js.rss\" type=\"application/rss+xml\" title=\"js title\" />\n   * ```\n   */\n  alternates?: null | AlternateURLs | undefined\n\n  /**\n   * The icons for the document. Defaults to rel=\"icon\".\n   *\n   * @see https://developer.mozilla.org/docs/Web/HTML/Attributes/rel#attr-icon\n   * @example\n   * ```tsx\n   * \"https://example.com/icon.png\"\n   * <link rel=\"icon\" href=\"https://example.com/icon.png\" />\n   *\n   * { icon: \"https://example.com/icon.png\", apple: \"https://example.com/apple-icon.png\" }\n   * <link rel=\"icon\" href=\"https://example.com/icon.png\" />\n   * <link rel=\"apple-touch-icon\" href=\"https://example.com/apple-icon.png\" />\n   *\n   * [{ rel: \"icon\", url: \"https://example.com/icon.png\" }, { rel: \"apple-touch-icon\", url: \"https://example.com/apple-icon.png\" }]\n   * <link rel=\"icon\" href=\"https://example.com/icon.png\" />\n   * <link rel=\"apple-touch-icon\" href=\"https://example.com/apple-icon.png\" />\n   * ```\n   */\n  icons?: null | IconURL | Array<Icon> | Icons | undefined\n\n  /**\n   * A web application manifest, as defined in the Web Application Manifest specification.\n   *\n   * @see https://developer.mozilla.org/docs/Web/Manifest\n   * @example\n   * ```tsx\n   * \"https://example.com/manifest.json\"\n   * <link rel=\"manifest\" href=\"https://example.com/manifest.json\" />\n   * ```\n   *\n   */\n  manifest?: null | string | URL | undefined\n\n  /**\n   * The Open Graph metadata for the document.\n   *\n   * @see https://ogp.me\n   * @example\n   * ```tsx\n   * {\n   *   type: \"website\",\n   *   url: \"https://example.com\",\n   *   title: \"My Website\",\n   *   description: \"My Website Description\",\n   *   siteName: \"My Website\",\n   *   images: [{\n   *     url: \"https://example.com/og.png\",\n   *   }],\n   * }\n   *\n   * <meta property=\"og:type\" content=\"website\" />\n   * <meta property=\"og:url\" content=\"https://example.com\" />\n   * <meta property=\"og:site_name\" content=\"My Website\" />\n   * <meta property=\"og:title\" content=\"My Website\" />\n   * <meta property=\"og:description\" content=\"My Website Description\" />\n   * <meta property=\"og:image\" content=\"https://example.com/og.png\" />\n   * ```\n   */\n  openGraph?: null | OpenGraph | undefined\n\n  /**\n   * The Twitter metadata for the document.\n   * @example\n   * ```tsx\n   * { card: \"summary_large_image\", site: \"@site\", creator: \"@creator\", images: \"https://example.com/og.png\" }\n   *\n   * <meta name=\"twitter:card\" content=\"summary_large_image\" />\n   * <meta name=\"twitter:site\" content=\"@site\" />\n   * <meta name=\"twitter:creator\" content=\"@creator\" />\n   * <meta name=\"twitter:title\" content=\"My Website\" />\n   * <meta name=\"twitter:description\" content=\"My Website Description\" />\n   * <meta name=\"twitter:image\" content=\"https://example.com/og.png\" />\n   * ```\n   *\n   */\n  twitter?: null | Twitter | undefined\n\n  /**\n   * The Facebook metadata for the document.\n   * You can specify either appId or admins, but not both.\n   * @example\n   * ```tsx\n   * { appId: \"12345678\" }\n   *\n   * <meta property=\"fb:app_id\" content=\"12345678\" />\n   * ```\n   *\n   * @example\n   * ```tsx\n   * { admins: [\"12345678\"] }\n   *\n   * <meta property=\"fb:admins\" content=\"12345678\" />\n   * ```\n   */\n  facebook?: null | Facebook | undefined\n\n  /**\n   * The common verification tokens for the document.\n   * @example\n   * ```tsx\n   * { verification: { google: \"1234567890\", yandex: \"1234567890\", \"me\": \"1234567890\" } }\n   * <meta name=\"google-site-verification\" content=\"1234567890\" />\n   * <meta name=\"yandex-verification\" content=\"1234567890\" />\n   * <meta name=\"me\" content=\"@me\" />\n   * ```\n   */\n  verification?: Verification | undefined\n\n  /**\n   * The Apple web app metadata for the document.\n   *\n   * @see https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html\n   * @example\n   * ```tsx\n   * { capable: true, title: \"My Website\", statusBarStyle: \"black-translucent\" }\n   * <meta name=\"mobile-web-app-capable\" content=\"yes\" />\n   * <meta name=\"apple-mobile-web-app-title\" content=\"My Website\" />\n   * <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" />\n   * ```\n   *\n   */\n  appleWebApp?: null | boolean | AppleWebApp | undefined\n\n  /**\n   * Indicates if devices should try to interpret various formats and make actionable links out of them. For example it controles\n   * if telephone numbers on mobile that can be clicked to dial or not.\n   * @example\n   * ```tsx\n   * { telephone: false }\n   * <meta name=\"format-detection\" content=\"telephone=no\" />\n   * ```\n   *\n   */\n  formatDetection?: null | FormatDetection | undefined\n\n  /**\n   * The metadata for the iTunes App.\n   * It adds the `name=\"apple-itunes-app\"` meta tag.\n   *\n   * @example\n   * ```tsx\n   * { app: { id: \"123456789\", affiliateData: \"123456789\", appArguments: \"123456789\" } }\n   * <meta name=\"apple-itunes-app\" content=\"app-id=123456789, affiliate-data=123456789, app-arguments=123456789\" />\n   * ```\n   */\n  itunes?: null | ItunesApp | undefined\n\n  /**\n   * A brief description of what this web-page is about. Not recommended, superseded by description.\n   * It adds the `name=\"abstract\"` meta tag.\n   *\n   * @see https://www.metatags.org/all-meta-tags-overview/meta-name-abstract/\n   * @example\n   * ```tsx\n   * \"My Website Description\"\n   * <meta name=\"abstract\" content=\"My Website Description\" />\n   * ```\n   */\n  abstract?: null | string | undefined\n\n  /**\n   * The Facebook AppLinks metadata for the document.\n   * @example\n   * ```tsx\n   * { ios: { appStoreId: \"123456789\", url: \"https://example.com\" }, android: { packageName: \"com.example\", url: \"https://example.com\" } }\n   *\n   * <meta property=\"al:ios:app_store_id\" content=\"123456789\" />\n   * <meta property=\"al:ios:url\" content=\"https://example.com\" />\n   * <meta property=\"al:android:package\" content=\"com.example\" />\n   * <meta property=\"al:android:url\" content=\"https://example.com\" />\n   * ```\n   */\n  appLinks?: null | AppLinks | undefined\n\n  /**\n   * The archives link rel property.\n   * @example\n   * ```tsx\n   * { archives: \"https://example.com/archives\" }\n   * <link rel=\"archives\" href=\"https://example.com/archives\" />\n   * ```\n   */\n  archives?: null | string | Array<string> | undefined\n\n  /**\n   * The assets link rel property.\n   * @example\n   * ```tsx\n   * \"https://example.com/assets\"\n   * <link rel=\"assets\" href=\"https://example.com/assets\" />\n   * ```\n   */\n  assets?: null | string | Array<string> | undefined\n\n  /**\n   * The bookmarks link rel property.\n   * @example\n   * ```tsx\n   * \"https://example.com/bookmarks\"\n   * <link rel=\"bookmarks\" href=\"https://example.com/bookmarks\" />\n   * ```\n   */\n  bookmarks?: null | string | Array<string> | undefined // This is technically against HTML spec but is used in wild\n\n  // meta name properties\n\n  /**\n   * The category meta name property.\n   * @example\n   * ```tsx\n   * \"My Category\"\n   * <meta name=\"category\" content=\"My Category\" />\n   * ```\n   */\n  category?: null | string | undefined\n\n  /**\n   * The classification meta name property.\n   * @example\n   * ```tsx\n   * \"My Classification\"\n   * <meta name=\"classification\" content=\"My Classification\" />\n   * ```\n   */\n  classification?: null | string | undefined\n\n  /**\n   * Arbitrary name/value pairs for the document.\n   */\n  other?:\n    | ({\n        [name: string]: string | number | Array<string | number>\n      } & DeprecatedMetadataFields)\n    | undefined\n}\n\ninterface ResolvedMetadata extends DeprecatedMetadataFields {\n  // origin and base path for absolute urls for various metadata links such as\n  // opengraph-image\n  metadataBase: null | URL\n\n  // The Document title and template if defined\n  title: null | AbsoluteTemplateString\n\n  // The Document description, and optionally the opengraph and twitter descriptions\n  description: null | string\n\n  // Standard metadata names\n  // https://developer.mozilla.org/docs/Web/HTML/Element/meta/name\n  applicationName: null | string\n  authors: null | Array<Author>\n  generator: null | string\n  // if you provide an array it will be flattened into a single tag with comma separation\n  keywords: null | Array<string>\n  referrer: null | ReferrerEnum\n  /**\n   * @deprecated\n   */\n  themeColor: null | ThemeColorDescriptor[]\n  /**\n   * @deprecated\n   */\n  colorScheme: null | ColorSchemeEnum\n  /**\n   * @deprecated\n   */\n  viewport: null | string\n  creator: null | string\n  publisher: null | string\n\n  // https://developer.mozilla.org/docs/Web/HTML/Element/meta/name#other_metadata_names\n  robots: null | ResolvedRobots\n\n  // The canonical and alternate URLs for this location\n  alternates: null | ResolvedAlternateURLs\n\n  // Defaults to rel=\"icon\" but the Icons type can be used\n  // to get more specific about rel types\n  icons: null | ResolvedIcons\n\n  openGraph: null | ResolvedOpenGraph\n\n  manifest: null | string | URL\n\n  twitter: null | ResolvedTwitterMetadata\n\n  facebook: null | ResolvedFacebook\n\n  // common verification tokens\n  verification: null | ResolvedVerification\n\n  // Apple web app metadata\n  // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html\n  appleWebApp: null | ResolvedAppleWebApp\n\n  // Should devices try to interpret various formats and make actionable links\n  // out of them? The canonical example is telephone numbers on mobile that can\n  // be clicked to dial\n  formatDetection: null | FormatDetection\n\n  // meta name=\"apple-itunes-app\"\n  itunes: null | ItunesApp\n\n  // meta name=\"abstract\"\n  // A brief description of what this web-page is about.\n  // Not recommended, superceded by description.\n  // https://www.metatags.org/all-meta-tags-overview/meta-name-abstract/\n  abstract: null | string\n\n  // Facebook AppLinks\n  appLinks: null | ResolvedAppLinks\n\n  // link rel properties\n  archives: null | Array<string>\n  assets: null | Array<string>\n  bookmarks: null | Array<string> // This is technically against HTML spec but is used in wild\n\n  // meta name properties\n  category: null | string\n  classification: null | string\n\n  // Arbitrary name/value pairs\n  other:\n    | null\n    | ({\n        [name: string]: string | number | Array<string | number>\n      } & DeprecatedMetadataFields)\n}\n\ntype RobotsFile = {\n  // Apply rules for all\n  rules:\n    | {\n        userAgent?: string | string[] | undefined\n        allow?: string | string[] | undefined\n        disallow?: string | string[] | undefined\n        crawlDelay?: number | undefined\n      }\n    // Apply rules for specific user agents\n    | Array<{\n        userAgent: string | string[]\n        allow?: string | string[] | undefined\n        disallow?: string | string[] | undefined\n        crawlDelay?: number | undefined\n      }>\n  sitemap?: string | string[] | undefined\n  host?: string | undefined\n}\n\ntype SitemapFile = Array<{\n  url: string\n  lastModified?: string | Date | undefined\n  changeFrequency?:\n    | 'always'\n    | 'hourly'\n    | 'daily'\n    | 'weekly'\n    | 'monthly'\n    | 'yearly'\n    | 'never'\n    | undefined\n  priority?: number | undefined\n  alternates?:\n    | {\n        languages?: Languages<string> | undefined\n      }\n    | undefined\n  images?: string[] | undefined\n  videos?: Videos[] | undefined\n}>\n\ntype ResolvingMetadata = Promise<ResolvedMetadata>\ndeclare namespace MetadataRoute {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  export type Robots = RobotsFile\n  export type Sitemap = SitemapFile\n  export type Manifest = ManifestFile\n}\n\ninterface Viewport extends ViewportLayout {\n  /**\n   * The theme color for the document.\n   * @example\n   *\n   * ```tsx\n   * \"#000000\"\n   * <meta name=\"theme-color\" content=\"#000000\" />\n   *\n   * { media: \"(prefers-color-scheme: dark)\", color: \"#000000\" }\n   * <meta name=\"theme-color\" media=\"(prefers-color-scheme: dark)\" content=\"#000000\" />\n   *\n   * [\n   *  { media: \"(prefers-color-scheme: dark)\", color: \"#000000\" },\n   *  { media: \"(prefers-color-scheme: light)\", color: \"#ffffff\" }\n   * ]\n   * <meta name=\"theme-color\" media=\"(prefers-color-scheme: dark)\" content=\"#000000\" />\n   * <meta name=\"theme-color\" media=\"(prefers-color-scheme: light)\" content=\"#ffffff\" />\n   * ```\n   */\n  themeColor?:\n    | null\n    | string\n    | ThemeColorDescriptor\n    | ThemeColorDescriptor[]\n    | undefined\n\n  /**\n   * The color scheme for the document.\n   * @example\n   *\n   * ```tsx\n   * \"dark\"\n   * <meta name=\"color-scheme\" content=\"dark\" />\n   * ```\n   */\n  colorScheme?: null | ColorSchemeEnum | undefined\n}\n\ntype ResolvingViewport = Promise<Viewport>\n\ninterface ResolvedViewport extends ViewportLayout {\n  themeColor: null | ThemeColorDescriptor[]\n  colorScheme: null | ColorSchemeEnum\n}\n\nexport type {\n  Metadata,\n  ResolvedMetadata,\n  ResolvingMetadata,\n  MetadataRoute,\n  Viewport,\n  ResolvingViewport,\n  ResolvedViewport,\n}\n"],"names":[],"mappings":"AAqqBA,WAQC"}