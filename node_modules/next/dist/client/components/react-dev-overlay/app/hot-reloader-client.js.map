{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/app/hot-reloader-client.tsx"],"sourcesContent":["import type { ReactNode } from 'react'\nimport { useCallback, useEffect, startTransition, useMemo, useRef } from 'react'\nimport stripAnsi from 'next/dist/compiled/strip-ansi'\nimport formatWebpackMessages from '../internal/helpers/format-webpack-messages'\nimport { useRouter } from '../../navigation'\nimport {\n  ACTION_BEFORE_REFRESH,\n  ACTION_BUILD_ERROR,\n  ACTION_BUILD_OK,\n  ACTION_DEBUG_INFO,\n  ACTION_REFRESH,\n  ACTION_STATIC_INDICATOR,\n  ACTION_UNHANDLED_ERROR,\n  ACTION_UNHANDLED_REJECTION,\n  ACTION_VERSION_INFO,\n  useErrorOverlayReducer,\n} from '../shared'\nimport { parseStack } from '../internal/helpers/parse-stack'\nimport ReactDevOverlay from './ReactDevOverlay'\nimport { useErrorHandler } from '../internal/helpers/use-error-handler'\nimport { RuntimeErrorHandler } from '../internal/helpers/runtime-error-handler'\nimport {\n  useSendMessage,\n  useTurbopack,\n  useWebsocket,\n  useWebsocketPing,\n} from '../internal/helpers/use-websocket'\nimport { parseComponentStack } from '../internal/helpers/parse-component-stack'\nimport type { VersionInfo } from '../../../../server/dev/parse-version-info'\nimport { HMR_ACTIONS_SENT_TO_BROWSER } from '../../../../server/dev/hot-reloader-types'\nimport type {\n  HMR_ACTION_TYPES,\n  TurbopackMsgToBrowser,\n} from '../../../../server/dev/hot-reloader-types'\nimport { extractModulesFromTurbopackMessage } from '../../../../server/dev/extract-modules-from-turbopack-message'\nimport { REACT_REFRESH_FULL_RELOAD_FROM_ERROR } from '../shared'\nimport type { HydrationErrorState } from '../internal/helpers/hydration-error-info'\nimport type { DebugInfo } from '../types'\nimport { useUntrackedPathname } from '../../navigation-untracked'\nimport { getReactStitchedError } from '../internal/helpers/stitched-error'\n\nexport interface Dispatcher {\n  onBuildOk(): void\n  onBuildError(message: string): void\n  onVersionInfo(versionInfo: VersionInfo): void\n  onDebugInfo(debugInfo: DebugInfo): void\n  onBeforeRefresh(): void\n  onRefresh(): void\n  onStaticIndicator(status: boolean): void\n}\n\nlet mostRecentCompilationHash: any = null\nlet __nextDevClientId = Math.round(Math.random() * 100 + Date.now())\nlet reloading = false\nlet startLatency: number | null = null\n\nlet pendingHotUpdateWebpack = Promise.resolve()\nlet resolvePendingHotUpdateWebpack: () => void = () => {}\nfunction setPendingHotUpdateWebpack() {\n  pendingHotUpdateWebpack = new Promise((resolve) => {\n    resolvePendingHotUpdateWebpack = () => {\n      resolve()\n    }\n  })\n}\n\nexport function waitForWebpackRuntimeHotUpdate() {\n  return pendingHotUpdateWebpack\n}\n\nfunction handleBeforeHotUpdateWebpack(\n  dispatcher: Dispatcher,\n  hasUpdates: boolean\n) {\n  if (hasUpdates) {\n    dispatcher.onBeforeRefresh()\n  }\n}\n\nfunction handleSuccessfulHotUpdateWebpack(\n  dispatcher: Dispatcher,\n  sendMessage: (message: string) => void,\n  updatedModules: ReadonlyArray<string>\n) {\n  resolvePendingHotUpdateWebpack()\n  dispatcher.onBuildOk()\n  reportHmrLatency(sendMessage, updatedModules)\n\n  dispatcher.onRefresh()\n}\n\nfunction reportHmrLatency(\n  sendMessage: (message: string) => void,\n  updatedModules: ReadonlyArray<string>\n) {\n  if (!startLatency) return\n  let endLatency = Date.now()\n  const latency = endLatency - startLatency\n  console.log(`[Fast Refresh] done in ${latency}ms`)\n  sendMessage(\n    JSON.stringify({\n      event: 'client-hmr-latency',\n      id: window.__nextDevClientId,\n      startTime: startLatency,\n      endTime: endLatency,\n      page: window.location.pathname,\n      updatedModules,\n      // Whether the page (tab) was hidden at the time the event occurred.\n      // This can impact the accuracy of the event's timing.\n      isPageHidden: document.visibilityState === 'hidden',\n    })\n  )\n}\n\n// There is a newer version of the code available.\nfunction handleAvailableHash(hash: string) {\n  // Update last known compilation hash.\n  mostRecentCompilationHash = hash\n}\n\n/**\n * Is there a newer version of this code available?\n * For webpack: Check if the hash changed compared to __webpack_hash__\n * For Turbopack: Always true because it doesn't have __webpack_hash__\n */\nfunction isUpdateAvailable() {\n  if (process.env.TURBOPACK) {\n    return true\n  }\n\n  /* globals __webpack_hash__ */\n  // __webpack_hash__ is the hash of the current compilation.\n  // It's a global variable injected by Webpack.\n  return mostRecentCompilationHash !== __webpack_hash__\n}\n\n// Webpack disallows updates in other states.\nfunction canApplyUpdates() {\n  // @ts-expect-error module.hot exists\n  return module.hot.status() === 'idle'\n}\nfunction afterApplyUpdates(fn: any) {\n  if (canApplyUpdates()) {\n    fn()\n  } else {\n    function handler(status: any) {\n      if (status === 'idle') {\n        // @ts-expect-error module.hot exists\n        module.hot.removeStatusHandler(handler)\n        fn()\n      }\n    }\n    // @ts-expect-error module.hot exists\n    module.hot.addStatusHandler(handler)\n  }\n}\n\nfunction performFullReload(err: any, sendMessage: any) {\n  const stackTrace =\n    err &&\n    ((err.stack && err.stack.split('\\n').slice(0, 5).join('\\n')) ||\n      err.message ||\n      err + '')\n\n  sendMessage(\n    JSON.stringify({\n      event: 'client-full-reload',\n      stackTrace,\n      hadRuntimeError: !!RuntimeErrorHandler.hadRuntimeError,\n      dependencyChain: err ? err.dependencyChain : undefined,\n    })\n  )\n\n  if (reloading) return\n  reloading = true\n  window.location.reload()\n}\n\n// Attempt to update code on the fly, fall back to a hard reload.\nfunction tryApplyUpdates(\n  onBeforeUpdate: (hasUpdates: boolean) => void,\n  onHotUpdateSuccess: (updatedModules: string[]) => void,\n  sendMessage: any,\n  dispatcher: Dispatcher\n) {\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    resolvePendingHotUpdateWebpack()\n    dispatcher.onBuildOk()\n    reportHmrLatency(sendMessage, [])\n    return\n  }\n\n  function handleApplyUpdates(err: any, updatedModules: string[] | null) {\n    if (err || RuntimeErrorHandler.hadRuntimeError || !updatedModules) {\n      if (err) {\n        console.warn(\n          '[Fast Refresh] performing full reload\\n\\n' +\n            \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\n            'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\n            'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\n            'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\n            'Fast Refresh requires at least one parent function component in your React tree.'\n        )\n      } else if (RuntimeErrorHandler.hadRuntimeError) {\n        console.warn(REACT_REFRESH_FULL_RELOAD_FROM_ERROR)\n      }\n      performFullReload(err, sendMessage)\n      return\n    }\n\n    const hasUpdates = Boolean(updatedModules.length)\n    if (typeof onHotUpdateSuccess === 'function') {\n      // Maybe we want to do something.\n      onHotUpdateSuccess(updatedModules)\n    }\n\n    if (isUpdateAvailable()) {\n      // While we were updating, there was a new update! Do it again.\n      tryApplyUpdates(\n        hasUpdates ? () => {} : onBeforeUpdate,\n        hasUpdates ? () => dispatcher.onBuildOk() : onHotUpdateSuccess,\n        sendMessage,\n        dispatcher\n      )\n    } else {\n      dispatcher.onBuildOk()\n      if (process.env.__NEXT_TEST_MODE) {\n        afterApplyUpdates(() => {\n          if (self.__NEXT_HMR_CB) {\n            self.__NEXT_HMR_CB()\n            self.__NEXT_HMR_CB = null\n          }\n        })\n      }\n    }\n  }\n\n  // https://webpack.js.org/api/hot-module-replacement/#check\n  // @ts-expect-error module.hot exists\n  module.hot\n    .check(/* autoApply */ false)\n    .then((updatedModules: any[] | null) => {\n      if (!updatedModules) {\n        return null\n      }\n\n      if (typeof onBeforeUpdate === 'function') {\n        const hasUpdates = Boolean(updatedModules.length)\n        onBeforeUpdate(hasUpdates)\n      }\n      // https://webpack.js.org/api/hot-module-replacement/#apply\n      // @ts-expect-error module.hot exists\n      return module.hot.apply()\n    })\n    .then(\n      (updatedModules: any[] | null) => {\n        handleApplyUpdates(null, updatedModules)\n      },\n      (err: any) => {\n        handleApplyUpdates(err, null)\n      }\n    )\n}\n\n/** Handles messages from the sevrer for the App Router. */\nfunction processMessage(\n  obj: HMR_ACTION_TYPES,\n  sendMessage: (message: string) => void,\n  processTurbopackMessage: (msg: TurbopackMsgToBrowser) => void,\n  router: ReturnType<typeof useRouter>,\n  dispatcher: Dispatcher,\n  appIsrManifestRef: ReturnType<typeof useRef>,\n  pathnameRef: ReturnType<typeof useRef>\n) {\n  if (!('action' in obj)) {\n    return\n  }\n\n  function handleErrors(errors: ReadonlyArray<unknown>) {\n    // \"Massage\" webpack messages.\n    const formatted = formatWebpackMessages({\n      errors: errors,\n      warnings: [],\n    })\n\n    // Only show the first error.\n    dispatcher.onBuildError(formatted.errors[0])\n\n    // Also log them to the console.\n    for (let i = 0; i < formatted.errors.length; i++) {\n      console.error(stripAnsi(formatted.errors[i]))\n    }\n\n    // Do not attempt to reload now.\n    // We will reload on next success instead.\n    if (process.env.__NEXT_TEST_MODE) {\n      if (self.__NEXT_HMR_CB) {\n        self.__NEXT_HMR_CB(formatted.errors[0])\n        self.__NEXT_HMR_CB = null\n      }\n    }\n  }\n\n  function handleHotUpdate() {\n    if (process.env.TURBOPACK) {\n      dispatcher.onBuildOk()\n    } else {\n      tryApplyUpdates(\n        function onBeforeHotUpdate(hasUpdates: boolean) {\n          handleBeforeHotUpdateWebpack(dispatcher, hasUpdates)\n        },\n        function onSuccessfulHotUpdate(webpackUpdatedModules: string[]) {\n          // Only dismiss it when we're sure it's a hot update.\n          // Otherwise it would flicker right before the reload.\n          handleSuccessfulHotUpdateWebpack(\n            dispatcher,\n            sendMessage,\n            webpackUpdatedModules\n          )\n        },\n        sendMessage,\n        dispatcher\n      )\n    }\n  }\n\n  switch (obj.action) {\n    case HMR_ACTIONS_SENT_TO_BROWSER.APP_ISR_MANIFEST: {\n      if (process.env.__NEXT_APP_ISR_INDICATOR) {\n        if (appIsrManifestRef) {\n          appIsrManifestRef.current = obj.data\n\n          // handle initial status on receiving manifest\n          // navigation is handled in useEffect for pathname changes\n          // as we'll receive the updated manifest before usePathname\n          // triggers for new value\n          if ((pathnameRef.current as string) in obj.data) {\n            // the indicator can be hidden for an hour.\n            // check if it's still hidden\n            const indicatorHiddenAt = Number(\n              localStorage?.getItem('__NEXT_DISMISS_PRERENDER_INDICATOR')\n            )\n\n            const isHidden =\n              indicatorHiddenAt &&\n              !isNaN(indicatorHiddenAt) &&\n              Date.now() < indicatorHiddenAt\n\n            if (!isHidden) {\n              dispatcher.onStaticIndicator(true)\n            }\n          } else {\n            dispatcher.onStaticIndicator(false)\n          }\n        }\n      }\n      break\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.BUILDING: {\n      startLatency = Date.now()\n      if (!process.env.TURBOPACK) {\n        setPendingHotUpdateWebpack()\n      }\n      console.log('[Fast Refresh] rebuilding')\n      break\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.BUILT:\n    case HMR_ACTIONS_SENT_TO_BROWSER.SYNC: {\n      if (obj.hash) {\n        handleAvailableHash(obj.hash)\n      }\n\n      const { errors, warnings } = obj\n\n      // Is undefined when it's a 'built' event\n      if ('versionInfo' in obj) dispatcher.onVersionInfo(obj.versionInfo)\n      if ('debug' in obj && obj.debug) dispatcher.onDebugInfo(obj.debug)\n\n      const hasErrors = Boolean(errors && errors.length)\n      // Compilation with errors (e.g. syntax error or missing modules).\n      if (hasErrors) {\n        sendMessage(\n          JSON.stringify({\n            event: 'client-error',\n            errorCount: errors.length,\n            clientId: __nextDevClientId,\n          })\n        )\n\n        handleErrors(errors)\n        return\n      }\n\n      const hasWarnings = Boolean(warnings && warnings.length)\n      if (hasWarnings) {\n        sendMessage(\n          JSON.stringify({\n            event: 'client-warning',\n            warningCount: warnings.length,\n            clientId: __nextDevClientId,\n          })\n        )\n\n        // Print warnings to the console.\n        const formattedMessages = formatWebpackMessages({\n          warnings: warnings,\n          errors: [],\n        })\n\n        for (let i = 0; i < formattedMessages.warnings.length; i++) {\n          if (i === 5) {\n            console.warn(\n              'There were more warnings in other files.\\n' +\n                'You can find a complete log in the terminal.'\n            )\n            break\n          }\n          console.warn(stripAnsi(formattedMessages.warnings[i]))\n        }\n\n        // No early return here as we need to apply modules in the same way between warnings only and compiles without warnings\n      }\n\n      sendMessage(\n        JSON.stringify({\n          event: 'client-success',\n          clientId: __nextDevClientId,\n        })\n      )\n\n      if (obj.action === HMR_ACTIONS_SENT_TO_BROWSER.BUILT) {\n        // Handle hot updates\n        handleHotUpdate()\n      }\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED: {\n      processTurbopackMessage({\n        type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED,\n        data: {\n          sessionId: obj.data.sessionId,\n        },\n      })\n      break\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE: {\n      const updatedModules = extractModulesFromTurbopackMessage(obj.data)\n      dispatcher.onBeforeRefresh()\n      processTurbopackMessage({\n        type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE,\n        data: obj.data,\n      })\n      dispatcher.onRefresh()\n      if (RuntimeErrorHandler.hadRuntimeError) {\n        console.warn(REACT_REFRESH_FULL_RELOAD_FROM_ERROR)\n        performFullReload(null, sendMessage)\n      }\n      reportHmrLatency(sendMessage, updatedModules)\n      break\n    }\n    // TODO-APP: make server component change more granular\n    case HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES: {\n      sendMessage(\n        JSON.stringify({\n          event: 'server-component-reload-page',\n          clientId: __nextDevClientId,\n        })\n      )\n      if (RuntimeErrorHandler.hadRuntimeError) {\n        if (reloading) return\n        reloading = true\n        return window.location.reload()\n      }\n      startTransition(() => {\n        router.hmrRefresh()\n        dispatcher.onRefresh()\n      })\n\n      if (process.env.__NEXT_TEST_MODE) {\n        if (self.__NEXT_HMR_CB) {\n          self.__NEXT_HMR_CB()\n          self.__NEXT_HMR_CB = null\n        }\n      }\n\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE: {\n      sendMessage(\n        JSON.stringify({\n          event: 'client-reload-page',\n          clientId: __nextDevClientId,\n        })\n      )\n      if (reloading) return\n      reloading = true\n      return window.location.reload()\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE:\n    case HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE: {\n      // TODO-APP: potentially only refresh if the currently viewed page was added/removed.\n      return router.hmrRefresh()\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ERROR: {\n      const { errorJSON } = obj\n      if (errorJSON) {\n        const { message, stack } = JSON.parse(errorJSON)\n        const error = new Error(message)\n        error.stack = stack\n        handleErrors([error])\n      }\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE: {\n      return\n    }\n    default: {\n    }\n  }\n}\n\nexport default function HotReload({\n  assetPrefix,\n  children,\n}: {\n  assetPrefix: string\n  children?: ReactNode\n}) {\n  const [state, dispatch] = useErrorOverlayReducer()\n\n  const dispatcher = useMemo<Dispatcher>(() => {\n    return {\n      onBuildOk() {\n        dispatch({ type: ACTION_BUILD_OK })\n      },\n      onBuildError(message) {\n        dispatch({ type: ACTION_BUILD_ERROR, message })\n      },\n      onBeforeRefresh() {\n        dispatch({ type: ACTION_BEFORE_REFRESH })\n      },\n      onRefresh() {\n        dispatch({ type: ACTION_REFRESH })\n      },\n      onVersionInfo(versionInfo) {\n        dispatch({ type: ACTION_VERSION_INFO, versionInfo })\n      },\n      onStaticIndicator(status: boolean) {\n        dispatch({ type: ACTION_STATIC_INDICATOR, staticIndicator: status })\n      },\n      onDebugInfo(debugInfo) {\n        dispatch({ type: ACTION_DEBUG_INFO, debugInfo })\n      },\n    }\n  }, [dispatch])\n\n  const handleOnUnhandledError = useCallback(\n    (error: Error): void => {\n      const errorDetails = (error as any).details as\n        | HydrationErrorState\n        | undefined\n      // Component stack is added to the error in use-error-handler in case there was a hydration error\n      const componentStackTrace =\n        (error as any)._componentStack || errorDetails?.componentStack\n      const warning = errorDetails?.warning\n      const stitchedError = getReactStitchedError(error)\n\n      dispatch({\n        type: ACTION_UNHANDLED_ERROR,\n        reason: stitchedError,\n        frames: parseStack(stitchedError.stack || ''),\n        componentStackFrames:\n          typeof componentStackTrace === 'string'\n            ? parseComponentStack(componentStackTrace)\n            : undefined,\n        warning,\n      })\n    },\n    [dispatch]\n  )\n\n  const handleOnUnhandledRejection = useCallback(\n    (reason: Error): void => {\n      const stitchedError = getReactStitchedError(reason)\n      dispatch({\n        type: ACTION_UNHANDLED_REJECTION,\n        reason: stitchedError,\n        frames: parseStack(stitchedError.stack || ''),\n      })\n    },\n    [dispatch]\n  )\n  useErrorHandler(handleOnUnhandledError, handleOnUnhandledRejection)\n\n  const webSocketRef = useWebsocket(assetPrefix)\n  useWebsocketPing(webSocketRef)\n  const sendMessage = useSendMessage(webSocketRef)\n  const processTurbopackMessage = useTurbopack(sendMessage, (err) =>\n    performFullReload(err, sendMessage)\n  )\n\n  const router = useRouter()\n\n  // We don't want access of the pathname for the dev tools to trigger a dynamic\n  // access (as the dev overlay will never be present in production).\n  const pathname = useUntrackedPathname()\n  const appIsrManifestRef = useRef<Record<string, false | number>>({})\n  const pathnameRef = useRef(pathname)\n\n  if (process.env.__NEXT_APP_ISR_INDICATOR) {\n    // this conditional is only for dead-code elimination which\n    // isn't a runtime conditional only build-time so ignore hooks rule\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      pathnameRef.current = pathname\n\n      const appIsrManifest = appIsrManifestRef.current\n\n      if (appIsrManifest) {\n        if (pathname && pathname in appIsrManifest) {\n          try {\n            const indicatorHiddenAt = Number(\n              localStorage?.getItem('__NEXT_DISMISS_PRERENDER_INDICATOR')\n            )\n\n            const isHidden =\n              indicatorHiddenAt &&\n              !isNaN(indicatorHiddenAt) &&\n              Date.now() < indicatorHiddenAt\n\n            if (!isHidden) {\n              dispatcher.onStaticIndicator(true)\n            }\n          } catch (reason) {\n            let message = ''\n\n            if (reason instanceof DOMException) {\n              // Most likely a SecurityError, because of an unavailable localStorage\n              message = reason.stack ?? reason.message\n            } else if (reason instanceof Error) {\n              message = 'Error: ' + reason.message + '\\n' + (reason.stack ?? '')\n            } else {\n              message = 'Unexpected Exception: ' + reason\n            }\n\n            console.warn('[HMR] ' + message)\n          }\n        } else {\n          dispatcher.onStaticIndicator(false)\n        }\n      }\n    }, [pathname, dispatcher])\n  }\n\n  useEffect(() => {\n    const websocket = webSocketRef.current\n    if (!websocket) return\n\n    const handler = (event: MessageEvent<any>) => {\n      try {\n        const obj = JSON.parse(event.data)\n        processMessage(\n          obj,\n          sendMessage,\n          processTurbopackMessage,\n          router,\n          dispatcher,\n          appIsrManifestRef,\n          pathnameRef\n        )\n      } catch (err: any) {\n        console.warn(\n          '[HMR] Invalid message: ' +\n            JSON.stringify(event.data) +\n            '\\n' +\n            (err?.stack ?? '')\n        )\n      }\n    }\n\n    websocket.addEventListener('message', handler)\n    return () => websocket.removeEventListener('message', handler)\n  }, [\n    sendMessage,\n    router,\n    webSocketRef,\n    dispatcher,\n    processTurbopackMessage,\n    appIsrManifestRef,\n  ])\n\n  return (\n    <ReactDevOverlay state={state} dispatcher={dispatcher}>\n      {children}\n    </ReactDevOverlay>\n  )\n}\n"],"names":["HotReload","waitForWebpackRuntimeHotUpdate","mostRecentCompilationHash","__nextDevClientId","Math","round","random","Date","now","reloading","startLatency","pendingHotUpdateWebpack","Promise","resolve","resolvePendingHotUpdateWebpack","setPendingHotUpdateWebpack","handleBeforeHotUpdateWebpack","dispatcher","hasUpdates","onBeforeRefresh","handleSuccessfulHotUpdateWebpack","sendMessage","updatedModules","onBuildOk","reportHmrLatency","onRefresh","endLatency","latency","console","log","JSON","stringify","event","id","window","startTime","endTime","page","location","pathname","isPageHidden","document","visibilityState","handleAvailableHash","hash","isUpdateAvailable","process","env","TURBOPACK","__webpack_hash__","canApplyUpdates","module","hot","status","afterApplyUpdates","fn","handler","removeStatusHandler","addStatusHandler","performFullReload","err","stackTrace","stack","split","slice","join","message","hadRuntimeError","RuntimeErrorHandler","dependencyChain","undefined","reload","tryApplyUpdates","onBeforeUpdate","onHotUpdateSuccess","handleApplyUpdates","warn","REACT_REFRESH_FULL_RELOAD_FROM_ERROR","Boolean","length","__NEXT_TEST_MODE","self","__NEXT_HMR_CB","check","then","apply","processMessage","obj","processTurbopackMessage","router","appIsrManifestRef","pathnameRef","handleErrors","errors","formatted","formatWebpackMessages","warnings","onBuildError","i","error","stripAnsi","handleHotUpdate","onBeforeHotUpdate","onSuccessfulHotUpdate","webpackUpdatedModules","action","HMR_ACTIONS_SENT_TO_BROWSER","APP_ISR_MANIFEST","__NEXT_APP_ISR_INDICATOR","current","data","localStorage","indicatorHiddenAt","Number","getItem","isHidden","isNaN","onStaticIndicator","BUILDING","BUILT","SYNC","onVersionInfo","versionInfo","debug","onDebugInfo","hasErrors","errorCount","clientId","hasWarnings","warningCount","formattedMessages","TURBOPACK_CONNECTED","type","sessionId","TURBOPACK_MESSAGE","extractModulesFromTurbopackMessage","SERVER_COMPONENT_CHANGES","startTransition","hmrRefresh","RELOAD_PAGE","ADDED_PAGE","REMOVED_PAGE","SERVER_ERROR","errorJSON","parse","Error","DEV_PAGES_MANIFEST_UPDATE","assetPrefix","children","state","dispatch","useErrorOverlayReducer","useMemo","ACTION_BUILD_OK","ACTION_BUILD_ERROR","ACTION_BEFORE_REFRESH","ACTION_REFRESH","ACTION_VERSION_INFO","ACTION_STATIC_INDICATOR","staticIndicator","debugInfo","ACTION_DEBUG_INFO","handleOnUnhandledError","useCallback","errorDetails","details","componentStackTrace","_componentStack","componentStack","warning","stitchedError","getReactStitchedError","ACTION_UNHANDLED_ERROR","reason","frames","parseStack","componentStackFrames","parseComponentStack","handleOnUnhandledRejection","ACTION_UNHANDLED_REJECTION","useErrorHandler","webSocketRef","useWebsocket","useWebsocketPing","useSendMessage","useTurbopack","useRouter","useUntrackedPathname","useRef","useEffect","appIsrManifest","DOMException","websocket","addEventListener","removeEventListener","ReactDevOverlay"],"mappings":"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"}