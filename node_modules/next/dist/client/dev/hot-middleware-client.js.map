{"version":3,"sources":["../../../src/client/dev/hot-middleware-client.ts"],"sourcesContent":["import connect from '../components/react-dev-overlay/pages/hot-reloader-client'\nimport { sendMessage } from '../components/react-dev-overlay/pages/websocket'\n\nlet reloading = false\n\nexport default (mode: 'webpack' | 'turbopack') => {\n  const devClient = connect(mode)\n\n  devClient.subscribeToHmrEvent((obj: any) => {\n    if (reloading) return\n    // if we're on an error/404 page, we can't reliably tell if the newly added/removed page\n    // matches the current path. In that case, assume any added/removed entries should trigger a reload of the current page\n    const isOnErrorPage =\n      window.next.router.pathname === '/404' ||\n      window.next.router.pathname === '/_error'\n\n    switch (obj.action) {\n      case 'reloadPage': {\n        sendMessage(\n          JSON.stringify({\n            event: 'client-reload-page',\n            clientId: window.__nextDevClientId,\n          })\n        )\n        reloading = true\n        return window.location.reload()\n      }\n      case 'removedPage': {\n        const [page] = obj.data\n        if (page === window.next.router.pathname || isOnErrorPage) {\n          sendMessage(\n            JSON.stringify({\n              event: 'client-removed-page',\n              clientId: window.__nextDevClientId,\n              page,\n            })\n          )\n          return window.location.reload()\n        }\n        return\n      }\n      case 'addedPage': {\n        const [page] = obj.data\n        if (\n          (page === window.next.router.pathname &&\n            typeof window.next.router.components[page] === 'undefined') ||\n          isOnErrorPage\n        ) {\n          sendMessage(\n            JSON.stringify({\n              event: 'client-added-page',\n              clientId: window.__nextDevClientId,\n              page,\n            })\n          )\n          return window.location.reload()\n        }\n        return\n      }\n      case 'serverError':\n      case 'devPagesManifestUpdate':\n      case 'appIsrManifest':\n      case 'building':\n      case 'finishBuilding': {\n        return\n      }\n      default: {\n        throw new Error('Unexpected action ' + obj.action)\n      }\n    }\n  })\n\n  return devClient\n}\n"],"names":["reloading","mode","devClient","connect","subscribeToHmrEvent","obj","isOnErrorPage","window","next","router","pathname","action","sendMessage","JSON","stringify","event","clientId","__nextDevClientId","location","reload","page","data","components","Error"],"mappings":";;;;+BAKA;;;eAAA;;;;4EALoB;2BACQ;AAE5B,IAAIA,YAAY;MAEhB,WAAe,CAACC;IACd,MAAMC,YAAYC,IAAAA,0BAAO,EAACF;IAE1BC,UAAUE,mBAAmB,CAAC,CAACC;QAC7B,IAAIL,WAAW;QACf,wFAAwF;QACxF,uHAAuH;QACvH,MAAMM,gBACJC,OAAOC,IAAI,CAACC,MAAM,CAACC,QAAQ,KAAK,UAChCH,OAAOC,IAAI,CAACC,MAAM,CAACC,QAAQ,KAAK;QAElC,OAAQL,IAAIM,MAAM;YAChB,KAAK;gBAAc;oBACjBC,IAAAA,sBAAW,EACTC,KAAKC,SAAS,CAAC;wBACbC,OAAO;wBACPC,UAAUT,OAAOU,iBAAiB;oBACpC;oBAEFjB,YAAY;oBACZ,OAAOO,OAAOW,QAAQ,CAACC,MAAM;gBAC/B;YACA,KAAK;gBAAe;oBAClB,MAAM,CAACC,KAAK,GAAGf,IAAIgB,IAAI;oBACvB,IAAID,SAASb,OAAOC,IAAI,CAACC,MAAM,CAACC,QAAQ,IAAIJ,eAAe;wBACzDM,IAAAA,sBAAW,EACTC,KAAKC,SAAS,CAAC;4BACbC,OAAO;4BACPC,UAAUT,OAAOU,iBAAiB;4BAClCG;wBACF;wBAEF,OAAOb,OAAOW,QAAQ,CAACC,MAAM;oBAC/B;oBACA;gBACF;YACA,KAAK;gBAAa;oBAChB,MAAM,CAACC,KAAK,GAAGf,IAAIgB,IAAI;oBACvB,IACE,AAACD,SAASb,OAAOC,IAAI,CAACC,MAAM,CAACC,QAAQ,IACnC,OAAOH,OAAOC,IAAI,CAACC,MAAM,CAACa,UAAU,CAACF,KAAK,KAAK,eACjDd,eACA;wBACAM,IAAAA,sBAAW,EACTC,KAAKC,SAAS,CAAC;4BACbC,OAAO;4BACPC,UAAUT,OAAOU,iBAAiB;4BAClCG;wBACF;wBAEF,OAAOb,OAAOW,QAAQ,CAACC,MAAM;oBAC/B;oBACA;gBACF;YACA,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;gBAAkB;oBACrB;gBACF;YACA;gBAAS;oBACP,MAAM,IAAII,MAAM,uBAAuBlB,IAAIM,MAAM;gBACnD;QACF;IACF;IAEA,OAAOT;AACT"}