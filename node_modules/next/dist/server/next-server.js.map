{"version":3,"sources":["../../src/server/next-server.ts"],"sourcesContent":["import './node-environment'\nimport './require-hook'\nimport './node-polyfill-crypto'\n\nimport type { CacheFs } from '../shared/lib/utils'\nimport {\n  DecodeError,\n  PageNotFoundError,\n  MiddlewareNotFoundError,\n} from '../shared/lib/utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport type RenderResult from './render-result'\nimport type { FetchEventResult } from './web/types'\nimport type { PrerenderManifest } from '../build'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { NextParsedUrlQuery, NextUrlWithParsedQuery } from './request-meta'\nimport type { Params } from './request/params'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { PagesAPIRouteModule } from './route-modules/pages-api/module'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { ParsedUrl } from '../shared/lib/router/utils/parse-url'\nimport type { Revalidate, ExpireTime } from './lib/revalidate'\nimport type { WaitUntil } from './after/builtin-request-context'\n\nimport fs from 'fs'\nimport { join, resolve } from 'path'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport { addRequestMeta, getRequestMeta } from './request-meta'\nimport {\n  PAGES_MANIFEST,\n  BUILD_ID_FILE,\n  MIDDLEWARE_MANIFEST,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  CLIENT_PUBLIC_FILES_PATH,\n  APP_PATHS_MANIFEST,\n  SERVER_DIRECTORY,\n  NEXT_FONT_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../shared/lib/constants'\nimport { findDir } from '../lib/find-pages-dir'\nimport { NodeNextRequest, NodeNextResponse } from './base-http/node'\nimport { sendRenderResult } from './send-payload'\nimport { parseUrl } from '../shared/lib/router/utils/parse-url'\nimport * as Log from '../build/output/log'\n\nimport type {\n  Options,\n  FindComponentsResult,\n  MiddlewareRoutingItem,\n  RequestContext,\n  NormalizedRouteManifest,\n  LoadedRenderOpts,\n  RouteHandler,\n  NextEnabledDirectories,\n  BaseRequestHandler,\n} from './base-server'\nimport BaseServer, { NoFallbackError } from './base-server'\nimport { getMaybePagePath, getPagePath } from './require'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { loadComponents } from './load-components'\nimport type { LoadComponentsReturnType } from './load-components'\nimport isError, { getProperError } from '../lib/is-error'\nimport { splitCookiesString, toNodeOutgoingHttpHeaders } from './web/utils'\nimport { getMiddlewareRouteMatcher } from '../shared/lib/router/utils/middleware-route-matcher'\nimport { loadEnvConfig } from '@next/env'\nimport { urlQueryToSearchParams } from '../shared/lib/router/utils/querystring'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport { getCloneableBody } from './body-streams'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport ResponseCache, {\n  CachedRouteKind,\n  type IncrementalCacheItem,\n} from './response-cache'\nimport { IncrementalCache } from './lib/incremental-cache'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { setHttpClientAndAgentOptions } from './setup-http-agent-env'\n\nimport { isPagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { MatchOptions } from './route-matcher-managers/route-matcher-manager'\nimport { INSTRUMENTATION_HOOK_FILENAME } from '../lib/constants'\nimport { BubbledError, getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { nodeFs } from './lib/node-fs-methods'\nimport { getRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { createRequestResponseMocks } from './lib/mock-request'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport { signalFromNodeResponse } from './web/spec-extension/adapters/next-request'\nimport { RouteModuleLoader } from './lib/module-loader/route-module-loader'\nimport { loadManifest } from './load-manifest'\nimport { lazyRenderAppPage } from './route-modules/app-page/module.render'\nimport { lazyRenderPagesPage } from './route-modules/pages/module.render'\nimport { interopDefault } from '../lib/interop-default'\nimport { formatDynamicImportPath } from '../lib/format-dynamic-import-path'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport type { ServerOnInstrumentationRequestError } from './app-render/types'\nimport { RouteKind } from './route-kind'\nimport { InvariantError } from '../shared/lib/invariant-error'\nimport { AwaiterOnce } from './after/awaiter'\nimport { AsyncCallbackSet } from './lib/async-callback-set'\n\nexport * from './base-server'\n\ndeclare const __non_webpack_require__: NodeRequire\n\n// For module that can be both CJS or ESM\nconst dynamicImportEsmDefault = process.env.NEXT_MINIMAL\n  ? (id: string) =>\n      import(/* webpackIgnore: true */ id).then((mod) => mod.default || mod)\n  : (id: string) => import(id).then((mod) => mod.default || mod)\n\n// For module that will be compiled to CJS, e.g. instrument\nconst dynamicRequire = process.env.NEXT_MINIMAL\n  ? __non_webpack_require__\n  : require\n\nexport type NodeRequestHandler = BaseRequestHandler<\n  IncomingMessage | NodeNextRequest,\n  ServerResponse | NodeNextResponse\n>\n\ntype NodeRouteHandler = RouteHandler<NodeNextRequest, NodeNextResponse>\n\nconst MiddlewareMatcherCache = new WeakMap<\n  MiddlewareManifest['middleware'][string],\n  MiddlewareRouteMatch\n>()\n\nfunction getMiddlewareMatcher(\n  info: MiddlewareManifest['middleware'][string]\n): MiddlewareRouteMatch {\n  const stored = MiddlewareMatcherCache.get(info)\n  if (stored) {\n    return stored\n  }\n\n  if (!Array.isArray(info.matchers)) {\n    throw new Error(\n      `Invariant: invalid matchers for middleware ${JSON.stringify(info)}`\n    )\n  }\n\n  const matcher = getMiddlewareRouteMatcher(info.matchers)\n  MiddlewareMatcherCache.set(info, matcher)\n  return matcher\n}\n\nexport default class NextNodeServer extends BaseServer<\n  Options,\n  NodeNextRequest,\n  NodeNextResponse\n> {\n  protected middlewareManifestPath: string\n  private _serverDistDir: string | undefined\n  private imageResponseCache?: ResponseCache\n  private registeredInstrumentation: boolean = false\n  protected renderWorkersPromises?: Promise<void>\n  protected dynamicRoutes?: {\n    match: import('../shared/lib/router/utils/route-matcher').RouteMatchFn\n    page: string\n    re: RegExp\n  }[]\n  private routerServerHandler?: (\n    req: IncomingMessage,\n    res: ServerResponse\n  ) => void\n\n  protected cleanupListeners = new AsyncCallbackSet()\n  protected internalWaitUntil: WaitUntil | undefined\n\n  constructor(options: Options) {\n    // Initialize super class\n    super(options)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_CSS`.\n     */\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n    if (this.renderOpts.nextScriptWorkers) {\n      process.env.__NEXT_SCRIPT_WORKERS = JSON.stringify(true)\n    }\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n\n    if (!this.minimalMode) {\n      this.imageResponseCache = new ResponseCache(this.minimalMode)\n    }\n\n    const { appDocumentPreloading } = this.nextConfig.experimental\n    const isDefaultEnabled = typeof appDocumentPreloading === 'undefined'\n\n    if (\n      !options.dev &&\n      (appDocumentPreloading === true ||\n        !(this.minimalMode && isDefaultEnabled))\n    ) {\n      // pre-warm _document and _app as these will be\n      // needed for most requests\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_document',\n        isAppPath: false,\n      }).catch(() => {})\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_app',\n        isAppPath: false,\n      }).catch(() => {})\n    }\n\n    if (\n      !options.dev &&\n      !this.minimalMode &&\n      this.nextConfig.experimental.preloadEntriesOnStart\n    ) {\n      this.unstable_preloadEntries()\n    }\n\n    if (!options.dev) {\n      const { dynamicRoutes = [] } = this.getRoutesManifest() ?? {}\n      this.dynamicRoutes = dynamicRoutes.map((r) => {\n        // TODO: can we just re-use the regex from the manifest?\n        const regex = getRouteRegex(r.page)\n        const match = getRouteMatcher(regex)\n\n        return {\n          match,\n          page: r.page,\n          re: regex.re,\n        }\n      })\n    }\n\n    // ensure options are set when loadConfig isn't called\n    setHttpClientAndAgentOptions(this.nextConfig)\n\n    // Intercept fetch and other testmode apis.\n    if (this.serverOptions.experimentalTestProxy) {\n      process.env.NEXT_PRIVATE_TEST_PROXY = 'true'\n      const {\n        interceptTestApis,\n      } = require('next/dist/experimental/testmode/server')\n      interceptTestApis()\n    }\n\n    this.middlewareManifestPath = join(this.serverDistDir, MIDDLEWARE_MANIFEST)\n\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    if (!options.dev) {\n      this.prepare().catch((err) => {\n        console.error('Failed to prepare server', err)\n      })\n    }\n  }\n\n  public async unstable_preloadEntries(): Promise<void> {\n    const appPathsManifest = this.getAppPathsManifest()\n    const pagesManifest = this.getPagesManifest()\n\n    for (const page of Object.keys(pagesManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: false,\n      }).catch(() => {})\n    }\n\n    for (const page of Object.keys(appPathsManifest || {})) {\n      await loadComponents({ distDir: this.distDir, page, isAppPath: true })\n        .then(async ({ ComponentMod }) => {\n          // we need to ensure fetch is patched before we require the page,\n          // otherwise if the fetch is patched by user code, we will be patching it\n          // too late and there won't be any caching behaviors\n          ComponentMod.patchFetch()\n\n          const webpackRequire = ComponentMod.__next_app__.require\n          if (webpackRequire?.m) {\n            for (const id of Object.keys(webpackRequire.m)) {\n              await webpackRequire(id)\n            }\n          }\n        })\n        .catch(() => {})\n    }\n  }\n\n  protected async handleUpgrade(): Promise<void> {\n    // The web server does not support web sockets, it's only used for HMR in\n    // development.\n  }\n\n  protected async loadInstrumentationModule() {\n    if (!this.serverOptions.dev) {\n      try {\n        this.instrumentation = await dynamicRequire(\n          resolve(\n            this.serverOptions.dir || '.',\n            this.serverOptions.conf.distDir!,\n            'server',\n            INSTRUMENTATION_HOOK_FILENAME\n          )\n        )\n      } catch (err: any) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw new Error(\n            'An error occurred while loading the instrumentation hook',\n            { cause: err }\n          )\n        }\n      }\n    }\n    return this.instrumentation\n  }\n\n  protected async prepareImpl() {\n    await super.prepareImpl()\n    await this.runInstrumentationHookIfAvailable()\n  }\n\n  protected async runInstrumentationHookIfAvailable() {\n    if (this.registeredInstrumentation) return\n    this.registeredInstrumentation = true\n    await this.instrumentation?.register?.()\n  }\n\n  protected loadEnvConfig({\n    dev,\n    forceReload,\n    silent,\n  }: {\n    dev: boolean\n    forceReload?: boolean\n    silent?: boolean\n  }) {\n    loadEnvConfig(\n      this.dir,\n      dev,\n      silent ? { info: () => {}, error: () => {} } : Log,\n      forceReload\n    )\n  }\n\n  protected async getIncrementalCache({\n    requestHeaders,\n    requestProtocol,\n  }: {\n    requestHeaders: IncrementalCache['requestHeaders']\n    requestProtocol: 'http' | 'https'\n  }) {\n    const dev = !!this.renderOpts.dev\n    let CacheHandler: any\n    const { cacheHandler } = this.nextConfig\n\n    if (cacheHandler) {\n      CacheHandler = interopDefault(\n        await dynamicImportEsmDefault(\n          formatDynamicImportPath(this.distDir, cacheHandler)\n        )\n      )\n    }\n\n    const { cacheHandlers } = this.nextConfig.experimental\n\n    if (!(globalThis as any).__nextCacheHandlers && cacheHandlers) {\n      ;(globalThis as any).__nextCacheHandlers = {}\n\n      for (const key of Object.keys(cacheHandlers)) {\n        if (cacheHandlers[key]) {\n          ;(globalThis as any).__nextCacheHandlers[key] = interopDefault(\n            await dynamicImportEsmDefault(\n              formatDynamicImportPath(this.distDir, cacheHandlers[key])\n            )\n          )\n        }\n      }\n    }\n\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new IncrementalCache({\n      fs: this.getCacheFilesystem(),\n      dev,\n      requestHeaders,\n      requestProtocol,\n      dynamicIO: Boolean(this.nextConfig.experimental.dynamicIO),\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      serverDistDir: this.serverDistDir,\n      fetchCache: true,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n      flushToDisk:\n        !this.minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      CurCacheHandler: CacheHandler,\n    })\n  }\n\n  protected getResponseCache() {\n    return new ResponseCache(this.minimalMode)\n  }\n\n  protected getPublicDir(): string {\n    return join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n  }\n\n  protected getHasStaticDir(): boolean {\n    return fs.existsSync(join(this.dir, 'static'))\n  }\n\n  protected getPagesManifest(): PagesManifest | undefined {\n    return loadManifest(\n      join(this.serverDistDir, PAGES_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getAppPathsManifest(): PagesManifest | undefined {\n    if (!this.enabledDirectories.app) return undefined\n\n    return loadManifest(\n      join(this.serverDistDir, APP_PATHS_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getinterceptionRoutePatterns(): RegExp[] {\n    if (!this.enabledDirectories.app) return []\n\n    const routesManifest = this.getRoutesManifest()\n    return (\n      routesManifest?.rewrites.beforeFiles\n        .filter(isInterceptionRouteRewrite)\n        .map((rewrite) => new RegExp(rewrite.regex)) ?? []\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    return !!getMaybePagePath(\n      pathname,\n      this.distDir,\n      this.nextConfig.i18n?.locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected getBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err: any) {\n      if (err.code === 'ENOENT') {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected getEnabledDirectories(dev: boolean): NextEnabledDirectories {\n    const dir = dev ? this.dir : this.serverDistDir\n\n    return {\n      app: findDir(dir, 'app') ? true : false,\n      pages: findDir(dir, 'pages') ? true : false,\n    }\n  }\n\n  protected sendRenderResult(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json' | 'rsc'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      revalidate: Revalidate | undefined\n      expireTime: ExpireTime | undefined\n    }\n  ): Promise<void> {\n    return sendRenderResult({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      result: options.result,\n      type: options.type,\n      generateEtags: options.generateEtags,\n      poweredByHeader: options.poweredByHeader,\n      revalidate: options.revalidate,\n      expireTime: options.expireTime,\n    })\n  }\n\n  protected async runApi(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages()\n\n    for (const edgeFunctionsPage of edgeFunctionsPages) {\n      if (edgeFunctionsPage === match.definition.pathname) {\n        const handledAsEdgeFunction = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.pathname,\n          appPaths: null,\n        })\n\n        if (handledAsEdgeFunction) {\n          return true\n        }\n      }\n    }\n\n    // The module supports minimal mode, load the minimal module.\n    const module = await RouteModuleLoader.load<PagesAPIRouteModule>(\n      match.definition.filename\n    )\n\n    query = { ...query, ...match.params }\n\n    delete query.__nextLocale\n    delete query.__nextDefaultLocale\n    delete query.__nextInferredLocaleFromDefault\n\n    await module.render(req.originalRequest, res.originalResponse, {\n      previewProps: this.renderOpts.previewProps,\n      revalidate: this.revalidate.bind(this),\n      trustHostHeader: this.nextConfig.experimental.trustHostHeader,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      hostname: this.fetchHostname,\n      minimalMode: this.minimalMode,\n      dev: this.renderOpts.dev === true,\n      query,\n      params: match.params,\n      page: match.definition.pathname,\n      onError: this.instrumentationOnRequestError.bind(this),\n      multiZoneDraftMode: this.nextConfig.experimental.multiZoneDraftMode,\n    })\n\n    return true\n  }\n\n  protected async renderHTML(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    return getTracer().trace(NextNodeServerSpan.renderHTML, async () =>\n      this.renderHTMLImpl(req, res, pathname, query, renderOpts)\n    )\n  }\n\n  private async renderHTMLImpl(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Invariant: renderHTML should not be called in minimal mode'\n      )\n      // the `else` branch is needed for tree-shaking\n    } else {\n      // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n      // object here but only updating its `nextFontManifest` field.\n      // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n      renderOpts.nextFontManifest = this.nextFontManifest\n\n      if (this.enabledDirectories.app && renderOpts.isAppPath) {\n        return lazyRenderAppPage(\n          req,\n          res,\n          pathname,\n          query,\n          // This code path does not service revalidations for unknown param\n          // shells. As a result, we don't need to pass in the unknown params.\n          null,\n          renderOpts,\n          this.getServerComponentsHmrCache(),\n          false\n        )\n      }\n\n      // TODO: re-enable this once we've refactored to use implicit matches\n      // throw new Error('Invariant: render should have used routeModule')\n\n      return lazyRenderPagesPage(\n        req.originalRequest,\n        res.originalResponse,\n        pathname,\n        query,\n        renderOpts\n      )\n    }\n  }\n\n  protected async imageOptimizer(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    paramsResult: import('./image-optimizer').ImageParamsResult,\n    previousCacheEntry?: IncrementalCacheItem\n  ): Promise<{\n    buffer: Buffer\n    contentType: string\n    maxAge: number\n    upstreamEtag: string\n    etag: string\n  }> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: imageOptimizer should not be called in minimal mode'\n      )\n    } else {\n      const { imageOptimizer, fetchExternalImage, fetchInternalImage } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const handleInternalReq = async (\n        newReq: IncomingMessage,\n        newRes: ServerResponse\n      ) => {\n        if (newReq.url === req.url) {\n          throw new Error(`Invariant attempted to optimize _next/image itself`)\n        }\n\n        if (!this.routerServerHandler) {\n          throw new Error(`Invariant missing routerServerHandler`)\n        }\n\n        await this.routerServerHandler(newReq, newRes)\n        return\n      }\n\n      const { isAbsolute, href } = paramsResult\n\n      const imageUpstream = isAbsolute\n        ? await fetchExternalImage(href)\n        : await fetchInternalImage(\n            href,\n            req.originalRequest,\n            res.originalResponse,\n            handleInternalReq\n          )\n\n      return imageOptimizer(imageUpstream, paramsResult, this.nextConfig, {\n        isDev: this.renderOpts.dev,\n        previousCacheEntry,\n      })\n    }\n  }\n\n  protected getPagePath(pathname: string, locales?: string[]): string {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages() || []\n    if (edgeFunctionsPages.length) {\n      const appPaths = this.getOriginalAppPaths(ctx.pathname)\n      const isAppPath = Array.isArray(appPaths)\n\n      let page = ctx.pathname\n      if (isAppPath) {\n        // When it's an array, we need to pass all parallel routes to the loader.\n        page = appPaths[0]\n      }\n\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        if (edgeFunctionsPage === page) {\n          await this.runEdgeFunction({\n            req: ctx.req,\n            res: ctx.res,\n            query: ctx.query,\n            params: ctx.renderOpts.params,\n            page,\n            appPaths,\n          })\n          return null\n        }\n      }\n    }\n\n    return super.renderPageComponent(ctx, bubbleNoFallback)\n  }\n\n  protected async findPageComponents({\n    page,\n    query,\n    params,\n    isAppPath,\n    url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    return getTracer().trace(\n      NextNodeServerSpan.findPageComponents,\n      {\n        spanName: 'resolve page components',\n        attributes: {\n          'next.route': isAppPath ? normalizeAppPath(page) : page,\n        },\n      },\n      () =>\n        this.findPageComponentsImpl({\n          page,\n          query,\n          params,\n          isAppPath,\n          url,\n        })\n    )\n  }\n\n  private async findPageComponentsImpl({\n    page,\n    query,\n    params,\n    isAppPath,\n    url: _url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    const pagePaths: string[] = [page]\n    if (query.amp) {\n      // try serving a static AMP version first\n      pagePaths.unshift(\n        (isAppPath ? normalizeAppPath(page) : normalizePagePath(page)) + '.amp'\n      )\n    }\n\n    if (query.__nextLocale) {\n      pagePaths.unshift(\n        ...pagePaths.map(\n          (path) => `/${query.__nextLocale}${path === '/' ? '' : path}`\n        )\n      )\n    }\n\n    for (const pagePath of pagePaths) {\n      try {\n        const components = await loadComponents({\n          distDir: this.distDir,\n          page: pagePath,\n          isAppPath,\n        })\n\n        if (\n          query.__nextLocale &&\n          typeof components.Component === 'string' &&\n          !pagePath.startsWith(`/${query.__nextLocale}`)\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(!this.renderOpts.isExperimentalCompile &&\n            components.getStaticProps\n              ? ({\n                  amp: query.amp,\n                  __nextDataReq: query.__nextDataReq,\n                  __nextLocale: query.__nextLocale,\n                  __nextDefaultLocale: query.__nextDefaultLocale,\n                } as NextParsedUrlQuery)\n              : query),\n            // For appDir params is excluded.\n            ...((isAppPath ? {} : params) || {}),\n          },\n        }\n      } catch (err) {\n        // we should only not throw if we failed to find the page\n        // in the pages-manifest\n        if (!(err instanceof PageNotFoundError)) {\n          throw err\n        }\n      }\n    }\n    return null\n  }\n\n  protected getNextFontManifest(): NextFontManifest | undefined {\n    return loadManifest(\n      join(this.distDir, 'server', NEXT_FONT_MANIFEST + '.json')\n    ) as NextFontManifest\n  }\n\n  protected handleNextImageRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname || !parsedUrl.pathname.startsWith('/_next/image')) {\n      return false\n    }\n\n    if (\n      this.minimalMode ||\n      this.nextConfig.output === 'export' ||\n      process.env.NEXT_MINIMAL\n    ) {\n      res.statusCode = 400\n      res.body('Bad Request').send()\n      return true\n      // the `else` branch is needed for tree-shaking\n    } else {\n      const { ImageOptimizerCache } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const imageOptimizerCache = new ImageOptimizerCache({\n        distDir: this.distDir,\n        nextConfig: this.nextConfig,\n      })\n\n      const { sendResponse, ImageError } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      if (!this.imageResponseCache) {\n        throw new Error('invariant image optimizer cache was not initialized')\n      }\n      const imagesConfig = this.nextConfig.images\n\n      if (imagesConfig.loader !== 'default' || imagesConfig.unoptimized) {\n        await this.render404(req, res)\n        return true\n      }\n\n      const paramsResult = ImageOptimizerCache.validateParams(\n        req.originalRequest,\n        parsedUrl.query,\n        this.nextConfig,\n        !!this.renderOpts.dev\n      )\n\n      if ('errorMessage' in paramsResult) {\n        res.statusCode = 400\n        res.body(paramsResult.errorMessage).send()\n        return true\n      }\n\n      const cacheKey = ImageOptimizerCache.getCacheKey(paramsResult)\n\n      try {\n        const { getExtension } =\n          require('./serve-static') as typeof import('./serve-static')\n        const cacheEntry = await this.imageResponseCache.get(\n          cacheKey,\n          async ({ previousCacheEntry }) => {\n            const { buffer, contentType, maxAge, upstreamEtag, etag } =\n              await this.imageOptimizer(\n                req,\n                res,\n                paramsResult,\n                previousCacheEntry\n              )\n\n            return {\n              value: {\n                kind: CachedRouteKind.IMAGE,\n                buffer,\n                etag,\n                extension: getExtension(contentType) as string,\n                upstreamEtag,\n              },\n              isFallback: false,\n              revalidate: maxAge,\n            }\n          },\n          {\n            routeKind: RouteKind.IMAGE,\n            incrementalCache: imageOptimizerCache,\n            isFallback: false,\n          }\n        )\n\n        if (cacheEntry?.value?.kind !== CachedRouteKind.IMAGE) {\n          throw new Error(\n            'invariant did not get entry from image response cache'\n          )\n        }\n\n        sendResponse(\n          req.originalRequest,\n          res.originalResponse,\n          paramsResult.href,\n          cacheEntry.value.extension,\n          cacheEntry.value.buffer,\n          cacheEntry.value.etag,\n          paramsResult.isStatic,\n          cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT',\n          imagesConfig,\n          cacheEntry.revalidate || 0,\n          Boolean(this.renderOpts.dev)\n        )\n        return true\n      } catch (err) {\n        if (err instanceof ImageError) {\n          res.statusCode = err.statusCode\n          res.body(err.message).send()\n          return true\n        }\n        throw err\n      }\n    }\n  }\n\n  protected handleCatchallRenderRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    let { pathname, query } = parsedUrl\n    if (!pathname) {\n      throw new Error('Invariant: pathname is undefined')\n    }\n\n    // This is a catch-all route, there should be no fallbacks so mark it as\n    // such.\n    query._nextBubbleNoFallback = '1'\n\n    try {\n      // next.js core assumes page path without trailing slash\n      pathname = removeTrailingSlash(pathname)\n\n      const options: MatchOptions = {\n        i18n: this.i18nProvider?.fromQuery(pathname, query),\n      }\n      const match = await this.matchers.match(pathname, options)\n\n      // If we don't have a match, try to render it anyways.\n      if (!match) {\n        await this.render(req, res, pathname, query, parsedUrl, true)\n\n        return true\n      }\n\n      // Add the match to the request so we don't have to re-run the matcher\n      // for the same request.\n      addRequestMeta(req, 'match', match)\n\n      // TODO-APP: move this to a route handler\n      const edgeFunctionsPages = this.getEdgeFunctionsPages()\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        // If the page doesn't match the edge function page, skip it.\n        if (edgeFunctionsPage !== match.definition.page) continue\n\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n        delete query._nextBubbleNoFallback\n        delete query[NEXT_RSC_UNION_QUERY]\n\n        // If we handled the request, we can return early.\n        // For api routes edge runtime\n        try {\n          const handled = await this.runEdgeFunction({\n            req,\n            res,\n            query,\n            params: match.params,\n            page: match.definition.page,\n            match,\n            appPaths: null,\n          })\n          if (handled) return true\n        } catch (apiError) {\n          await this.instrumentationOnRequestError(apiError, req, {\n            routePath: match.definition.page,\n            routerKind: 'Pages Router',\n            routeType: 'route',\n            // Edge runtime does not support ISR\n            revalidateReason: undefined,\n          })\n          throw apiError\n        }\n      }\n\n      // If the route was detected as being a Pages API route, then handle\n      // it.\n      // TODO: move this behavior into a route handler.\n      if (isPagesAPIRouteMatch(match)) {\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n\n        delete query._nextBubbleNoFallback\n\n        const handled = await this.handleApiRequest(req, res, query, match)\n        if (handled) return true\n      }\n\n      await this.render(req, res, pathname, query, parsedUrl, true)\n\n      return true\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      try {\n        if (this.renderOpts.dev) {\n          const { formatServerError } =\n            require('../lib/format-server-error') as typeof import('../lib/format-server-error')\n          formatServerError(err)\n          this.logErrorWithOriginalStack(err)\n        } else {\n          this.logError(err)\n        }\n        res.statusCode = 500\n        await this.renderError(err, req, res, pathname, query)\n        return true\n      } catch {}\n\n      throw err\n    }\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected logErrorWithOriginalStack(\n    _err?: unknown,\n    _type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ): void {\n    throw new Error(\n      'Invariant: logErrorWithOriginalStack can only be called on the development server'\n    )\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async ensurePage(_opts: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    match?: RouteMatch\n    url?: string\n  }): Promise<void> {\n    throw new Error(\n      'Invariant: ensurePage can only be called on the development server'\n    )\n  }\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  protected async handleApiRequest(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    return this.runApi(req, res, query, match)\n  }\n\n  protected getCacheFilesystem(): CacheFs {\n    return nodeFs\n  }\n\n  protected normalizeReq(\n    req: NodeNextRequest | IncomingMessage\n  ): NodeNextRequest {\n    return !(req instanceof NodeNextRequest) ? new NodeNextRequest(req) : req\n  }\n\n  protected normalizeRes(\n    res: NodeNextResponse | ServerResponse\n  ): NodeNextResponse {\n    return !(res instanceof NodeNextResponse) ? new NodeNextResponse(res) : res\n  }\n\n  public getRequestHandler(): NodeRequestHandler {\n    const handler = this.makeRequestHandler()\n    if (this.serverOptions.experimentalTestProxy) {\n      const {\n        wrapRequestHandlerNode,\n      } = require('next/dist/experimental/testmode/server')\n      return wrapRequestHandlerNode(handler)\n    }\n    return handler\n  }\n\n  private makeRequestHandler(): NodeRequestHandler {\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause an unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    this.prepare().catch((err) => {\n      console.error('Failed to prepare server', err)\n    })\n\n    const handler = super.getRequestHandler()\n\n    return (req, res, parsedUrl) =>\n      handler(this.normalizeReq(req), this.normalizeRes(res), parsedUrl)\n  }\n\n  public async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts,\n  }: {\n    urlPath: string\n    revalidateHeaders: { [key: string]: string | string[] }\n    opts: { unstable_onlyGenerated?: boolean }\n  }) {\n    const mocked = createRequestResponseMocks({\n      url: urlPath,\n      headers: revalidateHeaders,\n    })\n\n    const handler = this.getRequestHandler()\n    await handler(\n      new NodeNextRequest(mocked.req),\n      new NodeNextResponse(mocked.res)\n    )\n    await mocked.res.hasStreamed\n\n    if (\n      mocked.res.getHeader('x-nextjs-cache') !== 'REVALIDATED' &&\n      !(mocked.res.statusCode === 404 && opts.unstable_onlyGenerated)\n    ) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`)\n    }\n  }\n\n  public async render(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    parsedUrl?: NextUrlWithParsedQuery,\n    internal = false\n  ): Promise<void> {\n    return super.render(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      parsedUrl,\n      internal\n    )\n  }\n\n  public async renderToHTML(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderToHTML(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    err: Error | null\n  ) {\n    const { req, res, query } = ctx\n    const is404 = res.statusCode === 404\n\n    if (is404 && this.enabledDirectories.app) {\n      if (this.renderOpts.dev) {\n        await this.ensurePage({\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          clientOnly: false,\n          url: req.url,\n        }).catch(() => {})\n      }\n\n      if (\n        this.getEdgeFunctionsPages().includes(UNDERSCORE_NOT_FOUND_ROUTE_ENTRY)\n      ) {\n        await this.runEdgeFunction({\n          req,\n          res,\n          query: query || {},\n          params: {},\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          appPaths: null,\n        })\n        return null\n      }\n    }\n    return super.renderErrorToResponseImpl(ctx, err)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.renderError(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      setHeaders\n    )\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderErrorToHTML(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  public async render404(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.render404(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      parsedUrl,\n      setHeaders\n    )\n  }\n\n  protected getMiddlewareManifest(): MiddlewareManifest | null {\n    if (this.minimalMode) return null\n    const manifest: MiddlewareManifest = require(this.middlewareManifestPath)\n    return manifest\n  }\n\n  /** Returns the middleware routing item if there is one. */\n  protected getMiddleware(): MiddlewareRoutingItem | undefined {\n    const manifest = this.getMiddlewareManifest()\n    const middleware = manifest?.middleware?.['/']\n    if (!middleware) {\n      return\n    }\n\n    return {\n      match: getMiddlewareMatcher(middleware),\n      page: '/',\n    }\n  }\n\n  protected getEdgeFunctionsPages(): string[] {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return []\n    }\n\n    return Object.keys(manifest.functions)\n  }\n\n  /**\n   * Get information for the edge function located in the provided page\n   * folder. If the edge function info can't be found it will throw\n   * an error.\n   */\n  protected getEdgeFunctionInfo(params: {\n    page: string\n    /** Whether we should look for a middleware or not */\n    middleware: boolean\n  }): {\n    name: string\n    paths: string[]\n    wasm: { filePath: string; name: string }[]\n    env: { [key: string]: string }\n    assets?: { filePath: string; name: string }[]\n  } | null {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return null\n    }\n\n    let foundPage: string\n\n    try {\n      foundPage = denormalizePagePath(normalizePagePath(params.page))\n    } catch (err) {\n      return null\n    }\n\n    let pageInfo = params.middleware\n      ? manifest.middleware[foundPage]\n      : manifest.functions[foundPage]\n\n    if (!pageInfo) {\n      if (!params.middleware) {\n        throw new PageNotFoundError(foundPage)\n      }\n      return null\n    }\n\n    return {\n      name: pageInfo.name,\n      paths: pageInfo.files.map((file) => join(this.distDir, file)),\n      wasm: (pageInfo.wasm ?? []).map((binding) => ({\n        ...binding,\n        filePath: join(this.distDir, binding.filePath),\n      })),\n      assets:\n        pageInfo.assets &&\n        pageInfo.assets.map((binding) => {\n          return {\n            ...binding,\n            filePath: join(this.distDir, binding.filePath),\n          }\n        }),\n      env: pageInfo.env,\n    }\n  }\n\n  /**\n   * Checks if a middleware exists. This method is useful for the development\n   * server where we need to check the filesystem. Here we just check the\n   * middleware manifest.\n   */\n  protected async hasMiddleware(pathname: string): Promise<boolean> {\n    const info = this.getEdgeFunctionInfo({ page: pathname, middleware: true })\n    return Boolean(info && info.paths.length > 0)\n  }\n\n  /**\n   * A placeholder for a function to be defined in the development server.\n   * It will make sure that the root middleware or an edge function has been compiled\n   * so that we can run it.\n   */\n  protected async ensureMiddleware(_url?: string) {}\n  protected async ensureEdgeFunction(_params: {\n    page: string\n    appPaths: string[] | null\n    url?: string\n  }) {}\n\n  /**\n   * This method gets all middleware matchers and execute them when the request\n   * matches. It will make sure that each middleware exists and is compiled and\n   * ready to be invoked. The development server will decorate it to add warns\n   * and errors with rich traces.\n   */\n  protected async runMiddleware(params: {\n    request: NodeNextRequest\n    response: NodeNextResponse\n    parsedUrl: ParsedUrl\n    parsed: UrlWithParsedQuery\n    onWarning?: (warning: Error) => void\n  }) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: runMiddleware should not be called in minimal mode'\n      )\n    }\n\n    // Middleware is skipped for on-demand revalidate requests\n    if (\n      checkIsOnDemandRevalidate(params.request, this.renderOpts.previewProps)\n        .isOnDemandRevalidate\n    ) {\n      return {\n        response: new Response(null, { headers: { 'x-middleware-next': '1' } }),\n      } as FetchEventResult\n    }\n\n    let url: string\n\n    if (this.nextConfig.skipMiddlewareUrlNormalize) {\n      url = getRequestMeta(params.request, 'initURL')!\n    } else {\n      // For middleware to \"fetch\" we must always provide an absolute URL\n      const query = urlQueryToSearchParams(params.parsed.query).toString()\n      const locale = params.parsed.query.__nextLocale\n\n      url = `${getRequestMeta(params.request, 'initProtocol')}://${\n        this.fetchHostname || 'localhost'\n      }:${this.port}${locale ? `/${locale}` : ''}${params.parsed.pathname}${\n        query ? `?${query}` : ''\n      }`\n    }\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const page: {\n      name?: string\n      params?: { [key: string]: string | string[] }\n    } = {}\n\n    const middleware = this.getMiddleware()\n    if (!middleware) {\n      return { finished: false }\n    }\n    if (!(await this.hasMiddleware(middleware.page))) {\n      return { finished: false }\n    }\n\n    await this.ensureMiddleware(params.request.url)\n    const middlewareInfo = this.getEdgeFunctionInfo({\n      page: middleware.page,\n      middleware: true,\n    })\n\n    if (!middlewareInfo) {\n      throw new MiddlewareNotFoundError()\n    }\n\n    const method = (params.request.method || 'GET').toUpperCase()\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n\n    const result = await run({\n      distDir: this.distDir,\n      name: middlewareInfo.name,\n      paths: middlewareInfo.paths,\n      edgeFunctionEntry: middlewareInfo,\n      request: {\n        headers: params.request.headers,\n        method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n          experimental: this.nextConfig.experimental,\n        },\n        url: url,\n        page,\n        body: getRequestMeta(params.request, 'clonableBody'),\n        signal: signalFromNodeResponse(params.response.originalResponse),\n        waitUntil: this.getWaitUntil(),\n      },\n      useCache: true,\n      onWarning: params.onWarning,\n    })\n\n    if (!this.renderOpts.dev) {\n      result.waitUntil.catch((error) => {\n        console.error(`Uncaught: middleware waitUntil errored`, error)\n      })\n    }\n\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed)\n      return { finished: true }\n    }\n\n    // Split compound (comma-separated) set-cookie headers\n    if (result.response.headers.has('set-cookie')) {\n      const cookies = result.response.headers\n        .getSetCookie()\n        .flatMap((maybeCompoundCookie) =>\n          splitCookiesString(maybeCompoundCookie)\n        )\n\n      // Clear existing header(s)\n      result.response.headers.delete('set-cookie')\n\n      // Append each cookie individually.\n      for (const cookie of cookies) {\n        result.response.headers.append('set-cookie', cookie)\n      }\n\n      // Add cookies to request meta.\n      addRequestMeta(params.request, 'middlewareCookie', cookies)\n    }\n\n    return result\n  }\n\n  protected handleCatchallMiddlewareRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsed\n  ) => {\n    const isMiddlewareInvoke = getRequestMeta(req, 'middlewareInvoke')\n\n    if (!isMiddlewareInvoke) {\n      return false\n    }\n\n    const handleFinished = () => {\n      addRequestMeta(req, 'middlewareInvoke', true)\n      res.body('').send()\n      return true\n    }\n\n    const middleware = this.getMiddleware()\n    if (!middleware) {\n      return handleFinished()\n    }\n\n    const initUrl = getRequestMeta(req, 'initURL')!\n    const parsedUrl = parseUrl(initUrl)\n    const pathnameInfo = getNextPathnameInfo(parsedUrl.pathname, {\n      nextConfig: this.nextConfig,\n      i18nProvider: this.i18nProvider,\n    })\n\n    parsedUrl.pathname = pathnameInfo.pathname\n    const normalizedPathname = removeTrailingSlash(parsed.pathname || '')\n    if (!middleware.match(normalizedPathname, req, parsedUrl.query)) {\n      return handleFinished()\n    }\n\n    let result: Awaited<\n      ReturnType<typeof NextNodeServer.prototype.runMiddleware>\n    >\n    let bubblingResult = false\n\n    try {\n      await this.ensureMiddleware(req.url)\n\n      result = await this.runMiddleware({\n        request: req,\n        response: res,\n        parsedUrl: parsedUrl,\n        parsed: parsed,\n      })\n\n      if ('response' in result) {\n        if (isMiddlewareInvoke) {\n          bubblingResult = true\n          throw new BubbledError(true, result)\n        }\n\n        for (const [key, value] of Object.entries(\n          toNodeOutgoingHttpHeaders(result.response.headers)\n        )) {\n          if (key !== 'content-encoding' && value !== undefined) {\n            res.setHeader(key, value as string | string[])\n          }\n        }\n        res.statusCode = result.response.status\n\n        const { originalResponse } = res\n        if (result.response.body) {\n          await pipeToNodeResponse(result.response.body, originalResponse)\n        } else {\n          originalResponse.end()\n        }\n        return true\n      }\n    } catch (err: unknown) {\n      if (bubblingResult) {\n        throw err\n      }\n\n      if (isError(err) && err.code === 'ENOENT') {\n        await this.render404(req, res, parsed)\n        return true\n      }\n\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        await this.renderError(err, req, res, parsed.pathname || '')\n        return true\n      }\n\n      const error = getProperError(err)\n      console.error(error)\n      res.statusCode = 500\n      await this.renderError(error, req, res, parsed.pathname || '')\n      return true\n    }\n\n    return result.finished\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    if (\n      this.renderOpts?.dev ||\n      this.serverOptions?.dev ||\n      process.env.NODE_ENV === 'development' ||\n      process.env.NEXT_PHASE === PHASE_PRODUCTION_BUILD\n    ) {\n      this._cachedPreviewManifest = {\n        version: 4,\n        routes: {},\n        dynamicRoutes: {},\n        notFoundRoutes: [],\n        preview: {\n          previewModeId: require('crypto').randomBytes(16).toString('hex'),\n          previewModeSigningKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n          previewModeEncryptionKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n        },\n      }\n      return this._cachedPreviewManifest\n    }\n\n    this._cachedPreviewManifest = loadManifest(\n      join(this.distDir, PRERENDER_MANIFEST)\n    ) as PrerenderManifest\n\n    return this._cachedPreviewManifest\n  }\n\n  protected getRoutesManifest(): NormalizedRouteManifest | undefined {\n    return getTracer().trace(NextNodeServerSpan.getRoutesManifest, () => {\n      const manifest = loadManifest(join(this.distDir, ROUTES_MANIFEST)) as any\n\n      let rewrites = manifest.rewrites ?? {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      }\n\n      if (Array.isArray(rewrites)) {\n        rewrites = {\n          beforeFiles: [],\n          afterFiles: rewrites,\n          fallback: [],\n        }\n      }\n\n      return { ...manifest, rewrites }\n    })\n  }\n\n  protected attachRequestMeta(\n    req: NodeNextRequest,\n    parsedUrl: NextUrlWithParsedQuery,\n    isUpgradeReq?: boolean\n  ) {\n    // Injected in base-server.ts\n    const protocol = req.headers['x-forwarded-proto']?.includes('https')\n      ? 'https'\n      : 'http'\n\n    // When there are hostname and port we build an absolute URL\n    const initUrl =\n      this.fetchHostname && this.port\n        ? `${protocol}://${this.fetchHostname}:${this.port}${req.url}`\n        : this.nextConfig.experimental.trustHostHeader\n          ? `https://${req.headers.host || 'localhost'}${req.url}`\n          : req.url\n\n    addRequestMeta(req, 'initURL', initUrl)\n    addRequestMeta(req, 'initQuery', { ...parsedUrl.query })\n    addRequestMeta(req, 'initProtocol', protocol)\n\n    if (!isUpgradeReq) {\n      addRequestMeta(req, 'clonableBody', getCloneableBody(req.originalRequest))\n    }\n  }\n\n  protected async runEdgeFunction(params: {\n    req: NodeNextRequest\n    res: NodeNextResponse\n    query: ParsedUrlQuery\n    params: Params | undefined\n    page: string\n    appPaths: string[] | null\n    match?: RouteMatch\n    onError?: (err: unknown) => void\n    onWarning?: (warning: Error) => void\n  }): Promise<FetchEventResult | null> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Middleware is not supported in minimal mode. Please remove the `NEXT_MINIMAL` environment variable.'\n      )\n    }\n    let edgeInfo: ReturnType<typeof this.getEdgeFunctionInfo> | undefined\n\n    const { query, page, match } = params\n\n    if (!match)\n      await this.ensureEdgeFunction({\n        page,\n        appPaths: params.appPaths,\n        url: params.req.url,\n      })\n    edgeInfo = this.getEdgeFunctionInfo({\n      page,\n      middleware: false,\n    })\n\n    if (!edgeInfo) {\n      return null\n    }\n\n    // For edge to \"fetch\" we must always provide an absolute URL\n    const isNextDataRequest = !!query.__nextDataReq\n    const initialUrl = new URL(\n      getRequestMeta(params.req, 'initURL') || '/',\n      'http://n'\n    )\n    const queryString = urlQueryToSearchParams({\n      ...Object.fromEntries(initialUrl.searchParams),\n      ...query,\n      ...params.params,\n    }).toString()\n\n    if (isNextDataRequest) {\n      params.req.headers['x-nextjs-data'] = '1'\n    }\n    initialUrl.search = queryString\n    const url = initialUrl.toString()\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n    const result = await run({\n      distDir: this.distDir,\n      name: edgeInfo.name,\n      paths: edgeInfo.paths,\n      edgeFunctionEntry: edgeInfo,\n      request: {\n        headers: params.req.headers,\n        method: params.req.method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n        },\n        url,\n        page: {\n          name: params.page,\n          ...(params.params && { params: params.params }),\n        },\n        body: getRequestMeta(params.req, 'clonableBody'),\n        signal: signalFromNodeResponse(params.res.originalResponse),\n        waitUntil: this.getWaitUntil(),\n      },\n      useCache: true,\n      onError: params.onError,\n      onWarning: params.onWarning,\n      incrementalCache:\n        (globalThis as any).__incrementalCache ||\n        getRequestMeta(params.req, 'incrementalCache'),\n      serverComponentsHmrCache: getRequestMeta(\n        params.req,\n        'serverComponentsHmrCache'\n      ),\n    })\n\n    if (result.fetchMetrics) {\n      params.req.fetchMetrics = result.fetchMetrics\n    }\n\n    if (!params.res.statusCode || params.res.statusCode < 400) {\n      params.res.statusCode = result.response.status\n      params.res.statusMessage = result.response.statusText\n    }\n\n    // TODO: (wyattjoh) investigate improving this\n\n    result.response.headers.forEach((value, key) => {\n      // The append handling is special cased for `set-cookie`.\n      if (key.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          params.res.appendHeader(key, cookie)\n        }\n      } else {\n        params.res.appendHeader(key, value)\n      }\n    })\n\n    const { originalResponse } = params.res\n    if (result.response.body) {\n      await pipeToNodeResponse(result.response.body, originalResponse)\n    } else {\n      originalResponse.end()\n    }\n\n    return result\n  }\n\n  protected get serverDistDir(): string {\n    if (this._serverDistDir) {\n      return this._serverDistDir\n    }\n    const serverDistDir = join(this.distDir, SERVER_DIRECTORY)\n    this._serverDistDir = serverDistDir\n    return serverDistDir\n  }\n\n  protected async getFallbackErrorComponents(\n    _url?: string\n  ): Promise<LoadComponentsReturnType | null> {\n    // Not implemented for production use cases, this is implemented on the\n    // development server.\n    return null\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    await super.instrumentationOnRequestError(...args)\n\n    // For Node.js runtime production logs, in dev it will be overridden by next-dev-server\n    if (!this.renderOpts.dev) {\n      this.logError(args[0] as Error)\n    }\n  }\n\n  protected onServerClose(listener: () => Promise<void>) {\n    this.cleanupListeners.add(listener)\n  }\n\n  async close(): Promise<void> {\n    await this.cleanupListeners.runAll()\n  }\n\n  protected getInternalWaitUntil(): WaitUntil {\n    this.internalWaitUntil ??= this.createInternalWaitUntil()\n    return this.internalWaitUntil\n  }\n\n  private createInternalWaitUntil() {\n    if (this.minimalMode) {\n      throw new InvariantError(\n        'createInternalWaitUntil should never be called in minimal mode'\n      )\n    }\n\n    const awaiter = new AwaiterOnce({ onError: console.error })\n\n    // TODO(after): warn if the process exits before these are awaited\n    this.onServerClose(() => awaiter.awaiting())\n\n    return awaiter.waitUntil\n  }\n}\n"],"names":["NextNodeServer","dynamicImportEsmDefault","process","env","NEXT_MINIMAL","id","then","mod","default","dynamicRequire","__non_webpack_require__","require","MiddlewareMatcherCache","WeakMap","getMiddlewareMatcher","info","stored","get","Array","isArray","matchers","Error","JSON","stringify","matcher","getMiddlewareRouteMatcher","set","BaseServer","constructor","options","registeredInstrumentation","cleanupListeners","AsyncCallbackSet","handleNextImageRequest","req","res","parsedUrl","pathname","startsWith","minimalMode","nextConfig","output","statusCode","body","send","ImageOptimizerCache","imageOptimizerCache","distDir","sendResponse","ImageError","imageResponseCache","imagesConfig","images","loader","unoptimized","render404","paramsResult","validateParams","originalRequest","query","renderOpts","dev","errorMessage","cacheKey","getCacheKey","cacheEntry","getExtension","previousCacheEntry","buffer","contentType","maxAge","upstreamEtag","etag","imageOptimizer","value","kind","CachedRouteKind","IMAGE","extension","isFallback","revalidate","routeKind","RouteKind","incrementalCache","originalResponse","href","isStatic","isMiss","isStale","Boolean","err","message","handleCatchallRenderRequest","_nextBubbleNoFallback","removeTrailingSlash","i18n","i18nProvider","fromQuery","match","render","addRequestMeta","edgeFunctionsPages","getEdgeFunctionsPages","edgeFunctionsPage","definition","page","NEXT_RSC_UNION_QUERY","handled","runEdgeFunction","params","appPaths","apiError","instrumentationOnRequestError","routePath","routerKind","routeType","revalidateReason","undefined","isPagesAPIRouteMatch","handleApiRequest","NoFallbackError","formatServerError","logErrorWithOriginalStack","logError","renderError","handleCatchallMiddlewareRequest","parsed","isMiddlewareInvoke","getRequestMeta","handleFinished","middleware","getMiddleware","initUrl","parseUrl","pathnameInfo","getNextPathnameInfo","normalizedPathname","result","bubblingResult","ensureMiddleware","url","runMiddleware","request","response","BubbledError","key","Object","entries","toNodeOutgoingHttpHeaders","headers","setHeader","status","pipeToNodeResponse","end","isError","code","DecodeError","error","getProperError","console","finished","optimizeCss","__NEXT_OPTIMIZE_CSS","nextScriptWorkers","__NEXT_SCRIPT_WORKERS","NEXT_DEPLOYMENT_ID","deploymentId","ResponseCache","appDocumentPreloading","experimental","isDefaultEnabled","loadComponents","isAppPath","catch","preloadEntriesOnStart","unstable_preloadEntries","dynamicRoutes","getRoutesManifest","map","r","regex","getRouteRegex","getRouteMatcher","re","setHttpClientAndAgentOptions","serverOptions","experimentalTestProxy","NEXT_PRIVATE_TEST_PROXY","interceptTestApis","middlewareManifestPath","join","serverDistDir","MIDDLEWARE_MANIFEST","prepare","appPathsManifest","getAppPathsManifest","pagesManifest","getPagesManifest","keys","ComponentMod","patchFetch","webpackRequire","__next_app__","m","handleUpgrade","loadInstrumentationModule","instrumentation","resolve","dir","conf","INSTRUMENTATION_HOOK_FILENAME","cause","prepareImpl","runInstrumentationHookIfAvailable","register","loadEnvConfig","forceReload","silent","Log","getIncrementalCache","requestHeaders","requestProtocol","CacheHandler","cacheHandler","interopDefault","formatDynamicImportPath","cacheHandlers","globalThis","__nextCacheHandlers","IncrementalCache","fs","getCacheFilesystem","dynamicIO","allowedRevalidateHeaderKeys","fetchCache","fetchCacheKeyPrefix","maxMemoryCacheSize","cacheMaxMemorySize","flushToDisk","isrFlushToDisk","getPrerenderManifest","CurCacheHandler","getResponseCache","getPublicDir","CLIENT_PUBLIC_FILES_PATH","getHasStaticDir","existsSync","loadManifest","PAGES_MANIFEST","enabledDirectories","app","APP_PATHS_MANIFEST","getinterceptionRoutePatterns","routesManifest","rewrites","beforeFiles","filter","isInterceptionRouteRewrite","rewrite","RegExp","hasPage","getMaybePagePath","locales","getBuildId","buildIdFile","BUILD_ID_FILE","readFileSync","trim","getEnabledDirectories","findDir","pages","sendRenderResult","type","generateEtags","poweredByHeader","expireTime","runApi","handledAsEdgeFunction","module","RouteModuleLoader","load","filename","__nextLocale","__nextDefaultLocale","__nextInferredLocaleFromDefault","previewProps","bind","trustHostHeader","hostname","fetchHostname","onError","multiZoneDraftMode","renderHTML","getTracer","trace","NextNodeServerSpan","renderHTMLImpl","nextFontManifest","lazyRenderAppPage","getServerComponentsHmrCache","lazyRenderPagesPage","fetchExternalImage","fetchInternalImage","handleInternalReq","newReq","newRes","routerServerHandler","isAbsolute","imageUpstream","isDev","getPagePath","renderPageComponent","ctx","bubbleNoFallback","length","getOriginalAppPaths","findPageComponents","spanName","attributes","normalizeAppPath","findPageComponentsImpl","_url","pagePaths","amp","unshift","normalizePagePath","path","pagePath","components","Component","isExperimentalCompile","getStaticProps","__nextDataReq","PageNotFoundError","getNextFontManifest","NEXT_FONT_MANIFEST","_err","_type","ensurePage","_opts","nodeFs","normalizeReq","NodeNextRequest","normalizeRes","NodeNextResponse","getRequestHandler","handler","makeRequestHandler","wrapRequestHandlerNode","urlPath","revalidateHeaders","opts","mocked","createRequestResponseMocks","hasStreamed","getHeader","unstable_onlyGenerated","internal","renderToHTML","renderErrorToResponseImpl","is404","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","clientOnly","includes","setHeaders","renderErrorToHTML","getMiddlewareManifest","manifest","functions","getEdgeFunctionInfo","foundPage","denormalizePagePath","pageInfo","name","paths","files","file","wasm","binding","filePath","assets","hasMiddleware","ensureEdgeFunction","_params","checkIsOnDemandRevalidate","isOnDemandRevalidate","Response","skipMiddlewareUrlNormalize","urlQueryToSearchParams","toString","locale","port","middlewareInfo","MiddlewareNotFoundError","method","toUpperCase","run","edgeFunctionEntry","basePath","trailingSlash","signal","signalFromNodeResponse","waitUntil","getWaitUntil","useCache","onWarning","has","cookies","getSetCookie","flatMap","maybeCompoundCookie","splitCookiesString","delete","cookie","append","_cachedPreviewManifest","NODE_ENV","NEXT_PHASE","PHASE_PRODUCTION_BUILD","version","routes","notFoundRoutes","preview","previewModeId","randomBytes","previewModeSigningKey","previewModeEncryptionKey","PRERENDER_MANIFEST","ROUTES_MANIFEST","afterFiles","fallback","attachRequestMeta","isUpgradeReq","protocol","host","getCloneableBody","edgeInfo","isNextDataRequest","initialUrl","URL","queryString","fromEntries","searchParams","search","__incrementalCache","serverComponentsHmrCache","fetchMetrics","statusMessage","statusText","forEach","toLowerCase","appendHeader","_serverDistDir","SERVER_DIRECTORY","getFallbackErrorComponents","args","onServerClose","listener","add","close","runAll","getInternalWaitUntil","internalWaitUntil","createInternalWaitUntil","InvariantError","awaiter","AwaiterOnce","awaiting"],"mappings":";;;;+BA6JA;;;eAAqBA;;;;QA7Jd;QACA;QACA;uBAOA;2DAkBQ;sBACe;8BACE;6BACe;2BAaxC;8BACiB;sBAC0B;6BACjB;0BACR;6DACJ;iFAauB;yBACE;qCACV;mCACF;gCACH;iEAES;wBACsB;wCACpB;qBACZ;6BACS;qCACH;qCACA;6BACH;0BACS;uEAInC;kCAC0B;0BACA;mCAEY;oCAER;4BAGS;wBACN;4BACL;+BACZ;4BACO;8BACK;6BACQ;kCACN;6BACE;mCACL;8BACL;8BACK;+BACE;gCACL;yCACS;oDAEG;2BAEjB;gCACK;yBACH;kCACK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjC,yCAAyC;AACzC,MAAMC,0BAA0BC,QAAQC,GAAG,CAACC,YAAY,GACpD,CAACC,KACC,MAAM,CAAC,uBAAuB,GAAGA,IAAIC,IAAI,CAAC,CAACC,MAAQA,IAAIC,OAAO,IAAID,OACpE,CAACF,KAAe,MAAM,CAACA,IAAIC,IAAI,CAAC,CAACC,MAAQA,IAAIC,OAAO,IAAID;AAE5D,2DAA2D;AAC3D,MAAME,iBAAiBP,QAAQC,GAAG,CAACC,YAAY,GAC3CM,0BACAC;AASJ,MAAMC,yBAAyB,IAAIC;AAKnC,SAASC,qBACPC,IAA8C;IAE9C,MAAMC,SAASJ,uBAAuBK,GAAG,CAACF;IAC1C,IAAIC,QAAQ;QACV,OAAOA;IACT;IAEA,IAAI,CAACE,MAAMC,OAAO,CAACJ,KAAKK,QAAQ,GAAG;QACjC,MAAM,IAAIC,MACR,CAAC,2CAA2C,EAAEC,KAAKC,SAAS,CAACR,OAAO;IAExE;IAEA,MAAMS,UAAUC,IAAAA,iDAAyB,EAACV,KAAKK,QAAQ;IACvDR,uBAAuBc,GAAG,CAACX,MAAMS;IACjC,OAAOA;AACT;AAEe,MAAMxB,uBAAuB2B,mBAAU;IAuBpDC,YAAYC,OAAgB,CAAE;QAC5B,yBAAyB;QACzB,KAAK,CAACA,eAjBAC,4BAAqC,YAYnCC,mBAAmB,IAAIC,kCAAgB,SAmpBvCC,yBAA2C,OACnDC,KACAC,KACAC;YAEA,IAAI,CAACA,UAAUC,QAAQ,IAAI,CAACD,UAAUC,QAAQ,CAACC,UAAU,CAAC,iBAAiB;gBACzE,OAAO;YACT;YAEA,IACE,IAAI,CAACC,WAAW,IAChB,IAAI,CAACC,UAAU,CAACC,MAAM,KAAK,YAC3BvC,QAAQC,GAAG,CAACC,YAAY,EACxB;gBACA+B,IAAIO,UAAU,GAAG;gBACjBP,IAAIQ,IAAI,CAAC,eAAeC,IAAI;gBAC5B,OAAO;YACP,+CAA+C;YACjD,OAAO;gBACL,MAAM,EAAEC,mBAAmB,EAAE,GAC3BlC,QAAQ;gBAEV,MAAMmC,sBAAsB,IAAID,oBAAoB;oBAClDE,SAAS,IAAI,CAACA,OAAO;oBACrBP,YAAY,IAAI,CAACA,UAAU;gBAC7B;gBAEA,MAAM,EAAEQ,YAAY,EAAEC,UAAU,EAAE,GAChCtC,QAAQ;gBAEV,IAAI,CAAC,IAAI,CAACuC,kBAAkB,EAAE;oBAC5B,MAAM,IAAI7B,MAAM;gBAClB;gBACA,MAAM8B,eAAe,IAAI,CAACX,UAAU,CAACY,MAAM;gBAE3C,IAAID,aAAaE,MAAM,KAAK,aAAaF,aAAaG,WAAW,EAAE;oBACjE,MAAM,IAAI,CAACC,SAAS,CAACrB,KAAKC;oBAC1B,OAAO;gBACT;gBAEA,MAAMqB,eAAeX,oBAAoBY,cAAc,CACrDvB,IAAIwB,eAAe,EACnBtB,UAAUuB,KAAK,EACf,IAAI,CAACnB,UAAU,EACf,CAAC,CAAC,IAAI,CAACoB,UAAU,CAACC,GAAG;gBAGvB,IAAI,kBAAkBL,cAAc;oBAClCrB,IAAIO,UAAU,GAAG;oBACjBP,IAAIQ,IAAI,CAACa,aAAaM,YAAY,EAAElB,IAAI;oBACxC,OAAO;gBACT;gBAEA,MAAMmB,WAAWlB,oBAAoBmB,WAAW,CAACR;gBAEjD,IAAI;wBAiCES;oBAhCJ,MAAM,EAAEC,YAAY,EAAE,GACpBvD,QAAQ;oBACV,MAAMsD,aAAa,MAAM,IAAI,CAACf,kBAAkB,CAACjC,GAAG,CAClD8C,UACA,OAAO,EAAEI,kBAAkB,EAAE;wBAC3B,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,MAAM,EAAEC,YAAY,EAAEC,IAAI,EAAE,GACvD,MAAM,IAAI,CAACC,cAAc,CACvBvC,KACAC,KACAqB,cACAW;wBAGJ,OAAO;4BACLO,OAAO;gCACLC,MAAMC,8BAAe,CAACC,KAAK;gCAC3BT;gCACAI;gCACAM,WAAWZ,aAAaG;gCACxBE;4BACF;4BACAQ,YAAY;4BACZC,YAAYV;wBACd;oBACF,GACA;wBACEW,WAAWC,oBAAS,CAACL,KAAK;wBAC1BM,kBAAkBrC;wBAClBiC,YAAY;oBACd;oBAGF,IAAId,CAAAA,+BAAAA,oBAAAA,WAAYS,KAAK,qBAAjBT,kBAAmBU,IAAI,MAAKC,8BAAe,CAACC,KAAK,EAAE;wBACrD,MAAM,IAAIxD,MACR;oBAEJ;oBAEA2B,aACEd,IAAIwB,eAAe,EACnBvB,IAAIiD,gBAAgB,EACpB5B,aAAa6B,IAAI,EACjBpB,WAAWS,KAAK,CAACI,SAAS,EAC1Bb,WAAWS,KAAK,CAACN,MAAM,EACvBH,WAAWS,KAAK,CAACF,IAAI,EACrBhB,aAAa8B,QAAQ,EACrBrB,WAAWsB,MAAM,GAAG,SAAStB,WAAWuB,OAAO,GAAG,UAAU,OAC5DrC,cACAc,WAAWe,UAAU,IAAI,GACzBS,QAAQ,IAAI,CAAC7B,UAAU,CAACC,GAAG;oBAE7B,OAAO;gBACT,EAAE,OAAO6B,KAAK;oBACZ,IAAIA,eAAezC,YAAY;wBAC7Bd,IAAIO,UAAU,GAAGgD,IAAIhD,UAAU;wBAC/BP,IAAIQ,IAAI,CAAC+C,IAAIC,OAAO,EAAE/C,IAAI;wBAC1B,OAAO;oBACT;oBACA,MAAM8C;gBACR;YACF;QACF,QAEUE,8BAAgD,OACxD1D,KACAC,KACAC;YAEA,IAAI,EAAEC,QAAQ,EAAEsB,KAAK,EAAE,GAAGvB;YAC1B,IAAI,CAACC,UAAU;gBACb,MAAM,IAAIhB,MAAM;YAClB;YAEA,wEAAwE;YACxE,QAAQ;YACRsC,MAAMkC,qBAAqB,GAAG;YAE9B,IAAI;oBAKM;gBAJR,wDAAwD;gBACxDxD,WAAWyD,IAAAA,wCAAmB,EAACzD;gBAE/B,MAAMR,UAAwB;oBAC5BkE,IAAI,GAAE,qBAAA,IAAI,CAACC,YAAY,qBAAjB,mBAAmBC,SAAS,CAAC5D,UAAUsB;gBAC/C;gBACA,MAAMuC,QAAQ,MAAM,IAAI,CAAC9E,QAAQ,CAAC8E,KAAK,CAAC7D,UAAUR;gBAElD,sDAAsD;gBACtD,IAAI,CAACqE,OAAO;oBACV,MAAM,IAAI,CAACC,MAAM,CAACjE,KAAKC,KAAKE,UAAUsB,OAAOvB,WAAW;oBAExD,OAAO;gBACT;gBAEA,sEAAsE;gBACtE,wBAAwB;gBACxBgE,IAAAA,2BAAc,EAAClE,KAAK,SAASgE;gBAE7B,yCAAyC;gBACzC,MAAMG,qBAAqB,IAAI,CAACC,qBAAqB;gBACrD,KAAK,MAAMC,qBAAqBF,mBAAoB;oBAClD,6DAA6D;oBAC7D,IAAIE,sBAAsBL,MAAMM,UAAU,CAACC,IAAI,EAAE;oBAEjD,IAAI,IAAI,CAACjE,UAAU,CAACC,MAAM,KAAK,UAAU;wBACvC,MAAM,IAAI,CAACc,SAAS,CAACrB,KAAKC,KAAKC;wBAC/B,OAAO;oBACT;oBACA,OAAOuB,MAAMkC,qBAAqB;oBAClC,OAAOlC,KAAK,CAAC+C,sCAAoB,CAAC;oBAElC,kDAAkD;oBAClD,8BAA8B;oBAC9B,IAAI;wBACF,MAAMC,UAAU,MAAM,IAAI,CAACC,eAAe,CAAC;4BACzC1E;4BACAC;4BACAwB;4BACAkD,QAAQX,MAAMW,MAAM;4BACpBJ,MAAMP,MAAMM,UAAU,CAACC,IAAI;4BAC3BP;4BACAY,UAAU;wBACZ;wBACA,IAAIH,SAAS,OAAO;oBACtB,EAAE,OAAOI,UAAU;wBACjB,MAAM,IAAI,CAACC,6BAA6B,CAACD,UAAU7E,KAAK;4BACtD+E,WAAWf,MAAMM,UAAU,CAACC,IAAI;4BAChCS,YAAY;4BACZC,WAAW;4BACX,oCAAoC;4BACpCC,kBAAkBC;wBACpB;wBACA,MAAMN;oBACR;gBACF;gBAEA,oEAAoE;gBACpE,MAAM;gBACN,iDAAiD;gBACjD,IAAIO,IAAAA,wCAAoB,EAACpB,QAAQ;oBAC/B,IAAI,IAAI,CAAC1D,UAAU,CAACC,MAAM,KAAK,UAAU;wBACvC,MAAM,IAAI,CAACc,SAAS,CAACrB,KAAKC,KAAKC;wBAC/B,OAAO;oBACT;oBAEA,OAAOuB,MAAMkC,qBAAqB;oBAElC,MAAMc,UAAU,MAAM,IAAI,CAACY,gBAAgB,CAACrF,KAAKC,KAAKwB,OAAOuC;oBAC7D,IAAIS,SAAS,OAAO;gBACtB;gBAEA,MAAM,IAAI,CAACR,MAAM,CAACjE,KAAKC,KAAKE,UAAUsB,OAAOvB,WAAW;gBAExD,OAAO;YACT,EAAE,OAAOsD,KAAU;gBACjB,IAAIA,eAAe8B,2BAAe,EAAE;oBAClC,MAAM9B;gBACR;gBAEA,IAAI;oBACF,IAAI,IAAI,CAAC9B,UAAU,CAACC,GAAG,EAAE;wBACvB,MAAM,EAAE4D,iBAAiB,EAAE,GACzB9G,QAAQ;wBACV8G,kBAAkB/B;wBAClB,IAAI,CAACgC,yBAAyB,CAAChC;oBACjC,OAAO;wBACL,IAAI,CAACiC,QAAQ,CAACjC;oBAChB;oBACAvD,IAAIO,UAAU,GAAG;oBACjB,MAAM,IAAI,CAACkF,WAAW,CAAClC,KAAKxD,KAAKC,KAAKE,UAAUsB;oBAChD,OAAO;gBACT,EAAE,OAAM,CAAC;gBAET,MAAM+B;YACR;QACF,QAqdUmC,kCAAoD,OAC5D3F,KACAC,KACA2F;YAEA,MAAMC,qBAAqBC,IAAAA,2BAAc,EAAC9F,KAAK;YAE/C,IAAI,CAAC6F,oBAAoB;gBACvB,OAAO;YACT;YAEA,MAAME,iBAAiB;gBACrB7B,IAAAA,2BAAc,EAAClE,KAAK,oBAAoB;gBACxCC,IAAIQ,IAAI,CAAC,IAAIC,IAAI;gBACjB,OAAO;YACT;YAEA,MAAMsF,aAAa,IAAI,CAACC,aAAa;YACrC,IAAI,CAACD,YAAY;gBACf,OAAOD;YACT;YAEA,MAAMG,UAAUJ,IAAAA,2BAAc,EAAC9F,KAAK;YACpC,MAAME,YAAYiG,IAAAA,kBAAQ,EAACD;YAC3B,MAAME,eAAeC,IAAAA,wCAAmB,EAACnG,UAAUC,QAAQ,EAAE;gBAC3DG,YAAY,IAAI,CAACA,UAAU;gBAC3BwD,cAAc,IAAI,CAACA,YAAY;YACjC;YAEA5D,UAAUC,QAAQ,GAAGiG,aAAajG,QAAQ;YAC1C,MAAMmG,qBAAqB1C,IAAAA,wCAAmB,EAACgC,OAAOzF,QAAQ,IAAI;YAClE,IAAI,CAAC6F,WAAWhC,KAAK,CAACsC,oBAAoBtG,KAAKE,UAAUuB,KAAK,GAAG;gBAC/D,OAAOsE;YACT;YAEA,IAAIQ;YAGJ,IAAIC,iBAAiB;YAErB,IAAI;gBACF,MAAM,IAAI,CAACC,gBAAgB,CAACzG,IAAI0G,GAAG;gBAEnCH,SAAS,MAAM,IAAI,CAACI,aAAa,CAAC;oBAChCC,SAAS5G;oBACT6G,UAAU5G;oBACVC,WAAWA;oBACX0F,QAAQA;gBACV;gBAEA,IAAI,cAAcW,QAAQ;oBACxB,IAAIV,oBAAoB;wBACtBW,iBAAiB;wBACjB,MAAM,IAAIM,oBAAY,CAAC,MAAMP;oBAC/B;oBAEA,KAAK,MAAM,CAACQ,KAAKvE,MAAM,IAAIwE,OAAOC,OAAO,CACvCC,IAAAA,iCAAyB,EAACX,OAAOM,QAAQ,CAACM,OAAO,GAChD;wBACD,IAAIJ,QAAQ,sBAAsBvE,UAAU2C,WAAW;4BACrDlF,IAAImH,SAAS,CAACL,KAAKvE;wBACrB;oBACF;oBACAvC,IAAIO,UAAU,GAAG+F,OAAOM,QAAQ,CAACQ,MAAM;oBAEvC,MAAM,EAAEnE,gBAAgB,EAAE,GAAGjD;oBAC7B,IAAIsG,OAAOM,QAAQ,CAACpG,IAAI,EAAE;wBACxB,MAAM6G,IAAAA,gCAAkB,EAACf,OAAOM,QAAQ,CAACpG,IAAI,EAAEyC;oBACjD,OAAO;wBACLA,iBAAiBqE,GAAG;oBACtB;oBACA,OAAO;gBACT;YACF,EAAE,OAAO/D,KAAc;gBACrB,IAAIgD,gBAAgB;oBAClB,MAAMhD;gBACR;gBAEA,IAAIgE,IAAAA,gBAAO,EAAChE,QAAQA,IAAIiE,IAAI,KAAK,UAAU;oBACzC,MAAM,IAAI,CAACpG,SAAS,CAACrB,KAAKC,KAAK2F;oBAC/B,OAAO;gBACT;gBAEA,IAAIpC,eAAekE,kBAAW,EAAE;oBAC9BzH,IAAIO,UAAU,GAAG;oBACjB,MAAM,IAAI,CAACkF,WAAW,CAAClC,KAAKxD,KAAKC,KAAK2F,OAAOzF,QAAQ,IAAI;oBACzD,OAAO;gBACT;gBAEA,MAAMwH,QAAQC,IAAAA,uBAAc,EAACpE;gBAC7BqE,QAAQF,KAAK,CAACA;gBACd1H,IAAIO,UAAU,GAAG;gBACjB,MAAM,IAAI,CAACkF,WAAW,CAACiC,OAAO3H,KAAKC,KAAK2F,OAAOzF,QAAQ,IAAI;gBAC3D,OAAO;YACT;YAEA,OAAOoG,OAAOuB,QAAQ;QACxB;QAx6CE;;;;KAIC,GACD,IAAI,IAAI,CAACpG,UAAU,CAACqG,WAAW,EAAE;YAC/B/J,QAAQC,GAAG,CAAC+J,mBAAmB,GAAG5I,KAAKC,SAAS,CAAC;QACnD;QACA,IAAI,IAAI,CAACqC,UAAU,CAACuG,iBAAiB,EAAE;YACrCjK,QAAQC,GAAG,CAACiK,qBAAqB,GAAG9I,KAAKC,SAAS,CAAC;QACrD;QACArB,QAAQC,GAAG,CAACkK,kBAAkB,GAAG,IAAI,CAAC7H,UAAU,CAAC8H,YAAY,IAAI;QAEjE,IAAI,CAAC,IAAI,CAAC/H,WAAW,EAAE;YACrB,IAAI,CAACW,kBAAkB,GAAG,IAAIqH,sBAAa,CAAC,IAAI,CAAChI,WAAW;QAC9D;QAEA,MAAM,EAAEiI,qBAAqB,EAAE,GAAG,IAAI,CAAChI,UAAU,CAACiI,YAAY;QAC9D,MAAMC,mBAAmB,OAAOF,0BAA0B;QAE1D,IACE,CAAC3I,QAAQgC,GAAG,IACX2G,CAAAA,0BAA0B,QACzB,CAAE,CAAA,IAAI,CAACjI,WAAW,IAAImI,gBAAe,CAAC,GACxC;YACA,+CAA+C;YAC/C,2BAA2B;YAC3BC,IAAAA,8BAAc,EAAC;gBACb5H,SAAS,IAAI,CAACA,OAAO;gBACrB0D,MAAM;gBACNmE,WAAW;YACb,GAAGC,KAAK,CAAC,KAAO;YAChBF,IAAAA,8BAAc,EAAC;gBACb5H,SAAS,IAAI,CAACA,OAAO;gBACrB0D,MAAM;gBACNmE,WAAW;YACb,GAAGC,KAAK,CAAC,KAAO;QAClB;QAEA,IACE,CAAChJ,QAAQgC,GAAG,IACZ,CAAC,IAAI,CAACtB,WAAW,IACjB,IAAI,CAACC,UAAU,CAACiI,YAAY,CAACK,qBAAqB,EAClD;YACA,IAAI,CAACC,uBAAuB;QAC9B;QAEA,IAAI,CAAClJ,QAAQgC,GAAG,EAAE;YAChB,MAAM,EAAEmH,gBAAgB,EAAE,EAAE,GAAG,IAAI,CAACC,iBAAiB,MAAM,CAAC;YAC5D,IAAI,CAACD,aAAa,GAAGA,cAAcE,GAAG,CAAC,CAACC;gBACtC,wDAAwD;gBACxD,MAAMC,QAAQC,IAAAA,yBAAa,EAACF,EAAE1E,IAAI;gBAClC,MAAMP,QAAQoF,IAAAA,6BAAe,EAACF;gBAE9B,OAAO;oBACLlF;oBACAO,MAAM0E,EAAE1E,IAAI;oBACZ8E,IAAIH,MAAMG,EAAE;gBACd;YACF;QACF;QAEA,sDAAsD;QACtDC,IAAAA,+CAA4B,EAAC,IAAI,CAAChJ,UAAU;QAE5C,2CAA2C;QAC3C,IAAI,IAAI,CAACiJ,aAAa,CAACC,qBAAqB,EAAE;YAC5CxL,QAAQC,GAAG,CAACwL,uBAAuB,GAAG;YACtC,MAAM,EACJC,iBAAiB,EAClB,GAAGjL,QAAQ;YACZiL;QACF;QAEA,IAAI,CAACC,sBAAsB,GAAGC,IAAAA,UAAI,EAAC,IAAI,CAACC,aAAa,EAAEC,8BAAmB;QAE1E,4EAA4E;QAC5E,2EAA2E;QAC3E,qEAAqE;QACrE,uEAAuE;QACvE,IAAI,CAACnK,QAAQgC,GAAG,EAAE;YAChB,IAAI,CAACoI,OAAO,GAAGpB,KAAK,CAAC,CAACnF;gBACpBqE,QAAQF,KAAK,CAAC,4BAA4BnE;YAC5C;QACF;IACF;IAEA,MAAaqF,0BAAyC;QACpD,MAAMmB,mBAAmB,IAAI,CAACC,mBAAmB;QACjD,MAAMC,gBAAgB,IAAI,CAACC,gBAAgB;QAE3C,KAAK,MAAM5F,QAAQyC,OAAOoD,IAAI,CAACF,iBAAiB,CAAC,GAAI;YACnD,MAAMzB,IAAAA,8BAAc,EAAC;gBACnB5H,SAAS,IAAI,CAACA,OAAO;gBACrB0D;gBACAmE,WAAW;YACb,GAAGC,KAAK,CAAC,KAAO;QAClB;QAEA,KAAK,MAAMpE,QAAQyC,OAAOoD,IAAI,CAACJ,oBAAoB,CAAC,GAAI;YACtD,MAAMvB,IAAAA,8BAAc,EAAC;gBAAE5H,SAAS,IAAI,CAACA,OAAO;gBAAE0D;gBAAMmE,WAAW;YAAK,GACjEtK,IAAI,CAAC,OAAO,EAAEiM,YAAY,EAAE;gBAC3B,iEAAiE;gBACjE,yEAAyE;gBACzE,oDAAoD;gBACpDA,aAAaC,UAAU;gBAEvB,MAAMC,iBAAiBF,aAAaG,YAAY,CAAC/L,OAAO;gBACxD,IAAI8L,kCAAAA,eAAgBE,CAAC,EAAE;oBACrB,KAAK,MAAMtM,MAAM6I,OAAOoD,IAAI,CAACG,eAAeE,CAAC,EAAG;wBAC9C,MAAMF,eAAepM;oBACvB;gBACF;YACF,GACCwK,KAAK,CAAC,KAAO;QAClB;IACF;IAEA,MAAgB+B,gBAA+B;IAC7C,yEAAyE;IACzE,eAAe;IACjB;IAEA,MAAgBC,4BAA4B;QAC1C,IAAI,CAAC,IAAI,CAACpB,aAAa,CAAC5H,GAAG,EAAE;YAC3B,IAAI;gBACF,IAAI,CAACiJ,eAAe,GAAG,MAAMrM,eAC3BsM,IAAAA,aAAO,EACL,IAAI,CAACtB,aAAa,CAACuB,GAAG,IAAI,KAC1B,IAAI,CAACvB,aAAa,CAACwB,IAAI,CAAClK,OAAO,EAC/B,UACAmK,yCAA6B;YAGnC,EAAE,OAAOxH,KAAU;gBACjB,IAAIA,IAAIiE,IAAI,KAAK,oBAAoB;oBACnC,MAAM,IAAItI,MACR,4DACA;wBAAE8L,OAAOzH;oBAAI;gBAEjB;YACF;QACF;QACA,OAAO,IAAI,CAACoH,eAAe;IAC7B;IAEA,MAAgBM,cAAc;QAC5B,MAAM,KAAK,CAACA;QACZ,MAAM,IAAI,CAACC,iCAAiC;IAC9C;IAEA,MAAgBA,oCAAoC;YAG5C,gCAAA;QAFN,IAAI,IAAI,CAACvL,yBAAyB,EAAE;QACpC,IAAI,CAACA,yBAAyB,GAAG;QACjC,QAAM,wBAAA,IAAI,CAACgL,eAAe,sBAApB,iCAAA,sBAAsBQ,QAAQ,qBAA9B,oCAAA;IACR;IAEUC,cAAc,EACtB1J,GAAG,EACH2J,WAAW,EACXC,MAAM,EAKP,EAAE;QACDF,IAAAA,kBAAa,EACX,IAAI,CAACP,GAAG,EACRnJ,KACA4J,SAAS;YAAE1M,MAAM,KAAO;YAAG8I,OAAO,KAAO;QAAE,IAAI6D,MAC/CF;IAEJ;IAEA,MAAgBG,oBAAoB,EAClCC,cAAc,EACdC,eAAe,EAIhB,EAAE;QACD,MAAMhK,MAAM,CAAC,CAAC,IAAI,CAACD,UAAU,CAACC,GAAG;QACjC,IAAIiK;QACJ,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAI,CAACvL,UAAU;QAExC,IAAIuL,cAAc;YAChBD,eAAeE,IAAAA,8BAAc,EAC3B,MAAM/N,wBACJgO,IAAAA,gDAAuB,EAAC,IAAI,CAAClL,OAAO,EAAEgL;QAG5C;QAEA,MAAM,EAAEG,aAAa,EAAE,GAAG,IAAI,CAAC1L,UAAU,CAACiI,YAAY;QAEtD,IAAI,CAAC,AAAC0D,WAAmBC,mBAAmB,IAAIF,eAAe;;YAC3DC,WAAmBC,mBAAmB,GAAG,CAAC;YAE5C,KAAK,MAAMnF,OAAOC,OAAOoD,IAAI,CAAC4B,eAAgB;gBAC5C,IAAIA,aAAa,CAACjF,IAAI,EAAE;;oBACpBkF,WAAmBC,mBAAmB,CAACnF,IAAI,GAAG+E,IAAAA,8BAAc,EAC5D,MAAM/N,wBACJgO,IAAAA,gDAAuB,EAAC,IAAI,CAAClL,OAAO,EAAEmL,aAAa,CAACjF,IAAI;gBAG9D;YACF;QACF;QAEA,wCAAwC;QACxC,kDAAkD;QAClD,oBAAoB;QACpB,OAAO,IAAIoF,kCAAgB,CAAC;YAC1BC,IAAI,IAAI,CAACC,kBAAkB;YAC3B1K;YACA+J;YACAC;YACAW,WAAW/I,QAAQ,IAAI,CAACjD,UAAU,CAACiI,YAAY,CAAC+D,SAAS;YACzDC,6BACE,IAAI,CAACjM,UAAU,CAACiI,YAAY,CAACgE,2BAA2B;YAC1DlM,aAAa,IAAI,CAACA,WAAW;YAC7BwJ,eAAe,IAAI,CAACA,aAAa;YACjC2C,YAAY;YACZC,qBAAqB,IAAI,CAACnM,UAAU,CAACiI,YAAY,CAACkE,mBAAmB;YACrEC,oBAAoB,IAAI,CAACpM,UAAU,CAACqM,kBAAkB;YACtDC,aACE,CAAC,IAAI,CAACvM,WAAW,IAAI,IAAI,CAACC,UAAU,CAACiI,YAAY,CAACsE,cAAc;YAClEC,sBAAsB,IAAM,IAAI,CAACA,oBAAoB;YACrDC,iBAAiBnB;QACnB;IACF;IAEUoB,mBAAmB;QAC3B,OAAO,IAAI3E,sBAAa,CAAC,IAAI,CAAChI,WAAW;IAC3C;IAEU4M,eAAuB;QAC/B,OAAOrD,IAAAA,UAAI,EAAC,IAAI,CAACkB,GAAG,EAAEoC,mCAAwB;IAChD;IAEUC,kBAA2B;QACnC,OAAOf,WAAE,CAACgB,UAAU,CAACxD,IAAAA,UAAI,EAAC,IAAI,CAACkB,GAAG,EAAE;IACtC;IAEUX,mBAA8C;QACtD,OAAOkD,IAAAA,0BAAY,EACjBzD,IAAAA,UAAI,EAAC,IAAI,CAACC,aAAa,EAAEyD,yBAAc;IAE3C;IAEUrD,sBAAiD;QACzD,IAAI,CAAC,IAAI,CAACsD,kBAAkB,CAACC,GAAG,EAAE,OAAOrI;QAEzC,OAAOkI,IAAAA,0BAAY,EACjBzD,IAAAA,UAAI,EAAC,IAAI,CAACC,aAAa,EAAE4D,6BAAkB;IAE/C;IAEUC,+BAAyC;QACjD,IAAI,CAAC,IAAI,CAACH,kBAAkB,CAACC,GAAG,EAAE,OAAO,EAAE;QAE3C,MAAMG,iBAAiB,IAAI,CAAC5E,iBAAiB;QAC7C,OACE4E,CAAAA,kCAAAA,eAAgBC,QAAQ,CAACC,WAAW,CACjCC,MAAM,CAACC,8DAA0B,EACjC/E,GAAG,CAAC,CAACgF,UAAY,IAAIC,OAAOD,QAAQ9E,KAAK,OAAM,EAAE;IAExD;IAEA,MAAgBgF,QAAQ/N,QAAgB,EAAoB;YAIxD;QAHF,OAAO,CAAC,CAACgO,IAAAA,yBAAgB,EACvBhO,UACA,IAAI,CAACU,OAAO,GACZ,wBAAA,IAAI,CAACP,UAAU,CAACuD,IAAI,qBAApB,sBAAsBuK,OAAO,EAC7B,IAAI,CAACb,kBAAkB,CAACC,GAAG;IAE/B;IAEUa,aAAqB;QAC7B,MAAMC,cAAc1E,IAAAA,UAAI,EAAC,IAAI,CAAC/I,OAAO,EAAE0N,wBAAa;QACpD,IAAI;YACF,OAAOnC,WAAE,CAACoC,YAAY,CAACF,aAAa,QAAQG,IAAI;QAClD,EAAE,OAAOjL,KAAU;YACjB,IAAIA,IAAIiE,IAAI,KAAK,UAAU;gBACzB,MAAM,IAAItI,MACR,CAAC,0CAA0C,EAAE,IAAI,CAAC0B,OAAO,CAAC,yJAAyJ,CAAC;YAExN;YAEA,MAAM2C;QACR;IACF;IAEUkL,sBAAsB/M,GAAY,EAA0B;QACpE,MAAMmJ,MAAMnJ,MAAM,IAAI,CAACmJ,GAAG,GAAG,IAAI,CAACjB,aAAa;QAE/C,OAAO;YACL2D,KAAKmB,IAAAA,qBAAO,EAAC7D,KAAK,SAAS,OAAO;YAClC8D,OAAOD,IAAAA,qBAAO,EAAC7D,KAAK,WAAW,OAAO;QACxC;IACF;IAEU+D,iBACR7O,GAAoB,EACpBC,GAAqB,EACrBN,OAOC,EACc;QACf,OAAOkP,IAAAA,6BAAgB,EAAC;YACtB7O,KAAKA,IAAIwB,eAAe;YACxBvB,KAAKA,IAAIiD,gBAAgB;YACzBqD,QAAQ5G,QAAQ4G,MAAM;YACtBuI,MAAMnP,QAAQmP,IAAI;YAClBC,eAAepP,QAAQoP,aAAa;YACpCC,iBAAiBrP,QAAQqP,eAAe;YACxClM,YAAYnD,QAAQmD,UAAU;YAC9BmM,YAAYtP,QAAQsP,UAAU;QAChC;IACF;IAEA,MAAgBC,OACdlP,GAAoB,EACpBC,GAAqB,EACrBwB,KAAqB,EACrBuC,KAAyB,EACP;QAClB,MAAMG,qBAAqB,IAAI,CAACC,qBAAqB;QAErD,KAAK,MAAMC,qBAAqBF,mBAAoB;YAClD,IAAIE,sBAAsBL,MAAMM,UAAU,CAACnE,QAAQ,EAAE;gBACnD,MAAMgP,wBAAwB,MAAM,IAAI,CAACzK,eAAe,CAAC;oBACvD1E;oBACAC;oBACAwB;oBACAkD,QAAQX,MAAMW,MAAM;oBACpBJ,MAAMP,MAAMM,UAAU,CAACnE,QAAQ;oBAC/ByE,UAAU;gBACZ;gBAEA,IAAIuK,uBAAuB;oBACzB,OAAO;gBACT;YACF;QACF;QAEA,6DAA6D;QAC7D,MAAMC,SAAS,MAAMC,oCAAiB,CAACC,IAAI,CACzCtL,MAAMM,UAAU,CAACiL,QAAQ;QAG3B9N,QAAQ;YAAE,GAAGA,KAAK;YAAE,GAAGuC,MAAMW,MAAM;QAAC;QAEpC,OAAOlD,MAAM+N,YAAY;QACzB,OAAO/N,MAAMgO,mBAAmB;QAChC,OAAOhO,MAAMiO,+BAA+B;QAE5C,MAAMN,OAAOnL,MAAM,CAACjE,IAAIwB,eAAe,EAAEvB,IAAIiD,gBAAgB,EAAE;YAC7DyM,cAAc,IAAI,CAACjO,UAAU,CAACiO,YAAY;YAC1C7M,YAAY,IAAI,CAACA,UAAU,CAAC8M,IAAI,CAAC,IAAI;YACrCC,iBAAiB,IAAI,CAACvP,UAAU,CAACiI,YAAY,CAACsH,eAAe;YAC7DtD,6BACE,IAAI,CAACjM,UAAU,CAACiI,YAAY,CAACgE,2BAA2B;YAC1DuD,UAAU,IAAI,CAACC,aAAa;YAC5B1P,aAAa,IAAI,CAACA,WAAW;YAC7BsB,KAAK,IAAI,CAACD,UAAU,CAACC,GAAG,KAAK;YAC7BF;YACAkD,QAAQX,MAAMW,MAAM;YACpBJ,MAAMP,MAAMM,UAAU,CAACnE,QAAQ;YAC/B6P,SAAS,IAAI,CAAClL,6BAA6B,CAAC8K,IAAI,CAAC,IAAI;YACrDK,oBAAoB,IAAI,CAAC3P,UAAU,CAACiI,YAAY,CAAC0H,kBAAkB;QACrE;QAEA,OAAO;IACT;IAEA,MAAgBC,WACdlQ,GAAoB,EACpBC,GAAqB,EACrBE,QAAgB,EAChBsB,KAAyB,EACzBC,UAA4B,EACL;QACvB,OAAOyO,IAAAA,iBAAS,IAAGC,KAAK,CAACC,8BAAkB,CAACH,UAAU,EAAE,UACtD,IAAI,CAACI,cAAc,CAACtQ,KAAKC,KAAKE,UAAUsB,OAAOC;IAEnD;IAEA,MAAc4O,eACZtQ,GAAoB,EACpBC,GAAqB,EACrBE,QAAgB,EAChBsB,KAAyB,EACzBC,UAA4B,EACL;QACvB,IAAI1D,QAAQC,GAAG,CAACC,YAAY,EAAE;YAC5B,MAAM,IAAIiB,MACR;QAEF,+CAA+C;QACjD,OAAO;YACL,4EAA4E;YAC5E,8DAA8D;YAC9D,4HAA4H;YAC5HuC,WAAW6O,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;YAEnD,IAAI,IAAI,CAAChD,kBAAkB,CAACC,GAAG,IAAI9L,WAAWgH,SAAS,EAAE;gBACvD,OAAO8H,IAAAA,+BAAiB,EACtBxQ,KACAC,KACAE,UACAsB,OACA,kEAAkE;gBAClE,oEAAoE;gBACpE,MACAC,YACA,IAAI,CAAC+O,2BAA2B,IAChC;YAEJ;YAEA,qEAAqE;YACrE,oEAAoE;YAEpE,OAAOC,IAAAA,kCAAmB,EACxB1Q,IAAIwB,eAAe,EACnBvB,IAAIiD,gBAAgB,EACpB/C,UACAsB,OACAC;QAEJ;IACF;IAEA,MAAgBa,eACdvC,GAAoB,EACpBC,GAAqB,EACrBqB,YAA2D,EAC3DW,kBAAyC,EAOxC;QACD,IAAIjE,QAAQC,GAAG,CAACC,YAAY,EAAE;YAC5B,MAAM,IAAIiB,MACR;QAEJ,OAAO;YACL,MAAM,EAAEoD,cAAc,EAAEoO,kBAAkB,EAAEC,kBAAkB,EAAE,GAC9DnS,QAAQ;YAEV,MAAMoS,oBAAoB,OACxBC,QACAC;gBAEA,IAAID,OAAOpK,GAAG,KAAK1G,IAAI0G,GAAG,EAAE;oBAC1B,MAAM,IAAIvH,MAAM,CAAC,kDAAkD,CAAC;gBACtE;gBAEA,IAAI,CAAC,IAAI,CAAC6R,mBAAmB,EAAE;oBAC7B,MAAM,IAAI7R,MAAM,CAAC,qCAAqC,CAAC;gBACzD;gBAEA,MAAM,IAAI,CAAC6R,mBAAmB,CAACF,QAAQC;gBACvC;YACF;YAEA,MAAM,EAAEE,UAAU,EAAE9N,IAAI,EAAE,GAAG7B;YAE7B,MAAM4P,gBAAgBD,aAClB,MAAMN,mBAAmBxN,QACzB,MAAMyN,mBACJzN,MACAnD,IAAIwB,eAAe,EACnBvB,IAAIiD,gBAAgB,EACpB2N;YAGN,OAAOtO,eAAe2O,eAAe5P,cAAc,IAAI,CAAChB,UAAU,EAAE;gBAClE6Q,OAAO,IAAI,CAACzP,UAAU,CAACC,GAAG;gBAC1BM;YACF;QACF;IACF;IAEUmP,YAAYjR,QAAgB,EAAEiO,OAAkB,EAAU;QAClE,OAAOgD,IAAAA,oBAAW,EAChBjR,UACA,IAAI,CAACU,OAAO,EACZuN,SACA,IAAI,CAACb,kBAAkB,CAACC,GAAG;IAE/B;IAEA,MAAgB6D,oBACdC,GAAsD,EACtDC,gBAAyB,EACzB;QACA,MAAMpN,qBAAqB,IAAI,CAACC,qBAAqB,MAAM,EAAE;QAC7D,IAAID,mBAAmBqN,MAAM,EAAE;YAC7B,MAAM5M,WAAW,IAAI,CAAC6M,mBAAmB,CAACH,IAAInR,QAAQ;YACtD,MAAMuI,YAAY1J,MAAMC,OAAO,CAAC2F;YAEhC,IAAIL,OAAO+M,IAAInR,QAAQ;YACvB,IAAIuI,WAAW;gBACb,yEAAyE;gBACzEnE,OAAOK,QAAQ,CAAC,EAAE;YACpB;YAEA,KAAK,MAAMP,qBAAqBF,mBAAoB;gBAClD,IAAIE,sBAAsBE,MAAM;oBAC9B,MAAM,IAAI,CAACG,eAAe,CAAC;wBACzB1E,KAAKsR,IAAItR,GAAG;wBACZC,KAAKqR,IAAIrR,GAAG;wBACZwB,OAAO6P,IAAI7P,KAAK;wBAChBkD,QAAQ2M,IAAI5P,UAAU,CAACiD,MAAM;wBAC7BJ;wBACAK;oBACF;oBACA,OAAO;gBACT;YACF;QACF;QAEA,OAAO,KAAK,CAACyM,oBAAoBC,KAAKC;IACxC;IAEA,MAAgBG,mBAAmB,EACjCnN,IAAI,EACJ9C,KAAK,EACLkD,MAAM,EACN+D,SAAS,EACThC,GAAG,EAYJ,EAAwC;QACvC,OAAOyJ,IAAAA,iBAAS,IAAGC,KAAK,CACtBC,8BAAkB,CAACqB,kBAAkB,EACrC;YACEC,UAAU;YACVC,YAAY;gBACV,cAAclJ,YAAYmJ,IAAAA,0BAAgB,EAACtN,QAAQA;YACrD;QACF,GACA,IACE,IAAI,CAACuN,sBAAsB,CAAC;gBAC1BvN;gBACA9C;gBACAkD;gBACA+D;gBACAhC;YACF;IAEN;IAEA,MAAcoL,uBAAuB,EACnCvN,IAAI,EACJ9C,KAAK,EACLkD,MAAM,EACN+D,SAAS,EACThC,KAAKqL,IAAI,EAOV,EAAwC;QACvC,MAAMC,YAAsB;YAACzN;SAAK;QAClC,IAAI9C,MAAMwQ,GAAG,EAAE;YACb,yCAAyC;YACzCD,UAAUE,OAAO,CACf,AAACxJ,CAAAA,YAAYmJ,IAAAA,0BAAgB,EAACtN,QAAQ4N,IAAAA,oCAAiB,EAAC5N,KAAI,IAAK;QAErE;QAEA,IAAI9C,MAAM+N,YAAY,EAAE;YACtBwC,UAAUE,OAAO,IACZF,UAAUhJ,GAAG,CACd,CAACoJ,OAAS,CAAC,CAAC,EAAE3Q,MAAM+N,YAAY,GAAG4C,SAAS,MAAM,KAAKA,MAAM;QAGnE;QAEA,KAAK,MAAMC,YAAYL,UAAW;YAChC,IAAI;gBACF,MAAMM,aAAa,MAAM7J,IAAAA,8BAAc,EAAC;oBACtC5H,SAAS,IAAI,CAACA,OAAO;oBACrB0D,MAAM8N;oBACN3J;gBACF;gBAEA,IACEjH,MAAM+N,YAAY,IAClB,OAAO8C,WAAWC,SAAS,KAAK,YAChC,CAACF,SAASjS,UAAU,CAAC,CAAC,CAAC,EAAEqB,MAAM+N,YAAY,EAAE,GAC7C;oBAGA;gBACF;gBAEA,OAAO;oBACL8C;oBACA7Q,OAAO;wBACL,GAAI,CAAC,IAAI,CAACC,UAAU,CAAC8Q,qBAAqB,IAC1CF,WAAWG,cAAc,GACpB;4BACCR,KAAKxQ,MAAMwQ,GAAG;4BACdS,eAAejR,MAAMiR,aAAa;4BAClClD,cAAc/N,MAAM+N,YAAY;4BAChCC,qBAAqBhO,MAAMgO,mBAAmB;wBAChD,IACAhO,KAAK;wBACT,iCAAiC;wBACjC,GAAI,AAACiH,CAAAA,YAAY,CAAC,IAAI/D,MAAK,KAAM,CAAC,CAAC;oBACrC;gBACF;YACF,EAAE,OAAOnB,KAAK;gBACZ,yDAAyD;gBACzD,wBAAwB;gBACxB,IAAI,CAAEA,CAAAA,eAAemP,wBAAiB,AAAD,GAAI;oBACvC,MAAMnP;gBACR;YACF;QACF;QACA,OAAO;IACT;IAEUoP,sBAAoD;QAC5D,OAAOvF,IAAAA,0BAAY,EACjBzD,IAAAA,UAAI,EAAC,IAAI,CAAC/I,OAAO,EAAE,UAAUgS,6BAAkB,GAAG;IAEtD;IA0OA,0DAA0D;IAChDrN,0BACRsN,IAAc,EACdC,KAA0E,EACpE;QACN,MAAM,IAAI5T,MACR;IAEJ;IAEA,0DAA0D;IAC1D,MAAgB6T,WAAWC,KAM1B,EAAiB;QAChB,MAAM,IAAI9T,MACR;IAEJ;IAEA;;;;;GAKC,GACD,MAAgBkG,iBACdrF,GAAoB,EACpBC,GAAqB,EACrBwB,KAAqB,EACrBuC,KAAyB,EACP;QAClB,OAAO,IAAI,CAACkL,MAAM,CAAClP,KAAKC,KAAKwB,OAAOuC;IACtC;IAEUqI,qBAA8B;QACtC,OAAO6G,qBAAM;IACf;IAEUC,aACRnT,GAAsC,EACrB;QACjB,OAAO,CAAEA,CAAAA,eAAeoT,qBAAe,AAAD,IAAK,IAAIA,qBAAe,CAACpT,OAAOA;IACxE;IAEUqT,aACRpT,GAAsC,EACpB;QAClB,OAAO,CAAEA,CAAAA,eAAeqT,sBAAgB,AAAD,IAAK,IAAIA,sBAAgB,CAACrT,OAAOA;IAC1E;IAEOsT,oBAAwC;QAC7C,MAAMC,UAAU,IAAI,CAACC,kBAAkB;QACvC,IAAI,IAAI,CAAClK,aAAa,CAACC,qBAAqB,EAAE;YAC5C,MAAM,EACJkK,sBAAsB,EACvB,GAAGjV,QAAQ;YACZ,OAAOiV,uBAAuBF;QAChC;QACA,OAAOA;IACT;IAEQC,qBAAyC;QAC/C,4EAA4E;QAC5E,2EAA2E;QAC3E,sEAAsE;QACtE,uEAAuE;QACvE,IAAI,CAAC1J,OAAO,GAAGpB,KAAK,CAAC,CAACnF;YACpBqE,QAAQF,KAAK,CAAC,4BAA4BnE;QAC5C;QAEA,MAAMgQ,UAAU,KAAK,CAACD;QAEtB,OAAO,CAACvT,KAAKC,KAAKC,YAChBsT,QAAQ,IAAI,CAACL,YAAY,CAACnT,MAAM,IAAI,CAACqT,YAAY,CAACpT,MAAMC;IAC5D;IAEA,MAAa4C,WAAW,EACtB6Q,OAAO,EACPC,iBAAiB,EACjBC,IAAI,EAKL,EAAE;QACD,MAAMC,SAASC,IAAAA,uCAA0B,EAAC;YACxCrN,KAAKiN;YACLxM,SAASyM;QACX;QAEA,MAAMJ,UAAU,IAAI,CAACD,iBAAiB;QACtC,MAAMC,QACJ,IAAIJ,qBAAe,CAACU,OAAO9T,GAAG,GAC9B,IAAIsT,sBAAgB,CAACQ,OAAO7T,GAAG;QAEjC,MAAM6T,OAAO7T,GAAG,CAAC+T,WAAW;QAE5B,IACEF,OAAO7T,GAAG,CAACgU,SAAS,CAAC,sBAAsB,iBAC3C,CAAEH,CAAAA,OAAO7T,GAAG,CAACO,UAAU,KAAK,OAAOqT,KAAKK,sBAAsB,AAAD,GAC7D;YACA,MAAM,IAAI/U,MAAM,CAAC,iBAAiB,EAAE2U,OAAO7T,GAAG,CAACO,UAAU,EAAE;QAC7D;IACF;IAEA,MAAayD,OACXjE,GAAsC,EACtCC,GAAsC,EACtCE,QAAgB,EAChBsB,KAA0B,EAC1BvB,SAAkC,EAClCiU,WAAW,KAAK,EACD;QACf,OAAO,KAAK,CAAClQ,OACX,IAAI,CAACkP,YAAY,CAACnT,MAClB,IAAI,CAACqT,YAAY,CAACpT,MAClBE,UACAsB,OACAvB,WACAiU;IAEJ;IAEA,MAAaC,aACXpU,GAAsC,EACtCC,GAAsC,EACtCE,QAAgB,EAChBsB,KAAsB,EACE;QACxB,OAAO,KAAK,CAAC2S,aACX,IAAI,CAACjB,YAAY,CAACnT,MAClB,IAAI,CAACqT,YAAY,CAACpT,MAClBE,UACAsB;IAEJ;IAEA,MAAgB4S,0BACd/C,GAAsD,EACtD9N,GAAiB,EACjB;QACA,MAAM,EAAExD,GAAG,EAAEC,GAAG,EAAEwB,KAAK,EAAE,GAAG6P;QAC5B,MAAMgD,QAAQrU,IAAIO,UAAU,KAAK;QAEjC,IAAI8T,SAAS,IAAI,CAAC/G,kBAAkB,CAACC,GAAG,EAAE;YACxC,IAAI,IAAI,CAAC9L,UAAU,CAACC,GAAG,EAAE;gBACvB,MAAM,IAAI,CAACqR,UAAU,CAAC;oBACpBzO,MAAMgQ,2CAAgC;oBACtCC,YAAY;oBACZ9N,KAAK1G,IAAI0G,GAAG;gBACd,GAAGiC,KAAK,CAAC,KAAO;YAClB;YAEA,IACE,IAAI,CAACvE,qBAAqB,GAAGqQ,QAAQ,CAACF,2CAAgC,GACtE;gBACA,MAAM,IAAI,CAAC7P,eAAe,CAAC;oBACzB1E;oBACAC;oBACAwB,OAAOA,SAAS,CAAC;oBACjBkD,QAAQ,CAAC;oBACTJ,MAAMgQ,2CAAgC;oBACtC3P,UAAU;gBACZ;gBACA,OAAO;YACT;QACF;QACA,OAAO,KAAK,CAACyP,0BAA0B/C,KAAK9N;IAC9C;IAEA,MAAakC,YACXlC,GAAiB,EACjBxD,GAAsC,EACtCC,GAAsC,EACtCE,QAAgB,EAChBsB,KAA0B,EAC1BiT,UAAoB,EACL;QACf,OAAO,KAAK,CAAChP,YACXlC,KACA,IAAI,CAAC2P,YAAY,CAACnT,MAClB,IAAI,CAACqT,YAAY,CAACpT,MAClBE,UACAsB,OACAiT;IAEJ;IAEA,MAAaC,kBACXnR,GAAiB,EACjBxD,GAAsC,EACtCC,GAAsC,EACtCE,QAAgB,EAChBsB,KAAsB,EACE;QACxB,OAAO,KAAK,CAACkT,kBACXnR,KACA,IAAI,CAAC2P,YAAY,CAACnT,MAClB,IAAI,CAACqT,YAAY,CAACpT,MAClBE,UACAsB;IAEJ;IAEA,MAAaJ,UACXrB,GAAsC,EACtCC,GAAsC,EACtCC,SAAkC,EAClCwU,UAAoB,EACL;QACf,OAAO,KAAK,CAACrT,UACX,IAAI,CAAC8R,YAAY,CAACnT,MAClB,IAAI,CAACqT,YAAY,CAACpT,MAClBC,WACAwU;IAEJ;IAEUE,wBAAmD;QAC3D,IAAI,IAAI,CAACvU,WAAW,EAAE,OAAO;QAC7B,MAAMwU,WAA+BpW,QAAQ,IAAI,CAACkL,sBAAsB;QACxE,OAAOkL;IACT;IAEA,yDAAyD,GACzD,AAAU5O,gBAAmD;YAExC4O;QADnB,MAAMA,WAAW,IAAI,CAACD,qBAAqB;QAC3C,MAAM5O,aAAa6O,6BAAAA,uBAAAA,SAAU7O,UAAU,qBAApB6O,oBAAsB,CAAC,IAAI;QAC9C,IAAI,CAAC7O,YAAY;YACf;QACF;QAEA,OAAO;YACLhC,OAAOpF,qBAAqBoH;YAC5BzB,MAAM;QACR;IACF;IAEUH,wBAAkC;QAC1C,MAAMyQ,WAAW,IAAI,CAACD,qBAAqB;QAC3C,IAAI,CAACC,UAAU;YACb,OAAO,EAAE;QACX;QAEA,OAAO7N,OAAOoD,IAAI,CAACyK,SAASC,SAAS;IACvC;IAEA;;;;GAIC,GACD,AAAUC,oBAAoBpQ,MAI7B,EAMQ;QACP,MAAMkQ,WAAW,IAAI,CAACD,qBAAqB;QAC3C,IAAI,CAACC,UAAU;YACb,OAAO;QACT;QAEA,IAAIG;QAEJ,IAAI;YACFA,YAAYC,IAAAA,wCAAmB,EAAC9C,IAAAA,oCAAiB,EAACxN,OAAOJ,IAAI;QAC/D,EAAE,OAAOf,KAAK;YACZ,OAAO;QACT;QAEA,IAAI0R,WAAWvQ,OAAOqB,UAAU,GAC5B6O,SAAS7O,UAAU,CAACgP,UAAU,GAC9BH,SAASC,SAAS,CAACE,UAAU;QAEjC,IAAI,CAACE,UAAU;YACb,IAAI,CAACvQ,OAAOqB,UAAU,EAAE;gBACtB,MAAM,IAAI2M,wBAAiB,CAACqC;YAC9B;YACA,OAAO;QACT;QAEA,OAAO;YACLG,MAAMD,SAASC,IAAI;YACnBC,OAAOF,SAASG,KAAK,CAACrM,GAAG,CAAC,CAACsM,OAAS1L,IAAAA,UAAI,EAAC,IAAI,CAAC/I,OAAO,EAAEyU;YACvDC,MAAM,AAACL,CAAAA,SAASK,IAAI,IAAI,EAAE,AAAD,EAAGvM,GAAG,CAAC,CAACwM,UAAa,CAAA;oBAC5C,GAAGA,OAAO;oBACVC,UAAU7L,IAAAA,UAAI,EAAC,IAAI,CAAC/I,OAAO,EAAE2U,QAAQC,QAAQ;gBAC/C,CAAA;YACAC,QACER,SAASQ,MAAM,IACfR,SAASQ,MAAM,CAAC1M,GAAG,CAAC,CAACwM;gBACnB,OAAO;oBACL,GAAGA,OAAO;oBACVC,UAAU7L,IAAAA,UAAI,EAAC,IAAI,CAAC/I,OAAO,EAAE2U,QAAQC,QAAQ;gBAC/C;YACF;YACFxX,KAAKiX,SAASjX,GAAG;QACnB;IACF;IAEA;;;;GAIC,GACD,MAAgB0X,cAAcxV,QAAgB,EAAoB;QAChE,MAAMtB,OAAO,IAAI,CAACkW,mBAAmB,CAAC;YAAExQ,MAAMpE;YAAU6F,YAAY;QAAK;QACzE,OAAOzC,QAAQ1E,QAAQA,KAAKuW,KAAK,CAAC5D,MAAM,GAAG;IAC7C;IAEA;;;;GAIC,GACD,MAAgB/K,iBAAiBsL,IAAa,EAAE,CAAC;IACjD,MAAgB6D,mBAAmBC,OAIlC,EAAE,CAAC;IAEJ;;;;;GAKC,GACD,MAAgBlP,cAAchC,MAM7B,EAAE;QACD,IAAI3G,QAAQC,GAAG,CAACC,YAAY,EAAE;YAC5B,MAAM,IAAIiB,MACR;QAEJ;QAEA,0DAA0D;QAC1D,IACE2W,IAAAA,mCAAyB,EAACnR,OAAOiC,OAAO,EAAE,IAAI,CAAClF,UAAU,CAACiO,YAAY,EACnEoG,oBAAoB,EACvB;YACA,OAAO;gBACLlP,UAAU,IAAImP,SAAS,MAAM;oBAAE7O,SAAS;wBAAE,qBAAqB;oBAAI;gBAAE;YACvE;QACF;QAEA,IAAIT;QAEJ,IAAI,IAAI,CAACpG,UAAU,CAAC2V,0BAA0B,EAAE;YAC9CvP,MAAMZ,IAAAA,2BAAc,EAACnB,OAAOiC,OAAO,EAAE;QACvC,OAAO;YACL,mEAAmE;YACnE,MAAMnF,QAAQyU,IAAAA,mCAAsB,EAACvR,OAAOiB,MAAM,CAACnE,KAAK,EAAE0U,QAAQ;YAClE,MAAMC,SAASzR,OAAOiB,MAAM,CAACnE,KAAK,CAAC+N,YAAY;YAE/C9I,MAAM,GAAGZ,IAAAA,2BAAc,EAACnB,OAAOiC,OAAO,EAAE,gBAAgB,GAAG,EACzD,IAAI,CAACmJ,aAAa,IAAI,YACvB,CAAC,EAAE,IAAI,CAACsG,IAAI,GAAGD,SAAS,CAAC,CAAC,EAAEA,QAAQ,GAAG,KAAKzR,OAAOiB,MAAM,CAACzF,QAAQ,GACjEsB,QAAQ,CAAC,CAAC,EAAEA,OAAO,GAAG,IACtB;QACJ;QAEA,IAAI,CAACiF,IAAItG,UAAU,CAAC,SAAS;YAC3B,MAAM,IAAIjB,MACR;QAEJ;QAEA,MAAMoF,OAGF,CAAC;QAEL,MAAMyB,aAAa,IAAI,CAACC,aAAa;QACrC,IAAI,CAACD,YAAY;YACf,OAAO;gBAAE8B,UAAU;YAAM;QAC3B;QACA,IAAI,CAAE,MAAM,IAAI,CAAC6N,aAAa,CAAC3P,WAAWzB,IAAI,GAAI;YAChD,OAAO;gBAAEuD,UAAU;YAAM;QAC3B;QAEA,MAAM,IAAI,CAACrB,gBAAgB,CAAC9B,OAAOiC,OAAO,CAACF,GAAG;QAC9C,MAAM4P,iBAAiB,IAAI,CAACvB,mBAAmB,CAAC;YAC9CxQ,MAAMyB,WAAWzB,IAAI;YACrByB,YAAY;QACd;QAEA,IAAI,CAACsQ,gBAAgB;YACnB,MAAM,IAAIC,8BAAuB;QACnC;QAEA,MAAMC,SAAS,AAAC7R,CAAAA,OAAOiC,OAAO,CAAC4P,MAAM,IAAI,KAAI,EAAGC,WAAW;QAC3D,MAAM,EAAEC,GAAG,EAAE,GAAGjY,QAAQ;QAExB,MAAM8H,SAAS,MAAMmQ,IAAI;YACvB7V,SAAS,IAAI,CAACA,OAAO;YACrBsU,MAAMmB,eAAenB,IAAI;YACzBC,OAAOkB,eAAelB,KAAK;YAC3BuB,mBAAmBL;YACnB1P,SAAS;gBACPO,SAASxC,OAAOiC,OAAO,CAACO,OAAO;gBAC/BqP;gBACAlW,YAAY;oBACVsW,UAAU,IAAI,CAACtW,UAAU,CAACsW,QAAQ;oBAClC/S,MAAM,IAAI,CAACvD,UAAU,CAACuD,IAAI;oBAC1BgT,eAAe,IAAI,CAACvW,UAAU,CAACuW,aAAa;oBAC5CtO,cAAc,IAAI,CAACjI,UAAU,CAACiI,YAAY;gBAC5C;gBACA7B,KAAKA;gBACLnC;gBACA9D,MAAMqF,IAAAA,2BAAc,EAACnB,OAAOiC,OAAO,EAAE;gBACrCkQ,QAAQC,IAAAA,mCAAsB,EAACpS,OAAOkC,QAAQ,CAAC3D,gBAAgB;gBAC/D8T,WAAW,IAAI,CAACC,YAAY;YAC9B;YACAC,UAAU;YACVC,WAAWxS,OAAOwS,SAAS;QAC7B;QAEA,IAAI,CAAC,IAAI,CAACzV,UAAU,CAACC,GAAG,EAAE;YACxB4E,OAAOyQ,SAAS,CAACrO,KAAK,CAAC,CAAChB;gBACtBE,QAAQF,KAAK,CAAC,CAAC,sCAAsC,CAAC,EAAEA;YAC1D;QACF;QAEA,IAAI,CAACpB,QAAQ;YACX,IAAI,CAAClF,SAAS,CAACsD,OAAOiC,OAAO,EAAEjC,OAAOkC,QAAQ,EAAElC,OAAOiB,MAAM;YAC7D,OAAO;gBAAEkC,UAAU;YAAK;QAC1B;QAEA,sDAAsD;QACtD,IAAIvB,OAAOM,QAAQ,CAACM,OAAO,CAACiQ,GAAG,CAAC,eAAe;YAC7C,MAAMC,UAAU9Q,OAAOM,QAAQ,CAACM,OAAO,CACpCmQ,YAAY,GACZC,OAAO,CAAC,CAACC,sBACRC,IAAAA,0BAAkB,EAACD;YAGvB,2BAA2B;YAC3BjR,OAAOM,QAAQ,CAACM,OAAO,CAACuQ,MAAM,CAAC;YAE/B,mCAAmC;YACnC,KAAK,MAAMC,UAAUN,QAAS;gBAC5B9Q,OAAOM,QAAQ,CAACM,OAAO,CAACyQ,MAAM,CAAC,cAAcD;YAC/C;YAEA,+BAA+B;YAC/BzT,IAAAA,2BAAc,EAACS,OAAOiC,OAAO,EAAE,oBAAoByQ;QACrD;QAEA,OAAO9Q;IACT;IAsGUuG,uBAA0C;YAKhD,kBACA;QALF,IAAI,IAAI,CAAC+K,sBAAsB,EAAE;YAC/B,OAAO,IAAI,CAACA,sBAAsB;QACpC;QACA,IACE,EAAA,mBAAA,IAAI,CAACnW,UAAU,qBAAf,iBAAiBC,GAAG,OACpB,sBAAA,IAAI,CAAC4H,aAAa,qBAAlB,oBAAoB5H,GAAG,KACvB3D,QAAQC,GAAG,CAAC6Z,QAAQ,KAAK,iBACzB9Z,QAAQC,GAAG,CAAC8Z,UAAU,KAAKC,iCAAsB,EACjD;YACA,IAAI,CAACH,sBAAsB,GAAG;gBAC5BI,SAAS;gBACTC,QAAQ,CAAC;gBACTpP,eAAe,CAAC;gBAChBqP,gBAAgB,EAAE;gBAClBC,SAAS;oBACPC,eAAe5Z,QAAQ,UAAU6Z,WAAW,CAAC,IAAInC,QAAQ,CAAC;oBAC1DoC,uBAAuB9Z,QAAQ,UAC5B6Z,WAAW,CAAC,IACZnC,QAAQ,CAAC;oBACZqC,0BAA0B/Z,QAAQ,UAC/B6Z,WAAW,CAAC,IACZnC,QAAQ,CAAC;gBACd;YACF;YACA,OAAO,IAAI,CAAC0B,sBAAsB;QACpC;QAEA,IAAI,CAACA,sBAAsB,GAAGxK,IAAAA,0BAAY,EACxCzD,IAAAA,UAAI,EAAC,IAAI,CAAC/I,OAAO,EAAE4X,6BAAkB;QAGvC,OAAO,IAAI,CAACZ,sBAAsB;IACpC;IAEU9O,oBAAyD;QACjE,OAAOoH,IAAAA,iBAAS,IAAGC,KAAK,CAACC,8BAAkB,CAACtH,iBAAiB,EAAE;YAC7D,MAAM8L,WAAWxH,IAAAA,0BAAY,EAACzD,IAAAA,UAAI,EAAC,IAAI,CAAC/I,OAAO,EAAE6X,0BAAe;YAEhE,IAAI9K,WAAWiH,SAASjH,QAAQ,IAAI;gBAClCC,aAAa,EAAE;gBACf8K,YAAY,EAAE;gBACdC,UAAU,EAAE;YACd;YAEA,IAAI5Z,MAAMC,OAAO,CAAC2O,WAAW;gBAC3BA,WAAW;oBACTC,aAAa,EAAE;oBACf8K,YAAY/K;oBACZgL,UAAU,EAAE;gBACd;YACF;YAEA,OAAO;gBAAE,GAAG/D,QAAQ;gBAAEjH;YAAS;QACjC;IACF;IAEUiL,kBACR7Y,GAAoB,EACpBE,SAAiC,EACjC4Y,YAAsB,EACtB;YAEiB9Y;QADjB,6BAA6B;QAC7B,MAAM+Y,WAAW/Y,EAAAA,+BAAAA,IAAImH,OAAO,CAAC,oBAAoB,qBAAhCnH,6BAAkCyU,QAAQ,CAAC,YACxD,UACA;QAEJ,4DAA4D;QAC5D,MAAMvO,UACJ,IAAI,CAAC6J,aAAa,IAAI,IAAI,CAACsG,IAAI,GAC3B,GAAG0C,SAAS,GAAG,EAAE,IAAI,CAAChJ,aAAa,CAAC,CAAC,EAAE,IAAI,CAACsG,IAAI,GAAGrW,IAAI0G,GAAG,EAAE,GAC5D,IAAI,CAACpG,UAAU,CAACiI,YAAY,CAACsH,eAAe,GAC1C,CAAC,QAAQ,EAAE7P,IAAImH,OAAO,CAAC6R,IAAI,IAAI,cAAchZ,IAAI0G,GAAG,EAAE,GACtD1G,IAAI0G,GAAG;QAEfxC,IAAAA,2BAAc,EAAClE,KAAK,WAAWkG;QAC/BhC,IAAAA,2BAAc,EAAClE,KAAK,aAAa;YAAE,GAAGE,UAAUuB,KAAK;QAAC;QACtDyC,IAAAA,2BAAc,EAAClE,KAAK,gBAAgB+Y;QAEpC,IAAI,CAACD,cAAc;YACjB5U,IAAAA,2BAAc,EAAClE,KAAK,gBAAgBiZ,IAAAA,6BAAgB,EAACjZ,IAAIwB,eAAe;QAC1E;IACF;IAEA,MAAgBkD,gBAAgBC,MAU/B,EAAoC;QACnC,IAAI3G,QAAQC,GAAG,CAACC,YAAY,EAAE;YAC5B,MAAM,IAAIiB,MACR;QAEJ;QACA,IAAI+Z;QAEJ,MAAM,EAAEzX,KAAK,EAAE8C,IAAI,EAAEP,KAAK,EAAE,GAAGW;QAE/B,IAAI,CAACX,OACH,MAAM,IAAI,CAAC4R,kBAAkB,CAAC;YAC5BrR;YACAK,UAAUD,OAAOC,QAAQ;YACzB8B,KAAK/B,OAAO3E,GAAG,CAAC0G,GAAG;QACrB;QACFwS,WAAW,IAAI,CAACnE,mBAAmB,CAAC;YAClCxQ;YACAyB,YAAY;QACd;QAEA,IAAI,CAACkT,UAAU;YACb,OAAO;QACT;QAEA,6DAA6D;QAC7D,MAAMC,oBAAoB,CAAC,CAAC1X,MAAMiR,aAAa;QAC/C,MAAM0G,aAAa,IAAIC,IACrBvT,IAAAA,2BAAc,EAACnB,OAAO3E,GAAG,EAAE,cAAc,KACzC;QAEF,MAAMsZ,cAAcpD,IAAAA,mCAAsB,EAAC;YACzC,GAAGlP,OAAOuS,WAAW,CAACH,WAAWI,YAAY,CAAC;YAC9C,GAAG/X,KAAK;YACR,GAAGkD,OAAOA,MAAM;QAClB,GAAGwR,QAAQ;QAEX,IAAIgD,mBAAmB;YACrBxU,OAAO3E,GAAG,CAACmH,OAAO,CAAC,gBAAgB,GAAG;QACxC;QACAiS,WAAWK,MAAM,GAAGH;QACpB,MAAM5S,MAAM0S,WAAWjD,QAAQ;QAE/B,IAAI,CAACzP,IAAItG,UAAU,CAAC,SAAS;YAC3B,MAAM,IAAIjB,MACR;QAEJ;QAEA,MAAM,EAAEuX,GAAG,EAAE,GAAGjY,QAAQ;QACxB,MAAM8H,SAAS,MAAMmQ,IAAI;YACvB7V,SAAS,IAAI,CAACA,OAAO;YACrBsU,MAAM+D,SAAS/D,IAAI;YACnBC,OAAO8D,SAAS9D,KAAK;YACrBuB,mBAAmBuC;YACnBtS,SAAS;gBACPO,SAASxC,OAAO3E,GAAG,CAACmH,OAAO;gBAC3BqP,QAAQ7R,OAAO3E,GAAG,CAACwW,MAAM;gBACzBlW,YAAY;oBACVsW,UAAU,IAAI,CAACtW,UAAU,CAACsW,QAAQ;oBAClC/S,MAAM,IAAI,CAACvD,UAAU,CAACuD,IAAI;oBAC1BgT,eAAe,IAAI,CAACvW,UAAU,CAACuW,aAAa;gBAC9C;gBACAnQ;gBACAnC,MAAM;oBACJ4Q,MAAMxQ,OAAOJ,IAAI;oBACjB,GAAII,OAAOA,MAAM,IAAI;wBAAEA,QAAQA,OAAOA,MAAM;oBAAC,CAAC;gBAChD;gBACAlE,MAAMqF,IAAAA,2BAAc,EAACnB,OAAO3E,GAAG,EAAE;gBACjC8W,QAAQC,IAAAA,mCAAsB,EAACpS,OAAO1E,GAAG,CAACiD,gBAAgB;gBAC1D8T,WAAW,IAAI,CAACC,YAAY;YAC9B;YACAC,UAAU;YACVlH,SAASrL,OAAOqL,OAAO;YACvBmH,WAAWxS,OAAOwS,SAAS;YAC3BlU,kBACE,AAACgJ,WAAmByN,kBAAkB,IACtC5T,IAAAA,2BAAc,EAACnB,OAAO3E,GAAG,EAAE;YAC7B2Z,0BAA0B7T,IAAAA,2BAAc,EACtCnB,OAAO3E,GAAG,EACV;QAEJ;QAEA,IAAIuG,OAAOqT,YAAY,EAAE;YACvBjV,OAAO3E,GAAG,CAAC4Z,YAAY,GAAGrT,OAAOqT,YAAY;QAC/C;QAEA,IAAI,CAACjV,OAAO1E,GAAG,CAACO,UAAU,IAAImE,OAAO1E,GAAG,CAACO,UAAU,GAAG,KAAK;YACzDmE,OAAO1E,GAAG,CAACO,UAAU,GAAG+F,OAAOM,QAAQ,CAACQ,MAAM;YAC9C1C,OAAO1E,GAAG,CAAC4Z,aAAa,GAAGtT,OAAOM,QAAQ,CAACiT,UAAU;QACvD;QAEA,8CAA8C;QAE9CvT,OAAOM,QAAQ,CAACM,OAAO,CAAC4S,OAAO,CAAC,CAACvX,OAAOuE;YACtC,yDAAyD;YACzD,IAAIA,IAAIiT,WAAW,OAAO,cAAc;gBACtC,qFAAqF;gBACrF,KAAK,MAAMrC,UAAUF,IAAAA,0BAAkB,EAACjV,OAAQ;oBAC9CmC,OAAO1E,GAAG,CAACga,YAAY,CAAClT,KAAK4Q;gBAC/B;YACF,OAAO;gBACLhT,OAAO1E,GAAG,CAACga,YAAY,CAAClT,KAAKvE;YAC/B;QACF;QAEA,MAAM,EAAEU,gBAAgB,EAAE,GAAGyB,OAAO1E,GAAG;QACvC,IAAIsG,OAAOM,QAAQ,CAACpG,IAAI,EAAE;YACxB,MAAM6G,IAAAA,gCAAkB,EAACf,OAAOM,QAAQ,CAACpG,IAAI,EAAEyC;QACjD,OAAO;YACLA,iBAAiBqE,GAAG;QACtB;QAEA,OAAOhB;IACT;IAEA,IAAcsD,gBAAwB;QACpC,IAAI,IAAI,CAACqQ,cAAc,EAAE;YACvB,OAAO,IAAI,CAACA,cAAc;QAC5B;QACA,MAAMrQ,gBAAgBD,IAAAA,UAAI,EAAC,IAAI,CAAC/I,OAAO,EAAEsZ,2BAAgB;QACzD,IAAI,CAACD,cAAc,GAAGrQ;QACtB,OAAOA;IACT;IAEA,MAAgBuQ,2BACdrI,IAAa,EAC6B;QAC1C,uEAAuE;QACvE,sBAAsB;QACtB,OAAO;IACT;IAEA,MAAgBjN,8BACd,GAAGuV,IAAqD,EACxD;QACA,MAAM,KAAK,CAACvV,iCAAiCuV;QAE7C,uFAAuF;QACvF,IAAI,CAAC,IAAI,CAAC3Y,UAAU,CAACC,GAAG,EAAE;YACxB,IAAI,CAAC8D,QAAQ,CAAC4U,IAAI,CAAC,EAAE;QACvB;IACF;IAEUC,cAAcC,QAA6B,EAAE;QACrD,IAAI,CAAC1a,gBAAgB,CAAC2a,GAAG,CAACD;IAC5B;IAEA,MAAME,QAAuB;QAC3B,MAAM,IAAI,CAAC5a,gBAAgB,CAAC6a,MAAM;IACpC;IAEUC,uBAAkC;QAC1C,IAAI,CAACC,iBAAiB,KAAK,IAAI,CAACC,uBAAuB;QACvD,OAAO,IAAI,CAACD,iBAAiB;IAC/B;IAEQC,0BAA0B;QAChC,IAAI,IAAI,CAACxa,WAAW,EAAE;YACpB,MAAM,IAAIya,8BAAc,CACtB;QAEJ;QAEA,MAAMC,UAAU,IAAIC,oBAAW,CAAC;YAAEhL,SAASnI,QAAQF,KAAK;QAAC;QAEzD,kEAAkE;QAClE,IAAI,CAAC2S,aAAa,CAAC,IAAMS,QAAQE,QAAQ;QAEzC,OAAOF,QAAQ/D,SAAS;IAC1B;AACF"}