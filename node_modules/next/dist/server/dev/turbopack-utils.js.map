{"version":3,"sources":["../../../src/server/dev/turbopack-utils.ts"],"sourcesContent":["import type { NextConfigComplete } from '../config-shared'\nimport loadJsConfig from '../../build/load-jsconfig'\nimport type {\n  ServerFields,\n  SetupOpts,\n} from '../lib/router-utils/setup-dev-bundler'\nimport type {\n  Issue,\n  StyledString,\n  TurbopackResult,\n  Endpoint,\n  Entrypoints as RawEntrypoints,\n  Update as TurbopackUpdate,\n  WrittenEndpoint,\n} from '../../build/swc/types'\nimport {\n  decodeMagicIdentifier,\n  MAGIC_IDENTIFIER_REGEX,\n} from '../../shared/lib/magic-identifier'\nimport { bold, green, magenta, red } from '../../lib/picocolors'\nimport {\n  type HMR_ACTION_TYPES,\n  HMR_ACTIONS_SENT_TO_BROWSER,\n} from './hot-reloader-types'\nimport * as Log from '../../build/output/log'\nimport type { PropagateToWorkersField } from '../lib/router-utils/types'\nimport type { TurbopackManifestLoader } from './turbopack/manifest-loader'\nimport type { AppRoute, Entrypoints, PageRoute } from './turbopack/types'\nimport {\n  type EntryKey,\n  getEntryKey,\n  splitEntryKey,\n} from './turbopack/entry-key'\nimport type ws from 'next/dist/compiled/ws'\nimport isInternal from '../../shared/lib/is-internal'\nimport { isMetadataRoute } from '../../lib/metadata/is-metadata-route'\nimport type { CustomRoutes } from '../../lib/load-custom-routes'\n\nexport async function getTurbopackJsConfig(\n  dir: string,\n  nextConfig: NextConfigComplete\n) {\n  const { jsConfig } = await loadJsConfig(dir, nextConfig)\n  return jsConfig ?? { compilerOptions: {} }\n}\n\n// An error generated from emitted Turbopack issues. This can include build\n// errors caused by issues with user code.\nexport class ModuleBuildError extends Error {\n  name = 'ModuleBuildError'\n}\n\n// An error caused by an internal issue in Turbopack. These should be written\n// to a log file and details should not be shown to the user.\nexport class TurbopackInternalError extends Error {\n  name = 'TurbopackInternalError'\n\n  constructor(cause: Error) {\n    super(cause.message)\n    this.stack = cause.stack\n  }\n}\n\n/**\n * Thin stopgap workaround layer to mimic existing wellknown-errors-plugin in webpack's build\n * to emit certain type of errors into cli.\n */\nexport function isWellKnownError(issue: Issue): boolean {\n  const { title } = issue\n  const formattedTitle = renderStyledStringToErrorAnsi(title)\n  // TODO: add more well known errors\n  if (\n    formattedTitle.includes('Module not found') ||\n    formattedTitle.includes('Unknown module type')\n  ) {\n    return true\n  }\n\n  return false\n}\n\nconst onceErrorSet = new Set()\n/**\n * Check if given issue is a warning to be display only once.\n * This mimics behavior of get-page-static-info's warnOnce.\n * @param issue\n * @returns\n */\nfunction shouldEmitOnceWarning(issue: Issue): boolean {\n  const { severity, title, stage } = issue\n  if (severity === 'warning' && title.value === 'Invalid page configuration') {\n    if (onceErrorSet.has(issue)) {\n      return false\n    }\n    onceErrorSet.add(issue)\n  }\n  if (\n    severity === 'warning' &&\n    stage === 'config' &&\n    renderStyledStringToErrorAnsi(issue.title).includes(\"can't be external\")\n  ) {\n    if (onceErrorSet.has(issue)) {\n      return false\n    }\n    onceErrorSet.add(issue)\n  }\n\n  return true\n}\n\n/// Print out an issue to the console which should not block\n/// the build by throwing out or blocking error overlay.\nexport function printNonFatalIssue(issue: Issue) {\n  if (isRelevantWarning(issue) && shouldEmitOnceWarning(issue)) {\n    Log.warn(formatIssue(issue))\n  }\n}\n\nfunction isNodeModulesIssue(issue: Issue): boolean {\n  if (issue.severity === 'warning' && issue.stage === 'config') {\n    // Override for the externalize issue\n    // `Package foo (serverExternalPackages or default list) can't be external`\n    if (\n      renderStyledStringToErrorAnsi(issue.title).includes(\"can't be external\")\n    ) {\n      return false\n    }\n  }\n\n  return (\n    issue.severity === 'warning' &&\n    (issue.filePath.match(/^(?:.*[\\\\/])?node_modules(?:[\\\\/].*)?$/) !== null ||\n      // Ignore Next.js itself when running next directly in the monorepo where it is not inside\n      // node_modules anyway.\n      // TODO(mischnic) prevent matches when this is published to npm\n      issue.filePath.startsWith('[project]/packages/next/'))\n  )\n}\n\nexport function isRelevantWarning(issue: Issue): boolean {\n  return issue.severity === 'warning' && !isNodeModulesIssue(issue)\n}\n\nexport function formatIssue(issue: Issue) {\n  const { filePath, title, description, source } = issue\n  let { documentationLink } = issue\n  let formattedTitle = renderStyledStringToErrorAnsi(title).replace(\n    /\\n/g,\n    '\\n    '\n  )\n\n  // TODO: Use error codes to identify these\n  // TODO: Generalize adapting Turbopack errors to Next.js errors\n  if (formattedTitle.includes('Module not found')) {\n    // For compatiblity with webpack\n    // TODO: include columns in webpack errors.\n    documentationLink = 'https://nextjs.org/docs/messages/module-not-found'\n  }\n\n  let formattedFilePath = filePath\n    .replace('[project]/', './')\n    .replaceAll('/./', '/')\n    .replace('\\\\\\\\?\\\\', '')\n\n  let message = ''\n\n  if (source && source.range) {\n    const { start } = source.range\n    message = `${formattedFilePath}:${start.line + 1}:${\n      start.column + 1\n    }\\n${formattedTitle}`\n  } else if (formattedFilePath) {\n    message = `${formattedFilePath}\\n${formattedTitle}`\n  } else {\n    message = formattedTitle\n  }\n  message += '\\n'\n\n  if (\n    source?.range &&\n    source.source.content &&\n    // ignore Next.js/React internals, as these can often be huge bundled files.\n    !isInternal(filePath)\n  ) {\n    const { start, end } = source.range\n    const { codeFrameColumns } = require('next/dist/compiled/babel/code-frame')\n\n    message +=\n      codeFrameColumns(\n        source.source.content,\n        {\n          start: {\n            line: start.line + 1,\n            column: start.column + 1,\n          },\n          end: {\n            line: end.line + 1,\n            column: end.column + 1,\n          },\n        },\n        { forceColor: true }\n      ).trim() + '\\n\\n'\n  }\n\n  if (description) {\n    message += renderStyledStringToErrorAnsi(description) + '\\n\\n'\n  }\n\n  // TODO: make it possible to enable this for debugging, but not in tests.\n  // if (detail) {\n  //   message += renderStyledStringToErrorAnsi(detail) + '\\n\\n'\n  // }\n\n  // TODO: Include a trace from the issue.\n\n  if (documentationLink) {\n    message += documentationLink + '\\n\\n'\n  }\n\n  return message\n}\n\ntype IssueKey = `${Issue['severity']}-${Issue['filePath']}-${string}-${string}`\nexport type IssuesMap = Map<IssueKey, Issue>\nexport type EntryIssuesMap = Map<EntryKey, IssuesMap>\nexport type TopLevelIssuesMap = IssuesMap\n\nfunction getIssueKey(issue: Issue): IssueKey {\n  return `${issue.severity}-${issue.filePath}-${JSON.stringify(\n    issue.title\n  )}-${JSON.stringify(issue.description)}`\n}\n\nexport function processTopLevelIssues(\n  currentTopLevelIssues: TopLevelIssuesMap,\n  result: TurbopackResult\n) {\n  currentTopLevelIssues.clear()\n\n  for (const issue of result.issues) {\n    const issueKey = getIssueKey(issue)\n    currentTopLevelIssues.set(issueKey, issue)\n  }\n}\n\nexport function processIssues(\n  currentEntryIssues: EntryIssuesMap,\n  key: EntryKey,\n  result: TurbopackResult,\n  throwIssue: boolean,\n  logErrors: boolean\n) {\n  const newIssues = new Map<IssueKey, Issue>()\n  currentEntryIssues.set(key, newIssues)\n\n  const relevantIssues = new Set()\n\n  for (const issue of result.issues) {\n    if (\n      issue.severity !== 'error' &&\n      issue.severity !== 'fatal' &&\n      issue.severity !== 'warning'\n    )\n      continue\n\n    const issueKey = getIssueKey(issue)\n    newIssues.set(issueKey, issue)\n\n    if (issue.severity !== 'warning') {\n      if (throwIssue) {\n        const formatted = formatIssue(issue)\n        relevantIssues.add(formatted)\n      }\n      // if we throw the issue it will most likely get handed and logged elsewhere\n      else if (logErrors && isWellKnownError(issue)) {\n        const formatted = formatIssue(issue)\n        Log.error(formatted)\n      }\n    }\n  }\n\n  if (relevantIssues.size && throwIssue) {\n    throw new ModuleBuildError([...relevantIssues].join('\\n\\n'))\n  }\n}\n\nexport function renderStyledStringToErrorAnsi(string: StyledString): string {\n  function decodeMagicIdentifiers(str: string): string {\n    return str.replaceAll(MAGIC_IDENTIFIER_REGEX, (ident) => {\n      try {\n        return magenta(`{${decodeMagicIdentifier(ident)}}`)\n      } catch (e) {\n        return magenta(`{${ident} (decoding failed: ${e})}`)\n      }\n    })\n  }\n\n  switch (string.type) {\n    case 'text':\n      return decodeMagicIdentifiers(string.value)\n    case 'strong':\n      return bold(red(decodeMagicIdentifiers(string.value)))\n    case 'code':\n      return green(decodeMagicIdentifiers(string.value))\n    case 'line':\n      return string.value.map(renderStyledStringToErrorAnsi).join('')\n    case 'stack':\n      return string.value.map(renderStyledStringToErrorAnsi).join('\\n')\n    default:\n      throw new Error('Unknown StyledString type', string)\n  }\n}\n\nconst MILLISECONDS_IN_NANOSECOND = BigInt(1_000_000)\n\nexport function msToNs(ms: number): bigint {\n  return BigInt(Math.floor(ms)) * MILLISECONDS_IN_NANOSECOND\n}\n\nexport type ChangeSubscriptions = Map<\n  EntryKey,\n  Promise<AsyncIterableIterator<TurbopackResult>>\n>\n\nexport type HandleWrittenEndpoint = (\n  key: EntryKey,\n  result: TurbopackResult<WrittenEndpoint>\n) => void\n\nexport type StartChangeSubscription = (\n  key: EntryKey,\n  includeIssues: boolean,\n  endpoint: Endpoint,\n  makePayload: (\n    change: TurbopackResult\n  ) => Promise<HMR_ACTION_TYPES> | HMR_ACTION_TYPES | void,\n  onError?: (e: Error) => Promise<HMR_ACTION_TYPES> | HMR_ACTION_TYPES | void\n) => Promise<void>\n\nexport type StopChangeSubscription = (key: EntryKey) => Promise<void>\n\nexport type SendHmr = (id: string, payload: HMR_ACTION_TYPES) => void\n\nexport type StartBuilding = (\n  id: string,\n  requestUrl: string | undefined,\n  forceRebuild: boolean\n) => () => void\n\nexport type ReadyIds = Set<string>\n\nexport type ClientState = {\n  clientIssues: EntryIssuesMap\n  hmrPayloads: Map<string, HMR_ACTION_TYPES>\n  turbopackUpdates: TurbopackUpdate[]\n  subscriptions: Map<string, AsyncIterator<any>>\n}\n\nexport type ClientStateMap = WeakMap<ws, ClientState>\n\n// hooks only used by the dev server.\ntype HandleRouteTypeHooks = {\n  handleWrittenEndpoint: HandleWrittenEndpoint\n  subscribeToChanges: StartChangeSubscription\n}\n\nexport async function handleRouteType({\n  dev,\n  page,\n  pathname,\n  route,\n  currentEntryIssues,\n  entrypoints,\n  manifestLoader,\n  readyIds,\n  devRewrites,\n  productionRewrites,\n  hooks,\n  logErrors,\n}: {\n  dev: boolean\n  page: string\n  pathname: string\n  route: PageRoute | AppRoute\n\n  currentEntryIssues: EntryIssuesMap\n  entrypoints: Entrypoints\n  manifestLoader: TurbopackManifestLoader\n  devRewrites: SetupOpts['fsChecker']['rewrites'] | undefined\n  productionRewrites: CustomRoutes['rewrites'] | undefined\n  logErrors: boolean\n\n  readyIds?: ReadyIds // dev\n\n  hooks?: HandleRouteTypeHooks // dev\n}) {\n  const shouldCreateWebpackStats = process.env.TURBOPACK_STATS != null\n\n  switch (route.type) {\n    case 'page': {\n      const clientKey = getEntryKey('pages', 'client', page)\n      const serverKey = getEntryKey('pages', 'server', page)\n\n      try {\n        if (entrypoints.global.app) {\n          const key = getEntryKey('pages', 'server', '_app')\n\n          const writtenEndpoint = await entrypoints.global.app.writeToDisk()\n          hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n          processIssues(\n            currentEntryIssues,\n            key,\n            writtenEndpoint,\n            false,\n            logErrors\n          )\n        }\n        await manifestLoader.loadBuildManifest('_app')\n        await manifestLoader.loadPagesManifest('_app')\n\n        if (entrypoints.global.document) {\n          const key = getEntryKey('pages', 'server', '_document')\n\n          const writtenEndpoint =\n            await entrypoints.global.document.writeToDisk()\n          hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n          processIssues(\n            currentEntryIssues,\n            key,\n            writtenEndpoint,\n            false,\n            logErrors\n          )\n        }\n        await manifestLoader.loadPagesManifest('_document')\n\n        const writtenEndpoint = await route.htmlEndpoint.writeToDisk()\n        hooks?.handleWrittenEndpoint(serverKey, writtenEndpoint)\n\n        const type = writtenEndpoint?.type\n\n        await manifestLoader.loadBuildManifest(page)\n        await manifestLoader.loadPagesManifest(page)\n        if (type === 'edge') {\n          await manifestLoader.loadMiddlewareManifest(page, 'pages')\n        } else {\n          manifestLoader.deleteMiddlewareManifest(serverKey)\n        }\n        await manifestLoader.loadFontManifest('/_app', 'pages')\n        await manifestLoader.loadFontManifest(page, 'pages')\n        await manifestLoader.loadLoadableManifest(page, 'pages')\n\n        if (shouldCreateWebpackStats) {\n          await manifestLoader.loadWebpackStats(page, 'pages')\n        }\n\n        await manifestLoader.writeManifests({\n          devRewrites,\n          productionRewrites,\n          entrypoints,\n        })\n\n        processIssues(\n          currentEntryIssues,\n          serverKey,\n          writtenEndpoint,\n          false,\n          logErrors\n        )\n      } finally {\n        if (dev) {\n          // TODO subscriptions should only be caused by the WebSocket connections\n          // otherwise we don't known when to unsubscribe and this leaking\n          hooks?.subscribeToChanges(\n            serverKey,\n            false,\n            route.dataEndpoint,\n            () => {\n              // Report the next compilation again\n              readyIds?.delete(pathname)\n              return {\n                event: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ONLY_CHANGES,\n                pages: [page],\n              }\n            },\n            (e) => {\n              return {\n                action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n                data: `error in ${page} data subscription: ${e}`,\n              }\n            }\n          )\n          hooks?.subscribeToChanges(\n            clientKey,\n            false,\n            route.htmlEndpoint,\n            () => {\n              return {\n                event: HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES,\n              }\n            },\n            (e) => {\n              return {\n                action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n                data: `error in ${page} html subscription: ${e}`,\n              }\n            }\n          )\n          if (entrypoints.global.document) {\n            hooks?.subscribeToChanges(\n              getEntryKey('pages', 'server', '_document'),\n              false,\n              entrypoints.global.document,\n              () => {\n                return {\n                  action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n                  data: '_document has changed (page route)',\n                }\n              },\n              (e) => {\n                return {\n                  action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n                  data: `error in _document subscription (page route): ${e}`,\n                }\n              }\n            )\n          }\n        }\n      }\n\n      break\n    }\n    case 'page-api': {\n      const key = getEntryKey('pages', 'server', page)\n\n      const writtenEndpoint = await route.endpoint.writeToDisk()\n      hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n\n      const type = writtenEndpoint.type\n\n      await manifestLoader.loadPagesManifest(page)\n      if (type === 'edge') {\n        await manifestLoader.loadMiddlewareManifest(page, 'pages')\n      } else {\n        manifestLoader.deleteMiddlewareManifest(key)\n      }\n      await manifestLoader.loadLoadableManifest(page, 'pages')\n\n      await manifestLoader.writeManifests({\n        devRewrites,\n        productionRewrites,\n        entrypoints,\n      })\n\n      processIssues(currentEntryIssues, key, writtenEndpoint, true, logErrors)\n\n      break\n    }\n    case 'app-page': {\n      const key = getEntryKey('app', 'server', page)\n\n      const writtenEndpoint = await route.htmlEndpoint.writeToDisk()\n      hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n\n      if (dev) {\n        // TODO subscriptions should only be caused by the WebSocket connections\n        // otherwise we don't known when to unsubscribe and this leaking\n        hooks?.subscribeToChanges(\n          key,\n          true,\n          route.rscEndpoint,\n          (change) => {\n            if (change.issues.some((issue) => issue.severity === 'error')) {\n              // Ignore any updates that has errors\n              // There will be another update without errors eventually\n              return\n            }\n            // Report the next compilation again\n            readyIds?.delete(pathname)\n            return {\n              action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES,\n            }\n          },\n          () => {\n            return {\n              action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES,\n            }\n          }\n        )\n      }\n\n      const type = writtenEndpoint.type\n\n      if (type === 'edge') {\n        await manifestLoader.loadMiddlewareManifest(page, 'app')\n      } else {\n        manifestLoader.deleteMiddlewareManifest(key)\n      }\n\n      await manifestLoader.loadAppBuildManifest(page)\n      await manifestLoader.loadBuildManifest(page, 'app')\n      await manifestLoader.loadAppPathsManifest(page)\n      await manifestLoader.loadActionManifest(page)\n      await manifestLoader.loadLoadableManifest(page, 'app')\n      await manifestLoader.loadFontManifest(page, 'app')\n\n      if (shouldCreateWebpackStats) {\n        await manifestLoader.loadWebpackStats(page, 'app')\n      }\n\n      await manifestLoader.writeManifests({\n        devRewrites,\n        productionRewrites,\n        entrypoints,\n      })\n\n      processIssues(currentEntryIssues, key, writtenEndpoint, dev, logErrors)\n\n      break\n    }\n    case 'app-route': {\n      const key = getEntryKey('app', 'server', page)\n\n      const writtenEndpoint = await route.endpoint.writeToDisk()\n      hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n\n      const type = writtenEndpoint.type\n\n      await manifestLoader.loadAppPathsManifest(page)\n\n      if (type === 'edge') {\n        await manifestLoader.loadMiddlewareManifest(page, 'app')\n      } else {\n        manifestLoader.deleteMiddlewareManifest(key)\n      }\n\n      await manifestLoader.writeManifests({\n        devRewrites,\n        productionRewrites,\n        entrypoints,\n      })\n      processIssues(currentEntryIssues, key, writtenEndpoint, true, logErrors)\n\n      break\n    }\n    default: {\n      throw new Error(`unknown route type ${(route as any).type} for ${page}`)\n    }\n  }\n}\n\n/**\n * Maintains a mapping between entrypoins and the corresponding client asset paths.\n */\nexport class AssetMapper {\n  private entryMap: Map<EntryKey, Set<string>> = new Map()\n  private assetMap: Map<string, Set<EntryKey>> = new Map()\n\n  /**\n   * Overrides asset paths for a key and updates the mapping from path to key.\n   *\n   * @param key\n   * @param assetPaths asset paths relative to the .next directory\n   */\n  setPathsForKey(key: EntryKey, assetPaths: string[]): void {\n    this.delete(key)\n\n    const newAssetPaths = new Set(assetPaths)\n    this.entryMap.set(key, newAssetPaths)\n\n    for (const assetPath of newAssetPaths) {\n      let assetPathKeys = this.assetMap.get(assetPath)\n      if (!assetPathKeys) {\n        assetPathKeys = new Set()\n        this.assetMap.set(assetPath, assetPathKeys)\n      }\n\n      assetPathKeys!.add(key)\n    }\n  }\n\n  /**\n   * Deletes the key and any asset only referenced by this key.\n   *\n   * @param key\n   */\n  delete(key: EntryKey) {\n    for (const assetPath of this.getAssetPathsByKey(key)) {\n      const assetPathKeys = this.assetMap.get(assetPath)\n\n      assetPathKeys?.delete(key)\n\n      if (!assetPathKeys?.size) {\n        this.assetMap.delete(assetPath)\n      }\n    }\n\n    this.entryMap.delete(key)\n  }\n\n  getAssetPathsByKey(key: EntryKey): string[] {\n    return Array.from(this.entryMap.get(key) ?? [])\n  }\n\n  getKeysByAsset(path: string): EntryKey[] {\n    return Array.from(this.assetMap.get(path) ?? [])\n  }\n\n  keys(): IterableIterator<EntryKey> {\n    return this.entryMap.keys()\n  }\n}\n\nexport function hasEntrypointForKey(\n  entrypoints: Entrypoints,\n  key: EntryKey,\n  assetMapper: AssetMapper | undefined\n): boolean {\n  const { type, page } = splitEntryKey(key)\n\n  switch (type) {\n    case 'app':\n      return entrypoints.app.has(page)\n    case 'pages':\n      switch (page) {\n        case '_app':\n          return entrypoints.global.app != null\n        case '_document':\n          return entrypoints.global.document != null\n        case '_error':\n          return entrypoints.global.error != null\n        default:\n          return entrypoints.page.has(page)\n      }\n    case 'root':\n      switch (page) {\n        case 'middleware':\n          return entrypoints.global.middleware != null\n        case 'instrumentation':\n          return entrypoints.global.instrumentation != null\n        default:\n          return false\n      }\n    case 'assets':\n      if (!assetMapper) {\n        return false\n      }\n\n      return assetMapper\n        .getKeysByAsset(page)\n        .some((pageKey) =>\n          hasEntrypointForKey(entrypoints, pageKey, assetMapper)\n        )\n    default: {\n      // validation that we covered all cases, this should never run.\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const _: never = type\n      return false\n    }\n  }\n}\n\n// hooks only used by the dev server.\ntype HandleEntrypointsHooks = {\n  handleWrittenEndpoint: HandleWrittenEndpoint\n  propagateServerField: (\n    field: PropagateToWorkersField,\n    args: any\n  ) => Promise<void>\n  sendHmr: SendHmr\n  startBuilding: StartBuilding\n  subscribeToChanges: StartChangeSubscription\n  unsubscribeFromChanges: StopChangeSubscription\n  unsubscribeFromHmrEvents: (client: ws, id: string) => void\n}\n\ntype HandleEntrypointsDevOpts = {\n  assetMapper: AssetMapper\n  changeSubscriptions: ChangeSubscriptions\n  clients: Set<ws>\n  clientStates: ClientStateMap\n  serverFields: ServerFields\n\n  hooks: HandleEntrypointsHooks\n}\n\nexport async function handleEntrypoints({\n  entrypoints,\n\n  currentEntrypoints,\n\n  currentEntryIssues,\n  manifestLoader,\n  devRewrites,\n  productionRewrites,\n  logErrors,\n  dev,\n}: {\n  entrypoints: TurbopackResult<RawEntrypoints>\n\n  currentEntrypoints: Entrypoints\n\n  currentEntryIssues: EntryIssuesMap\n  manifestLoader: TurbopackManifestLoader\n  devRewrites: SetupOpts['fsChecker']['rewrites'] | undefined\n  productionRewrites: CustomRoutes['rewrites'] | undefined\n  logErrors: boolean\n\n  dev?: HandleEntrypointsDevOpts\n}) {\n  currentEntrypoints.global.app = entrypoints.pagesAppEndpoint\n  currentEntrypoints.global.document = entrypoints.pagesDocumentEndpoint\n  currentEntrypoints.global.error = entrypoints.pagesErrorEndpoint\n\n  currentEntrypoints.global.instrumentation = entrypoints.instrumentation\n\n  currentEntrypoints.page.clear()\n  currentEntrypoints.app.clear()\n\n  for (const [pathname, route] of entrypoints.routes) {\n    switch (route.type) {\n      case 'page':\n      case 'page-api':\n        currentEntrypoints.page.set(pathname, route)\n        break\n      case 'app-page': {\n        route.pages.forEach((page) => {\n          currentEntrypoints.app.set(page.originalName, {\n            type: 'app-page',\n            ...page,\n          })\n        })\n        break\n      }\n      case 'app-route': {\n        currentEntrypoints.app.set(route.originalName, route)\n        break\n      }\n      default:\n        Log.info(`skipping ${pathname} (${route.type})`)\n        break\n    }\n  }\n\n  if (dev) {\n    await handleEntrypointsDevCleanup({\n      currentEntryIssues,\n      currentEntrypoints,\n\n      ...dev,\n    })\n  }\n\n  const { middleware, instrumentation } = entrypoints\n\n  // We check for explicit true/false, since it's initialized to\n  // undefined during the first loop (middlewareChanges event is\n  // unnecessary during the first serve)\n  if (currentEntrypoints.global.middleware && !middleware) {\n    const key = getEntryKey('root', 'server', 'middleware')\n    // Went from middleware to no middleware\n    await dev?.hooks.unsubscribeFromChanges(key)\n    currentEntryIssues.delete(key)\n    dev?.hooks.sendHmr('middleware', {\n      event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n    })\n  } else if (!currentEntrypoints.global.middleware && middleware) {\n    // Went from no middleware to middleware\n    dev?.hooks.sendHmr('middleware', {\n      event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n    })\n  }\n\n  currentEntrypoints.global.middleware = middleware\n\n  if (instrumentation) {\n    const processInstrumentation = async (\n      name: string,\n      prop: 'nodeJs' | 'edge'\n    ) => {\n      const key = getEntryKey('root', 'server', name)\n\n      const writtenEndpoint = await instrumentation[prop].writeToDisk()\n      dev?.hooks.handleWrittenEndpoint(key, writtenEndpoint)\n      processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n    }\n    await processInstrumentation('instrumentation.nodeJs', 'nodeJs')\n    await processInstrumentation('instrumentation.edge', 'edge')\n    await manifestLoader.loadMiddlewareManifest(\n      'instrumentation',\n      'instrumentation'\n    )\n    await manifestLoader.writeManifests({\n      devRewrites,\n      productionRewrites,\n      entrypoints: currentEntrypoints,\n    })\n\n    if (dev) {\n      dev.serverFields.actualInstrumentationHookFile = '/instrumentation'\n      await dev.hooks.propagateServerField(\n        'actualInstrumentationHookFile',\n        dev.serverFields.actualInstrumentationHookFile\n      )\n    }\n  } else {\n    if (dev) {\n      dev.serverFields.actualInstrumentationHookFile = undefined\n      await dev.hooks.propagateServerField(\n        'actualInstrumentationHookFile',\n        dev.serverFields.actualInstrumentationHookFile\n      )\n    }\n  }\n\n  if (middleware) {\n    const key = getEntryKey('root', 'server', 'middleware')\n\n    const endpoint = middleware.endpoint\n\n    async function processMiddleware() {\n      const writtenEndpoint = await endpoint.writeToDisk()\n      dev?.hooks.handleWrittenEndpoint(key, writtenEndpoint)\n      processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n      await manifestLoader.loadMiddlewareManifest('middleware', 'middleware')\n      if (dev) {\n        dev.serverFields.middleware = {\n          match: null as any,\n          page: '/',\n          matchers:\n            manifestLoader.getMiddlewareManifest(key)?.middleware['/'].matchers,\n        }\n      }\n    }\n    await processMiddleware()\n\n    if (dev) {\n      dev?.hooks.subscribeToChanges(\n        key,\n        false,\n        endpoint,\n        async () => {\n          const finishBuilding = dev.hooks.startBuilding(\n            'middleware',\n            undefined,\n            true\n          )\n          await processMiddleware()\n          await dev.hooks.propagateServerField(\n            'actualMiddlewareFile',\n            dev.serverFields.actualMiddlewareFile\n          )\n          await dev.hooks.propagateServerField(\n            'middleware',\n            dev.serverFields.middleware\n          )\n          await manifestLoader.writeManifests({\n            devRewrites,\n            productionRewrites,\n            entrypoints: currentEntrypoints,\n          })\n\n          finishBuilding?.()\n          return { event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES }\n        },\n        () => {\n          return {\n            event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n          }\n        }\n      )\n    }\n  } else {\n    manifestLoader.deleteMiddlewareManifest(\n      getEntryKey('root', 'server', 'middleware')\n    )\n    if (dev) {\n      dev.serverFields.actualMiddlewareFile = undefined\n      dev.serverFields.middleware = undefined\n    }\n  }\n\n  if (dev) {\n    await dev.hooks.propagateServerField(\n      'actualMiddlewareFile',\n      dev.serverFields.actualMiddlewareFile\n    )\n    await dev.hooks.propagateServerField(\n      'middleware',\n      dev.serverFields.middleware\n    )\n  }\n}\n\nasync function handleEntrypointsDevCleanup({\n  currentEntryIssues,\n  currentEntrypoints,\n\n  assetMapper,\n  changeSubscriptions,\n  clients,\n  clientStates,\n\n  hooks,\n}: {\n  currentEntrypoints: Entrypoints\n  currentEntryIssues: EntryIssuesMap\n} & HandleEntrypointsDevOpts) {\n  // this needs to be first as `hasEntrypointForKey` uses the `assetMapper`\n  for (const key of assetMapper.keys()) {\n    if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n      assetMapper.delete(key)\n    }\n  }\n\n  for (const key of changeSubscriptions.keys()) {\n    // middleware is handled separately\n    if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n      await hooks.unsubscribeFromChanges(key)\n    }\n  }\n\n  for (const [key] of currentEntryIssues) {\n    if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n      currentEntryIssues.delete(key)\n    }\n  }\n\n  for (const client of clients) {\n    const state = clientStates.get(client)\n    if (!state) {\n      continue\n    }\n\n    for (const key of state.clientIssues.keys()) {\n      if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n        state.clientIssues.delete(key)\n      }\n    }\n\n    for (const id of state.subscriptions.keys()) {\n      if (\n        !hasEntrypointForKey(\n          currentEntrypoints,\n          getEntryKey('assets', 'client', id),\n          assetMapper\n        )\n      ) {\n        hooks.unsubscribeFromHmrEvents(client, id)\n      }\n    }\n  }\n}\n\nexport async function handlePagesErrorRoute({\n  dev,\n  currentEntryIssues,\n  entrypoints,\n  manifestLoader,\n  devRewrites,\n  productionRewrites,\n  logErrors,\n\n  hooks,\n}: {\n  dev: boolean\n  currentEntryIssues: EntryIssuesMap\n  entrypoints: Entrypoints\n  manifestLoader: TurbopackManifestLoader\n  devRewrites: SetupOpts['fsChecker']['rewrites'] | undefined\n  productionRewrites: CustomRoutes['rewrites'] | undefined\n  logErrors: boolean\n\n  hooks?: HandleRouteTypeHooks // dev\n}) {\n  if (entrypoints.global.app) {\n    const key = getEntryKey('pages', 'server', '_app')\n\n    const writtenEndpoint = await entrypoints.global.app.writeToDisk()\n    hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n    if (dev) {\n      hooks?.subscribeToChanges(\n        key,\n        false,\n        entrypoints.global.app,\n        () => {\n          // There's a special case for this in `../client/page-bootstrap.ts`.\n          // https://github.com/vercel/next.js/blob/08d7a7e5189a835f5dcb82af026174e587575c0e/packages/next/src/client/page-bootstrap.ts#L69-L71\n          return { event: HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES }\n        },\n        () => {\n          return {\n            action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n            data: '_app has changed (error route)',\n          }\n        }\n      )\n    }\n    processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n  }\n  await manifestLoader.loadBuildManifest('_app')\n  await manifestLoader.loadPagesManifest('_app')\n  await manifestLoader.loadFontManifest('_app')\n\n  if (entrypoints.global.document) {\n    const key = getEntryKey('pages', 'server', '_document')\n\n    const writtenEndpoint = await entrypoints.global.document.writeToDisk()\n    hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n    if (dev) {\n      hooks?.subscribeToChanges(\n        key,\n        false,\n        entrypoints.global.document,\n        () => {\n          return {\n            action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n            data: '_document has changed (error route)',\n          }\n        },\n        (e) => {\n          return {\n            action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n            data: `error in _document subscription (error route): ${e}`,\n          }\n        }\n      )\n    }\n    processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n  }\n  await manifestLoader.loadPagesManifest('_document')\n\n  if (entrypoints.global.error) {\n    const key = getEntryKey('pages', 'server', '_error')\n\n    const writtenEndpoint = await entrypoints.global.error.writeToDisk()\n    hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n    if (dev) {\n      hooks?.subscribeToChanges(\n        key,\n        false,\n        entrypoints.global.error,\n        () => {\n          // There's a special case for this in `../client/page-bootstrap.ts`.\n          // https://github.com/vercel/next.js/blob/08d7a7e5189a835f5dcb82af026174e587575c0e/packages/next/src/client/page-bootstrap.ts#L69-L71\n          return { event: HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES }\n        },\n        (e) => {\n          return {\n            action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n            data: `error in _error subscription: ${e}`,\n          }\n        }\n      )\n    }\n    processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n  }\n  await manifestLoader.loadBuildManifest('_error')\n  await manifestLoader.loadPagesManifest('_error')\n  await manifestLoader.loadFontManifest('_error')\n\n  await manifestLoader.writeManifests({\n    devRewrites,\n    productionRewrites,\n    entrypoints,\n  })\n}\n\nexport function removeRouteSuffix(route: string): string {\n  return route.replace(/\\/route$/, '')\n}\n\nexport function addRouteSuffix(route: string): string {\n  return route + '/route'\n}\n\nexport function addMetadataIdToRoute(route: string): string {\n  return route + '/[__metadata_id__]'\n}\n\n// Since turbopack will create app pages/route entries based on the structure,\n// which means the entry keys are based on file names.\n// But for special metadata conventions we'll change the page/pathname to a different path.\n// So we need this helper to map the new path back to original turbopack entry key.\nexport function normalizedPageToTurbopackStructureRoute(\n  route: string,\n  ext: string | false\n): string {\n  let entrypointKey = route\n  if (isMetadataRoute(entrypointKey)) {\n    entrypointKey = entrypointKey.endsWith('/route')\n      ? entrypointKey.slice(0, -'/route'.length)\n      : entrypointKey\n\n    if (ext) {\n      if (entrypointKey.endsWith('/[__metadata_id__]')) {\n        entrypointKey = entrypointKey.slice(0, -'/[__metadata_id__]'.length)\n      }\n      if (entrypointKey.endsWith('/sitemap.xml') && ext !== '.xml') {\n        // For dynamic sitemap route, remove the extension\n        entrypointKey = entrypointKey.slice(0, -'.xml'.length)\n      }\n    }\n    entrypointKey = entrypointKey + '/route'\n  }\n  return entrypointKey\n}\n\nexport function isPersistentCachingEnabled(\n  config: NextConfigComplete\n): boolean {\n  return config.experimental.turbo?.unstablePersistentCaching || false\n}\n"],"names":["AssetMapper","ModuleBuildError","TurbopackInternalError","addMetadataIdToRoute","addRouteSuffix","formatIssue","getTurbopackJsConfig","handleEntrypoints","handlePagesErrorRoute","handleRouteType","hasEntrypointForKey","isPersistentCachingEnabled","isRelevantWarning","isWellKnownError","msToNs","normalizedPageToTurbopackStructureRoute","printNonFatalIssue","processIssues","processTopLevelIssues","removeRouteSuffix","renderStyledStringToErrorAnsi","dir","nextConfig","jsConfig","loadJsConfig","compilerOptions","Error","name","constructor","cause","message","stack","issue","title","formattedTitle","includes","onceErrorSet","Set","shouldEmitOnceWarning","severity","stage","value","has","add","Log","warn","isNodeModulesIssue","filePath","match","startsWith","description","source","documentationLink","replace","formattedFilePath","replaceAll","range","start","line","column","content","isInternal","end","codeFrameColumns","require","forceColor","trim","getIssueKey","JSON","stringify","currentTopLevelIssues","result","clear","issues","issueKey","set","currentEntryIssues","key","throwIssue","logErrors","newIssues","Map","relevantIssues","formatted","error","size","join","string","decodeMagicIdentifiers","str","MAGIC_IDENTIFIER_REGEX","ident","magenta","decodeMagicIdentifier","e","type","bold","red","green","map","MILLISECONDS_IN_NANOSECOND","BigInt","ms","Math","floor","dev","page","pathname","route","entrypoints","manifestLoader","readyIds","devRewrites","productionRewrites","hooks","shouldCreateWebpackStats","process","env","TURBOPACK_STATS","clientKey","getEntryKey","serverKey","global","app","writtenEndpoint","writeToDisk","handleWrittenEndpoint","loadBuildManifest","loadPagesManifest","document","htmlEndpoint","loadMiddlewareManifest","deleteMiddlewareManifest","loadFontManifest","loadLoadableManifest","loadWebpackStats","writeManifests","subscribeToChanges","dataEndpoint","delete","event","HMR_ACTIONS_SENT_TO_BROWSER","SERVER_ONLY_CHANGES","pages","action","RELOAD_PAGE","data","CLIENT_CHANGES","endpoint","rscEndpoint","change","some","SERVER_COMPONENT_CHANGES","loadAppBuildManifest","loadAppPathsManifest","loadActionManifest","setPathsForKey","assetPaths","newAssetPaths","entryMap","assetPath","assetPathKeys","assetMap","get","getAssetPathsByKey","Array","from","getKeysByAsset","path","keys","assetMapper","splitEntryKey","middleware","instrumentation","pageKey","_","currentEntrypoints","pagesAppEndpoint","pagesDocumentEndpoint","pagesErrorEndpoint","routes","forEach","originalName","info","handleEntrypointsDevCleanup","unsubscribeFromChanges","sendHmr","MIDDLEWARE_CHANGES","processInstrumentation","prop","serverFields","actualInstrumentationHookFile","propagateServerField","undefined","processMiddleware","matchers","getMiddlewareManifest","finishBuilding","startBuilding","actualMiddlewareFile","changeSubscriptions","clients","clientStates","client","state","clientIssues","id","subscriptions","unsubscribeFromHmrEvents","ext","entrypointKey","isMetadataRoute","endsWith","slice","length","config","experimental","turbo","unstablePersistentCaching"],"mappings":"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"}