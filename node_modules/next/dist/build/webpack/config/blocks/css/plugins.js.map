{"version":3,"sources":["../../../../../../src/build/webpack/config/blocks/css/plugins.ts"],"sourcesContent":["import { bold, red, underline, yellow } from '../../../../../lib/picocolors'\nimport { findConfig } from '../../../../../lib/find-config'\n\ntype CssPluginCollection_Array = (string | [string, boolean | object])[]\n\ntype CssPluginCollection_Object = { [key: string]: object | boolean }\n\ntype CssPluginCollection =\n  | CssPluginCollection_Array\n  | CssPluginCollection_Object\n\ntype CssPluginShape = [string, object | boolean | string]\n\nconst genericErrorText = 'Malformed PostCSS Configuration'\n\nfunction getError_NullConfig(pluginName: string) {\n  return `${red(\n    bold('Error')\n  )}: Your PostCSS configuration for '${pluginName}' cannot have ${bold(\n    'null'\n  )} configuration.\\nTo disable '${pluginName}', pass ${bold(\n    'false'\n  )}, otherwise, pass ${bold('true')} or a configuration object.`\n}\n\nfunction isIgnoredPlugin(pluginPath: string): boolean {\n  const ignoredRegex =\n    /(?:^|[\\\\/])(postcss-modules-values|postcss-modules-scope|postcss-modules-extract-imports|postcss-modules-local-by-default|postcss-modules)(?:[\\\\/]|$)/i\n  const match = ignoredRegex.exec(pluginPath)\n  if (match == null) {\n    return false\n  }\n\n  const plugin = match.pop()!\n  console.warn(\n    `${yellow(bold('Warning'))}: Please remove the ${underline(\n      plugin\n    )} plugin from your PostCSS configuration. ` +\n      `This plugin is automatically configured by Next.js.\\n` +\n      'Read more: https://nextjs.org/docs/messages/postcss-ignored-plugin'\n  )\n  return true\n}\n\nconst createLazyPostCssPlugin = (\n  fn: () => import('postcss').AcceptedPlugin\n): import('postcss').AcceptedPlugin => {\n  let result: any = undefined\n  const plugin = (...args: any[]) => {\n    if (result === undefined) result = fn() as any\n    if (result.postcss === true) {\n      return result(...args)\n    } else if (result.postcss) {\n      return result.postcss\n    }\n    return result\n  }\n  plugin.postcss = true\n  return plugin\n}\n\nasync function loadPlugin(\n  dir: string,\n  pluginName: string,\n  options: boolean | object | string\n): Promise<import('postcss').AcceptedPlugin | false> {\n  if (options === false || isIgnoredPlugin(pluginName)) {\n    return false\n  }\n\n  if (options == null) {\n    console.error(getError_NullConfig(pluginName))\n    throw new Error(genericErrorText)\n  }\n\n  const pluginPath = require.resolve(pluginName, { paths: [dir] })\n  if (isIgnoredPlugin(pluginPath)) {\n    return false\n  } else if (options === true) {\n    return createLazyPostCssPlugin(() => require(pluginPath))\n  } else {\n    if (typeof options === 'object' && Object.keys(options).length === 0) {\n      return createLazyPostCssPlugin(() => require(pluginPath))\n    }\n    return createLazyPostCssPlugin(() => require(pluginPath)(options))\n  }\n}\n\nfunction getDefaultPlugins(\n  supportedBrowsers: string[] | undefined,\n  disablePostcssPresetEnv: boolean\n): any[] {\n  return [\n    require.resolve('next/dist/compiled/postcss-flexbugs-fixes'),\n    disablePostcssPresetEnv\n      ? false\n      : [\n          require.resolve('next/dist/compiled/postcss-preset-env'),\n          {\n            browsers: supportedBrowsers ?? ['defaults'],\n            autoprefixer: {\n              // Disable legacy flexbox support\n              flexbox: 'no-2009',\n            },\n            // Enable CSS features that have shipped to the\n            // web platform, i.e. in 2+ browsers unflagged.\n            stage: 3,\n            features: {\n              'custom-properties': false,\n            },\n          },\n        ],\n  ].filter(Boolean)\n}\n\nexport async function getPostCssPlugins(\n  dir: string,\n  supportedBrowsers: string[] | undefined,\n  disablePostcssPresetEnv: boolean = false,\n  useLightningcss: boolean = false\n): Promise<import('postcss').AcceptedPlugin[]> {\n  let config = await findConfig<{ plugins: CssPluginCollection }>(\n    dir,\n    'postcss'\n  )\n\n  if (config == null) {\n    config = {\n      plugins: useLightningcss\n        ? []\n        : getDefaultPlugins(supportedBrowsers, disablePostcssPresetEnv),\n    }\n  }\n\n  if (typeof config === 'function') {\n    throw new Error(\n      `Your custom PostCSS configuration may not export a function. Please export a plain object instead.\\n` +\n        'Read more: https://nextjs.org/docs/messages/postcss-function'\n    )\n  }\n\n  // Warn user about configuration keys which are not respected\n  const invalidKey = Object.keys(config).find((key) => key !== 'plugins')\n  if (invalidKey) {\n    console.warn(\n      `${yellow(\n        bold('Warning')\n      )}: Your PostCSS configuration defines a field which is not supported (\\`${invalidKey}\\`). ` +\n        `Please remove this configuration value.`\n    )\n  }\n\n  // Enforce the user provided plugins if the configuration file is present\n  let plugins = config.plugins\n  if (plugins == null || typeof plugins !== 'object') {\n    throw new Error(\n      `Your custom PostCSS configuration must export a \\`plugins\\` key.`\n    )\n  }\n\n  if (!Array.isArray(plugins)) {\n    // Capture variable so TypeScript is happy\n    const pc = plugins\n\n    plugins = Object.keys(plugins).reduce((acc, curr) => {\n      const p = pc[curr]\n      if (typeof p === 'undefined') {\n        console.error(getError_NullConfig(curr))\n        throw new Error(genericErrorText)\n      }\n\n      acc.push([curr, p])\n      return acc\n    }, [] as CssPluginCollection_Array)\n  }\n\n  const parsed: CssPluginShape[] = []\n  plugins.forEach((plugin) => {\n    if (plugin == null) {\n      console.warn(\n        `${yellow(bold('Warning'))}: A ${bold(\n          'null'\n        )} PostCSS plugin was provided. This entry will be ignored.`\n      )\n    } else if (typeof plugin === 'string') {\n      parsed.push([plugin, true])\n    } else if (Array.isArray(plugin)) {\n      const pluginName = plugin[0]\n      const pluginConfig = plugin[1]\n      if (\n        typeof pluginName === 'string' &&\n        (typeof pluginConfig === 'boolean' ||\n          typeof pluginConfig === 'object' ||\n          typeof pluginConfig === 'string')\n      ) {\n        parsed.push([pluginName, pluginConfig])\n      } else {\n        if (typeof pluginName !== 'string') {\n          console.error(\n            `${red(\n              bold('Error')\n            )}: A PostCSS Plugin must be provided as a ${bold(\n              'string'\n            )}. Instead, we got: '${pluginName}'.\\n` +\n              'Read more: https://nextjs.org/docs/messages/postcss-shape'\n          )\n        } else {\n          console.error(\n            `${red(\n              bold('Error')\n            )}: A PostCSS Plugin was passed as an array but did not provide its configuration ('${pluginName}').\\n` +\n              'Read more: https://nextjs.org/docs/messages/postcss-shape'\n          )\n        }\n        throw new Error(genericErrorText)\n      }\n    } else if (typeof plugin === 'function') {\n      console.error(\n        `${red(\n          bold('Error')\n        )}: A PostCSS Plugin was passed as a function using require(), but it must be provided as a ${bold(\n          'string'\n        )}.\\nRead more: https://nextjs.org/docs/messages/postcss-shape`\n      )\n      throw new Error(genericErrorText)\n    } else {\n      console.error(\n        `${red(\n          bold('Error')\n        )}: An unknown PostCSS plugin was provided (${plugin}).\\n` +\n          'Read more: https://nextjs.org/docs/messages/postcss-shape'\n      )\n      throw new Error(genericErrorText)\n    }\n  })\n\n  const resolved = await Promise.all(\n    parsed.map((p) => loadPlugin(dir, p[0], p[1]))\n  )\n  const filtered: import('postcss').AcceptedPlugin[] = resolved.filter(\n    Boolean\n  ) as import('postcss').AcceptedPlugin[]\n\n  return filtered\n}\n"],"names":["getPostCssPlugins","genericErrorText","getError_NullConfig","pluginName","red","bold","isIgnoredPlugin","pluginPath","ignoredRegex","match","exec","plugin","pop","console","warn","yellow","underline","createLazyPostCssPlugin","fn","result","undefined","args","postcss","loadPlugin","dir","options","error","Error","require","resolve","paths","Object","keys","length","getDefaultPlugins","supportedBrowsers","disablePostcssPresetEnv","browsers","autoprefixer","flexbox","stage","features","filter","Boolean","useLightningcss","config","findConfig","plugins","invalidKey","find","key","Array","isArray","pc","reduce","acc","curr","p","push","parsed","forEach","pluginConfig","resolved","Promise","all","map","filtered"],"mappings":"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"}